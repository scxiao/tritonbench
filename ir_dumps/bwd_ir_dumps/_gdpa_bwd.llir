; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128:128:48-p9:192:256:256:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8:9"
target triple = "amdgcn-amd-amdhsa"

@global_smem = external addrspace(3) global [0 x i8], align 16

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare !dbg !4 float @llvm.exp2.f32(float) #0

; Function Attrs: nofree norecurse nounwind
define amdgpu_kernel void @_gdpa_bwd(ptr addrspace(1) inreg readonly captures(none) %0, ptr addrspace(1) inreg readonly captures(none) %1, ptr addrspace(1) inreg readonly captures(none) %2, ptr addrspace(1) inreg readonly captures(none) %3, ptr addrspace(1) inreg readonly captures(none) %4, ptr addrspace(1) inreg readonly captures(none) %5, ptr addrspace(1) inreg readonly captures(none) %6, ptr addrspace(1) inreg writeonly captures(none) %7, ptr addrspace(1) inreg writeonly captures(none) %8, ptr addrspace(1) inreg writeonly captures(none) %9, i32 inreg %10, i32 inreg %11, i32 inreg %12, i32 inreg %13, i32 inreg %14, i32 inreg %15, i32 inreg %16, i32 inreg %17, i32 inreg %18, i32 inreg %19, float inreg %20, ptr addrspace(1) inreg readnone captures(none) %21, ptr addrspace(1) inreg readnone captures(none) %22) local_unnamed_addr #1 !dbg !7 {
  %24 = tail call i32 @llvm.amdgcn.workgroup.id.z(), !dbg !8
  %25 = tail call i32 @llvm.amdgcn.workgroup.id.x(), !dbg !9
  %.frozen = freeze i32 %17, !dbg !10
  %26 = sdiv i32 %25, %.frozen, !dbg !10
  %27 = sext i32 %24 to i64, !dbg !11
  %28 = getelementptr i32, ptr addrspace(1) %1, i64 %27, !dbg !11
  %29 = load <1 x i32>, ptr addrspace(1) %28, align 4, !dbg !14
  %30 = getelementptr i8, ptr addrspace(1) %28, i64 4, !dbg !15
  %31 = load <1 x i32>, ptr addrspace(1) %30, align 4, !dbg !16
  %32 = extractelement <1 x i32> %31, i64 0, !dbg !17
  %33 = extractelement <1 x i32> %29, i64 0, !dbg !17
  %34 = sub i32 %32, %33, !dbg !17
  %35 = getelementptr i32, ptr addrspace(1) %3, i64 %27, !dbg !18
  %36 = load <1 x i32>, ptr addrspace(1) %35, align 4, !dbg !19
  %37 = getelementptr i8, ptr addrspace(1) %35, i64 4, !dbg !20
  %38 = load <1 x i32>, ptr addrspace(1) %37, align 4, !dbg !21
  %39 = extractelement <1 x i32> %38, i64 0, !dbg !22
  %40 = extractelement <1 x i32> %36, i64 0, !dbg !22
  %41 = sub i32 %39, %40, !dbg !22
  %42 = shl i32 %26, 7, !dbg !23
  %43 = tail call i32 @llvm.amdgcn.workitem.id.x(), !dbg !24
  %44 = and i32 %43, 255, !dbg !24
  %45 = lshr i32 %43, 3, !dbg !24
  %46 = and i32 %45, 31, !dbg !24
  %47 = or disjoint i32 %46, 32, !dbg !24
  %48 = icmp sle i32 %42, %41, !dbg !25
  %49 = icmp sle i32 %42, %34, !dbg !26
  %50 = or i1 %49, %48, !dbg !27
  br i1 %50, label %51, label %80, !dbg !28

51:                                               ; preds = %23
  %52 = extractelement <1 x i32> %36, i64 0, !dbg !19
  %53 = extractelement <1 x i32> %29, i64 0, !dbg !14
  %54 = mul i32 %26, %.frozen, !dbg !29
  %.decomposed = sub i32 %25, %54, !dbg !29
  %55 = getelementptr i32, ptr addrspace(1) %6, i64 %27, !dbg !30
  %56 = load <1 x i32>, ptr addrspace(1) %55, align 4, !dbg !31
  %57 = extractelement <1 x i32> %56, i64 0, !dbg !31
  %58 = sext i32 %.decomposed to i64, !dbg !32
  %59 = sext i32 %12 to i64, !dbg !33
  %60 = mul nsw i64 %58, %59, !dbg !33
  %61 = mul i32 %53, %10, !dbg !34
  %62 = sext i32 %61 to i64, !dbg !35
  %63 = add nsw i64 %60, %62, !dbg !35
  %64 = mul i32 %.decomposed, %13, !dbg !36
  %65 = mul i32 %52, %11, !dbg !37
  %66 = add i32 %64, %65, !dbg !38
  %67 = sext i32 %15 to i64, !dbg !39
  %68 = mul nsw i64 %58, %67, !dbg !39
  %69 = mul i32 %57, %14, !dbg !40
  %70 = sext i32 %69 to i64, !dbg !41
  %71 = getelementptr bfloat, ptr addrspace(1) %0, i64 %63, !dbg !42
  %72 = sext i32 %66 to i64, !dbg !43
  %73 = getelementptr bfloat, ptr addrspace(1) %2, i64 %72, !dbg !43
  %74 = getelementptr bfloat, ptr addrspace(1) %4, i64 %72, !dbg !44
  %75 = getelementptr bfloat, ptr addrspace(1) %5, i64 %68, !dbg !45
  %76 = getelementptr bfloat, ptr addrspace(1) %75, i64 %70, !dbg !45
  %77 = getelementptr bfloat, ptr addrspace(1) %7, i64 %63, !dbg !46
  %78 = getelementptr bfloat, ptr addrspace(1) %8, i64 %72, !dbg !47
  %79 = getelementptr bfloat, ptr addrspace(1) %9, i64 %72, !dbg !48
  br label %80, !dbg !28

80:                                               ; preds = %51, %23
  %81 = phi ptr addrspace(1) [ %71, %51 ], [ %0, %23 ], !dbg !13
  %82 = phi ptr addrspace(1) [ %73, %51 ], [ %2, %23 ], !dbg !13
  %83 = phi ptr addrspace(1) [ %74, %51 ], [ %4, %23 ], !dbg !13
  %84 = phi ptr addrspace(1) [ %76, %51 ], [ %5, %23 ], !dbg !13
  %85 = phi ptr addrspace(1) [ %77, %51 ], [ %7, %23 ], !dbg !13
  %86 = phi ptr addrspace(1) [ %78, %51 ], [ %8, %23 ], !dbg !13
  %87 = phi ptr addrspace(1) [ %79, %51 ], [ %9, %23 ], !dbg !13
  %88 = icmp slt i32 %42, %41, !dbg !49
  br i1 %88, label %89, label %3653, !dbg !50

89:                                               ; preds = %80
  %90 = and i32 %43, 31, !dbg !51
  %91 = and i32 %43, 192, !dbg !51
  %92 = lshr exact i32 %91, 1, !dbg !51
  %93 = or disjoint i32 %92, %90, !dbg !51
  %94 = or disjoint i32 %46, 64, !dbg !51
  %95 = or i32 %45, 96, !dbg !51
  %96 = or disjoint i32 %42, %93, !dbg !52
  %97 = or disjoint i32 %42, %46, !dbg !52
  %98 = or disjoint i32 %42, %47, !dbg !52
  %99 = or disjoint i32 %42, %94, !dbg !52
  %100 = or disjoint i32 %42, %95, !dbg !52
  %101 = and i32 %43, 32, !dbg !53
  %102 = icmp eq i32 %101, 0, !dbg !53
  %103 = lshr exact i32 %101, 2, !dbg !53
  %104 = or disjoint i32 %103, 16, !dbg !53
  %105 = or disjoint i32 %103, 32, !dbg !53
  %106 = or disjoint i32 %103, 48, !dbg !53
  %107 = shl nuw nsw i32 %43, 3, !dbg !53
  %108 = and i32 %107, 56, !dbg !53
  %109 = icmp slt i32 %96, %41, !dbg !54
  %110 = icmp slt i32 %97, %41, !dbg !54
  %111 = icmp slt i32 %98, %41, !dbg !54
  %112 = icmp slt i32 %99, %41, !dbg !54
  %113 = icmp slt i32 %100, %41, !dbg !54
  %114 = mul i32 %42, %11, !dbg !55
  %115 = mul i32 %11, %46, !dbg !55
  %116 = mul i32 %11, %47, !dbg !55
  %117 = mul i32 %11, %94, !dbg !55
  %118 = mul i32 %11, %95, !dbg !55
  %119 = sext i32 %114 to i64, !dbg !55
  %120 = getelementptr bfloat, ptr addrspace(1) %82, i64 %119, !dbg !55
  %121 = add i32 %115, %108, !dbg !56
  %122 = add i32 %116, %108, !dbg !56
  %123 = add i32 %117, %108, !dbg !56
  %124 = add i32 %118, %108, !dbg !56
  %125 = trunc i32 %11 to i16, !dbg !57
  %126 = and i16 %125, 16383, !dbg !57
  %127 = or disjoint i16 %126, 16384, !dbg !57
  %128 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %120, i16 %127, i32 2147483646, i32 159744), !dbg !57
  %129 = shl i32 %121, 1, !dbg !57
  %130 = select i1 %110, i32 %129, i32 -2147483648, !dbg !57
  %131 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %130, i32 0, i32 0), !dbg !57
  %132 = shl i32 %122, 1, !dbg !57
  %133 = select i1 %111, i32 %132, i32 -2147483648, !dbg !57
  %134 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %133, i32 0, i32 0), !dbg !57
  %135 = shl i32 %123, 1, !dbg !57
  %136 = select i1 %112, i32 %135, i32 -2147483648, !dbg !57
  %137 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %136, i32 0, i32 0), !dbg !57
  %138 = shl i32 %124, 1, !dbg !57
  %139 = select i1 %113, i32 %138, i32 -2147483648, !dbg !57
  %140 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %128, i32 %139, i32 0, i32 0), !dbg !57
  %141 = shl nuw nsw i32 %44, 4, !dbg !57
  %142 = and i32 %43, 112, !dbg !57
  %143 = xor i32 %141, %142, !dbg !57
  %144 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %143, !dbg !57
  store <4 x i32> %131, ptr addrspace(3) %144, align 16, !dbg !57
  %145 = getelementptr inbounds nuw i8, ptr addrspace(3) %144, i32 4096, !dbg !57
  store <4 x i32> %134, ptr addrspace(3) %145, align 16, !dbg !57
  %146 = getelementptr inbounds nuw i8, ptr addrspace(3) %144, i32 8192, !dbg !57
  store <4 x i32> %137, ptr addrspace(3) %146, align 16, !dbg !57
  %147 = getelementptr inbounds nuw i8, ptr addrspace(3) %144, i32 12288, !dbg !57
  store <4 x i32> %140, ptr addrspace(3) %147, align 16, !dbg !57
  fence syncscope("workgroup") release, !dbg !57
  tail call void @llvm.amdgcn.s.barrier(), !dbg !57
  fence syncscope("workgroup") acquire, !dbg !57
  %148 = shl nuw nsw i32 %90, 7, !dbg !57
  %149 = shl nuw nsw i32 %91, 6, !dbg !57
  %150 = and i32 %43, 14, !dbg !57
  %151 = shl nuw nsw i32 %150, 3, !dbg !57
  %152 = lshr exact i32 %101, 1, !dbg !57
  %153 = xor i32 %151, %152, !dbg !57
  %154 = or disjoint i32 %149, %153, !dbg !57
  %155 = or disjoint i32 %154, %148, !dbg !57
  %156 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %155, !dbg !57
  %157 = load <8 x bfloat>, ptr addrspace(3) %156, align 16, !dbg !57
  %158 = xor i32 %155, 32, !dbg !57
  %159 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %158, !dbg !57
  %160 = load <8 x bfloat>, ptr addrspace(3) %159, align 16, !dbg !57
  %161 = xor i32 %155, 64, !dbg !57
  %162 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %161, !dbg !57
  %163 = load <8 x bfloat>, ptr addrspace(3) %162, align 16, !dbg !57
  %164 = xor i32 %155, 96, !dbg !57
  %165 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %164, !dbg !57
  %166 = load <8 x bfloat>, ptr addrspace(3) %165, align 16, !dbg !57
  %167 = getelementptr bfloat, ptr addrspace(1) %83, i64 %119, !dbg !58
  %168 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %167, i16 %127, i32 2147483646, i32 159744), !dbg !59
  %169 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %168, i32 %130, i32 0, i32 0), !dbg !59
  %170 = bitcast <4 x i32> %169 to <8 x bfloat>, !dbg !59
  %171 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %168, i32 %133, i32 0, i32 0), !dbg !59
  %172 = bitcast <4 x i32> %171 to <8 x bfloat>, !dbg !59
  %173 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %168, i32 %136, i32 0, i32 0), !dbg !59
  %174 = bitcast <4 x i32> %173 to <8 x bfloat>, !dbg !59
  %175 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %168, i32 %139, i32 0, i32 0), !dbg !59
  %176 = bitcast <4 x i32> %175 to <8 x bfloat>, !dbg !59
  fence syncscope("workgroup") release, !dbg !59
  tail call void @llvm.amdgcn.s.barrier(), !dbg !59
  fence syncscope("workgroup") acquire, !dbg !59
  %177 = lshr exact i32 %142, 1, !dbg !59
  %178 = xor i32 %141, %177, !dbg !59
  %179 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %178, !dbg !59
  %180 = shufflevector <8 x bfloat> %170, <8 x bfloat> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !59
  store <4 x bfloat> %180, ptr addrspace(3) %179, align 8, !dbg !59
  %181 = getelementptr inbounds nuw i8, ptr addrspace(3) %179, i32 4096, !dbg !59
  %182 = shufflevector <8 x bfloat> %172, <8 x bfloat> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !59
  store <4 x bfloat> %182, ptr addrspace(3) %181, align 8, !dbg !59
  %183 = getelementptr inbounds nuw i8, ptr addrspace(3) %179, i32 8192, !dbg !59
  %184 = shufflevector <8 x bfloat> %174, <8 x bfloat> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !59
  store <4 x bfloat> %184, ptr addrspace(3) %183, align 8, !dbg !59
  %185 = getelementptr inbounds nuw i8, ptr addrspace(3) %179, i32 12288, !dbg !59
  %186 = shufflevector <8 x bfloat> %176, <8 x bfloat> poison, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !59
  store <4 x bfloat> %186, ptr addrspace(3) %185, align 8, !dbg !59
  %187 = xor i32 %178, 8, !dbg !59
  %188 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %187, !dbg !59
  %189 = shufflevector <8 x bfloat> %170, <8 x bfloat> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !59
  store <4 x bfloat> %189, ptr addrspace(3) %188, align 8, !dbg !59
  %190 = getelementptr inbounds nuw i8, ptr addrspace(3) %188, i32 4096, !dbg !59
  %191 = shufflevector <8 x bfloat> %172, <8 x bfloat> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !59
  store <4 x bfloat> %191, ptr addrspace(3) %190, align 8, !dbg !59
  %192 = getelementptr inbounds nuw i8, ptr addrspace(3) %188, i32 8192, !dbg !59
  %193 = shufflevector <8 x bfloat> %174, <8 x bfloat> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !59
  store <4 x bfloat> %193, ptr addrspace(3) %192, align 8, !dbg !59
  %194 = getelementptr inbounds nuw i8, ptr addrspace(3) %188, i32 12288, !dbg !59
  %195 = shufflevector <8 x bfloat> %176, <8 x bfloat> poison, <4 x i32> <i32 4, i32 5, i32 6, i32 7>, !dbg !59
  store <4 x bfloat> %195, ptr addrspace(3) %194, align 8, !dbg !59
  fence syncscope("workgroup") release, !dbg !59
  tail call void @llvm.amdgcn.s.barrier(), !dbg !59
  fence syncscope("workgroup") acquire, !dbg !59
  %196 = shl nuw nsw i32 %150, 2, !dbg !59
  %197 = or disjoint i32 %149, %196, !dbg !59
  %198 = xor i32 %197, %103, !dbg !59
  %199 = or disjoint i32 %198, %148, !dbg !59
  %200 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %199, !dbg !59
  %201 = load <4 x bfloat>, ptr addrspace(3) %200, align 8, !dbg !59
  %202 = getelementptr inbounds nuw i8, ptr addrspace(3) %200, i32 64, !dbg !59
  %203 = load <4 x bfloat>, ptr addrspace(3) %202, align 8, !dbg !59
  %204 = xor i32 %199, 16, !dbg !59
  %205 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %204, !dbg !59
  %206 = load <4 x bfloat>, ptr addrspace(3) %205, align 8, !dbg !59
  %207 = getelementptr inbounds nuw i8, ptr addrspace(3) %205, i32 64, !dbg !59
  %208 = load <4 x bfloat>, ptr addrspace(3) %207, align 8, !dbg !59
  %209 = xor i32 %199, 32, !dbg !59
  %210 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %209, !dbg !59
  %211 = load <4 x bfloat>, ptr addrspace(3) %210, align 8, !dbg !59
  %212 = getelementptr inbounds nuw i8, ptr addrspace(3) %210, i32 64, !dbg !59
  %213 = load <4 x bfloat>, ptr addrspace(3) %212, align 8, !dbg !59
  %214 = xor i32 %199, 48, !dbg !59
  %215 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %214, !dbg !59
  %216 = load <4 x bfloat>, ptr addrspace(3) %215, align 8, !dbg !59
  %217 = getelementptr inbounds nuw i8, ptr addrspace(3) %215, i32 64, !dbg !59
  %218 = load <4 x bfloat>, ptr addrspace(3) %217, align 8, !dbg !59
  %219 = add i32 %34, 63, !dbg !60
  %220 = mul i32 %10, %46, !dbg !63
  %221 = mul i32 %10, %47, !dbg !63
  %222 = add i32 %220, %108, !dbg !64
  %223 = add i32 %221, %108, !dbg !64
  %224 = mul i32 %14, %46, !dbg !65
  %225 = mul i32 %14, %47, !dbg !65
  %226 = add i32 %224, %108, !dbg !66
  %227 = add i32 %225, %108, !dbg !66
  %228 = icmp sgt i32 %219, 63, !dbg !67
  %229 = icmp slt i32 %46, %34, !dbg !68
  %230 = icmp slt i32 %47, %34, !dbg !68
  %231 = and i1 %229, %228, !dbg !67
  %232 = and i1 %230, %228, !dbg !67
  %233 = trunc i32 %10 to i16, !dbg !69
  %234 = and i16 %233, 16383, !dbg !69
  %235 = or disjoint i16 %234, 16384, !dbg !69
  %236 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %81, i16 %235, i32 2147483646, i32 159744), !dbg !69
  %237 = shl i32 %222, 1, !dbg !69
  %238 = select i1 %231, i32 %237, i32 -2147483648, !dbg !69
  %239 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %236, i32 %238, i32 0, i32 0), !dbg !69
  %240 = bitcast <4 x i32> %239 to <8 x bfloat>, !dbg !69
  %241 = shl i32 %223, 1, !dbg !69
  %242 = select i1 %232, i32 %241, i32 -2147483648, !dbg !69
  %243 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %236, i32 %242, i32 0, i32 0), !dbg !69
  %244 = bitcast <4 x i32> %243 to <8 x bfloat>, !dbg !69
  %245 = trunc i32 %14 to i16, !dbg !70
  %246 = and i16 %245, 16383, !dbg !70
  %247 = or disjoint i16 %246, 16384, !dbg !70
  %248 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %84, i16 %247, i32 2147483646, i32 159744), !dbg !70
  %249 = shl i32 %226, 1, !dbg !70
  %250 = select i1 %231, i32 %249, i32 -2147483648, !dbg !70
  %251 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %248, i32 %250, i32 0, i32 0), !dbg !70
  %252 = bitcast <4 x i32> %251 to <8 x bfloat>, !dbg !70
  %253 = shl i32 %227, 1, !dbg !70
  %254 = select i1 %232, i32 %253, i32 -2147483648, !dbg !70
  %255 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %248, i32 %254, i32 0, i32 0), !dbg !70
  %256 = bitcast <4 x i32> %255 to <8 x bfloat>, !dbg !70
  %257 = icmp sgt i32 %219, 127, !dbg !67
  br i1 %257, label %.lr.ph, label %.._crit_edge_crit_edge, !dbg !67

.._crit_edge_crit_edge:                           ; preds = %89
  %.pre = shl nuw nsw i32 %90, 1, !dbg !71
  %.pre258 = select i1 %102, i32 0, i32 1088, !dbg !71
  %.pre260 = or disjoint i32 %.pre258, %.pre, !dbg !71
  %.pre262 = xor i32 %.pre260, 272, !dbg !71
  %.pre264 = xor i32 %.pre260, 544, !dbg !71
  %.pre266 = xor i32 %.pre260, 816, !dbg !71
  %.pre268 = xor i32 %.pre260, 64, !dbg !71
  %.pre270 = xor i32 %.pre260, 336, !dbg !71
  %.pre272 = xor i32 %.pre260, 608, !dbg !71
  %.pre274 = xor i32 %.pre260, 880, !dbg !71
  %258 = shufflevector <8 x bfloat> %252, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %259 = shufflevector <8 x bfloat> %252, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %260 = shufflevector <8 x bfloat> %256, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %261 = shufflevector <8 x bfloat> %256, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %262 = shufflevector <8 x bfloat> %252, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %263 = shufflevector <8 x bfloat> %252, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %264 = shufflevector <8 x bfloat> %256, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %265 = shufflevector <8 x bfloat> %256, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %266 = shufflevector <8 x bfloat> %240, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %267 = shufflevector <8 x bfloat> %240, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %268 = shufflevector <8 x bfloat> %240, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %269 = shufflevector <8 x bfloat> %240, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %270 = shufflevector <8 x bfloat> %244, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %271 = shufflevector <8 x bfloat> %244, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %272 = shufflevector <8 x bfloat> %244, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %273 = shufflevector <8 x bfloat> %244, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  br label %._crit_edge, !dbg !67

.lr.ph:                                           ; preds = %89
  %274 = lshr i32 %219, 6, !dbg !72
  %275 = shl i32 %14, 6, !dbg !73
  %276 = shl i32 %10, 6, !dbg !74
  %277 = sext i32 %276 to i64
  %278 = sext i32 %275 to i64
  %279 = shl nuw nsw i32 %90, 1
  %280 = select i1 %102, i32 0, i32 1088
  %281 = or disjoint i32 %280, %279
  %282 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %281
  %283 = getelementptr inbounds nuw i8, ptr addrspace(3) %282, i32 128
  %284 = getelementptr inbounds nuw i8, ptr addrspace(3) %282, i32 2048
  %285 = getelementptr inbounds nuw i8, ptr addrspace(3) %282, i32 2176
  %286 = getelementptr inbounds nuw i8, ptr addrspace(3) %282, i32 4096
  %287 = getelementptr inbounds nuw i8, ptr addrspace(3) %282, i32 4224
  %288 = getelementptr inbounds nuw i8, ptr addrspace(3) %282, i32 6144
  %289 = getelementptr inbounds nuw i8, ptr addrspace(3) %282, i32 6272
  %290 = xor i32 %281, 272
  %291 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %290
  %292 = getelementptr inbounds nuw i8, ptr addrspace(3) %291, i32 128
  %293 = getelementptr inbounds nuw i8, ptr addrspace(3) %291, i32 2048
  %294 = getelementptr inbounds nuw i8, ptr addrspace(3) %291, i32 2176
  %295 = getelementptr inbounds nuw i8, ptr addrspace(3) %291, i32 4096
  %296 = getelementptr inbounds nuw i8, ptr addrspace(3) %291, i32 4224
  %297 = getelementptr inbounds nuw i8, ptr addrspace(3) %291, i32 6144
  %298 = getelementptr inbounds nuw i8, ptr addrspace(3) %291, i32 6272
  %299 = xor i32 %281, 544
  %300 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %299
  %301 = getelementptr inbounds nuw i8, ptr addrspace(3) %300, i32 128
  %302 = getelementptr inbounds nuw i8, ptr addrspace(3) %300, i32 2048
  %303 = getelementptr inbounds nuw i8, ptr addrspace(3) %300, i32 2176
  %304 = getelementptr inbounds nuw i8, ptr addrspace(3) %300, i32 4096
  %305 = getelementptr inbounds nuw i8, ptr addrspace(3) %300, i32 4224
  %306 = getelementptr inbounds nuw i8, ptr addrspace(3) %300, i32 6144
  %307 = getelementptr inbounds nuw i8, ptr addrspace(3) %300, i32 6272
  %308 = xor i32 %281, 816
  %309 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %308
  %310 = getelementptr inbounds nuw i8, ptr addrspace(3) %309, i32 128
  %311 = getelementptr inbounds nuw i8, ptr addrspace(3) %309, i32 2048
  %312 = getelementptr inbounds nuw i8, ptr addrspace(3) %309, i32 2176
  %313 = getelementptr inbounds nuw i8, ptr addrspace(3) %309, i32 4096
  %314 = getelementptr inbounds nuw i8, ptr addrspace(3) %309, i32 4224
  %315 = getelementptr inbounds nuw i8, ptr addrspace(3) %309, i32 6144
  %316 = getelementptr inbounds nuw i8, ptr addrspace(3) %309, i32 6272
  %317 = xor i32 %281, 64
  %318 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %317
  %319 = getelementptr inbounds nuw i8, ptr addrspace(3) %318, i32 128
  %320 = getelementptr inbounds nuw i8, ptr addrspace(3) %318, i32 2048
  %321 = getelementptr inbounds nuw i8, ptr addrspace(3) %318, i32 2176
  %322 = getelementptr inbounds nuw i8, ptr addrspace(3) %318, i32 4096
  %323 = getelementptr inbounds nuw i8, ptr addrspace(3) %318, i32 4224
  %324 = getelementptr inbounds nuw i8, ptr addrspace(3) %318, i32 6144
  %325 = getelementptr inbounds nuw i8, ptr addrspace(3) %318, i32 6272
  %326 = xor i32 %281, 336
  %327 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %326
  %328 = getelementptr inbounds nuw i8, ptr addrspace(3) %327, i32 128
  %329 = getelementptr inbounds nuw i8, ptr addrspace(3) %327, i32 2048
  %330 = getelementptr inbounds nuw i8, ptr addrspace(3) %327, i32 2176
  %331 = getelementptr inbounds nuw i8, ptr addrspace(3) %327, i32 4096
  %332 = getelementptr inbounds nuw i8, ptr addrspace(3) %327, i32 4224
  %333 = getelementptr inbounds nuw i8, ptr addrspace(3) %327, i32 6144
  %334 = getelementptr inbounds nuw i8, ptr addrspace(3) %327, i32 6272
  %335 = xor i32 %281, 608
  %336 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %335
  %337 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 128
  %338 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 2048
  %339 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 2176
  %340 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 4096
  %341 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 4224
  %342 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 6144
  %343 = getelementptr inbounds nuw i8, ptr addrspace(3) %336, i32 6272
  %344 = xor i32 %281, 880
  %345 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %344
  %346 = getelementptr inbounds nuw i8, ptr addrspace(3) %345, i32 128
  %347 = getelementptr inbounds nuw i8, ptr addrspace(3) %345, i32 2048
  %348 = getelementptr inbounds nuw i8, ptr addrspace(3) %345, i32 2176
  %349 = getelementptr inbounds nuw i8, ptr addrspace(3) %345, i32 4096
  %350 = getelementptr inbounds nuw i8, ptr addrspace(3) %345, i32 4224
  %351 = getelementptr inbounds nuw i8, ptr addrspace(3) %345, i32 6144
  %352 = getelementptr inbounds nuw i8, ptr addrspace(3) %345, i32 6272
  %353 = or disjoint i32 %148, %151
  %354 = xor i32 %353, %152
  %355 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %354
  %356 = getelementptr inbounds nuw i8, ptr addrspace(3) %355, i32 4096
  %357 = xor i32 %354, 32
  %358 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %357
  %359 = getelementptr inbounds nuw i8, ptr addrspace(3) %358, i32 4096
  %360 = xor i32 %354, 64
  %361 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %360
  %362 = getelementptr inbounds nuw i8, ptr addrspace(3) %361, i32 4096
  %363 = xor i32 %354, 96
  %364 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %363
  %365 = getelementptr inbounds nuw i8, ptr addrspace(3) %364, i32 4096
  %366 = or disjoint i32 %148, %196
  %367 = xor i32 %366, %103
  %368 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %367
  %369 = getelementptr inbounds nuw i8, ptr addrspace(3) %368, i32 64
  %370 = getelementptr inbounds nuw i8, ptr addrspace(3) %368, i32 4096
  %371 = getelementptr inbounds nuw i8, ptr addrspace(3) %368, i32 4160
  %372 = xor i32 %367, 16
  %373 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %372
  %374 = getelementptr inbounds nuw i8, ptr addrspace(3) %373, i32 64
  %375 = getelementptr inbounds nuw i8, ptr addrspace(3) %373, i32 4096
  %376 = getelementptr inbounds nuw i8, ptr addrspace(3) %373, i32 4160
  %377 = xor i32 %367, 32
  %378 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %377
  %379 = getelementptr inbounds nuw i8, ptr addrspace(3) %378, i32 64
  %380 = getelementptr inbounds nuw i8, ptr addrspace(3) %378, i32 4096
  %381 = getelementptr inbounds nuw i8, ptr addrspace(3) %378, i32 4160
  %382 = xor i32 %367, 48
  %383 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %382
  %384 = getelementptr inbounds nuw i8, ptr addrspace(3) %383, i32 64
  %385 = getelementptr inbounds nuw i8, ptr addrspace(3) %383, i32 4096
  %386 = getelementptr inbounds nuw i8, ptr addrspace(3) %383, i32 4160
  %387 = shl nuw nsw i32 %43, 2
  %388 = and i32 %387, 12
  %389 = shl nuw nsw i32 %43, 4
  %390 = and i32 %389, 64
  %391 = and i32 %43, 8
  %392 = icmp eq i32 %391, 0
  %393 = select i1 %392, i32 0, i32 132
  %394 = and i32 %43, 16
  %395 = select i1 %102, i32 0, i32 264
  %396 = or disjoint i32 %390, %394
  %397 = xor i32 %393, %388
  %398 = xor i32 %397, %395
  %399 = or disjoint i32 %396, %398
  %400 = xor i32 %399, 528
  %401 = xor i32 %399, 1552
  %402 = xor i32 %399, 2576
  %403 = xor i32 %399, 3600
  %404 = xor i32 %399, 560
  %405 = xor i32 %399, 1584
  %406 = xor i32 %399, 2608
  %407 = xor i32 %399, 3632
  %408 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %399
  %409 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %400
  %410 = getelementptr inbounds nuw i8, ptr addrspace(3) %408, i32 2048
  %411 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %401
  %412 = getelementptr inbounds nuw i8, ptr addrspace(3) %408, i32 4096
  %413 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %402
  %414 = getelementptr inbounds nuw i8, ptr addrspace(3) %408, i32 6144
  %415 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %403
  %416 = getelementptr inbounds nuw i8, ptr addrspace(3) %408, i32 64
  %417 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %404
  %418 = getelementptr inbounds nuw i8, ptr addrspace(3) %408, i32 2112
  %419 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %405
  %420 = getelementptr inbounds nuw i8, ptr addrspace(3) %408, i32 4160
  %421 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %406
  %422 = getelementptr inbounds nuw i8, ptr addrspace(3) %408, i32 6208
  %423 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %407
  %424 = shufflevector <4 x bfloat> %201, <4 x bfloat> %206, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %425 = shufflevector <4 x bfloat> %211, <4 x bfloat> %216, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %426 = shufflevector <4 x bfloat> %203, <4 x bfloat> %208, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %427 = shufflevector <4 x bfloat> %213, <4 x bfloat> %218, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %428 = add nsw i32 %274, -2
  %429 = shufflevector <8 x bfloat> %240, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %430 = shufflevector <8 x bfloat> %240, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %431 = shufflevector <8 x bfloat> %240, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %432 = shufflevector <8 x bfloat> %240, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %433 = shufflevector <8 x bfloat> %244, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %434 = shufflevector <8 x bfloat> %244, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %435 = shufflevector <8 x bfloat> %244, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %436 = shufflevector <8 x bfloat> %244, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %437 = shufflevector <8 x bfloat> %252, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %438 = shufflevector <8 x bfloat> %252, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %439 = shufflevector <8 x bfloat> %252, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %440 = shufflevector <8 x bfloat> %252, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %441 = shufflevector <8 x bfloat> %256, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %442 = shufflevector <8 x bfloat> %256, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %443 = shufflevector <8 x bfloat> %256, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %444 = shufflevector <8 x bfloat> %256, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %445 = insertelement <2 x float> poison, float %20, i64 0, !dbg !75
  %446 = shufflevector <2 x float> %445, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !75
  br label %447, !dbg !67

447:                                              ; preds = %.lr.ph, %447
  %448 = phi ptr addrspace(1) [ %84, %.lr.ph ], [ %534, %447 ]
  %449 = phi ptr addrspace(1) [ %81, %.lr.ph ], [ %533, %447 ]
  %450 = phi i32 [ 0, %.lr.ph ], [ %532, %447 ]
  %451 = phi float [ 0.000000e+00, %.lr.ph ], [ %1502, %447 ]
  %452 = phi float [ 0.000000e+00, %.lr.ph ], [ %1503, %447 ]
  %453 = phi float [ 0.000000e+00, %.lr.ph ], [ %1504, %447 ]
  %454 = phi float [ 0.000000e+00, %.lr.ph ], [ %1505, %447 ]
  %455 = phi float [ 0.000000e+00, %.lr.ph ], [ %1506, %447 ]
  %456 = phi float [ 0.000000e+00, %.lr.ph ], [ %1507, %447 ]
  %457 = phi float [ 0.000000e+00, %.lr.ph ], [ %1508, %447 ]
  %458 = phi float [ 0.000000e+00, %.lr.ph ], [ %1509, %447 ]
  %459 = phi float [ 0.000000e+00, %.lr.ph ], [ %1510, %447 ]
  %460 = phi float [ 0.000000e+00, %.lr.ph ], [ %1511, %447 ]
  %461 = phi float [ 0.000000e+00, %.lr.ph ], [ %1512, %447 ]
  %462 = phi float [ 0.000000e+00, %.lr.ph ], [ %1513, %447 ]
  %463 = phi float [ 0.000000e+00, %.lr.ph ], [ %1514, %447 ]
  %464 = phi float [ 0.000000e+00, %.lr.ph ], [ %1515, %447 ]
  %465 = phi float [ 0.000000e+00, %.lr.ph ], [ %1516, %447 ]
  %466 = phi float [ 0.000000e+00, %.lr.ph ], [ %1517, %447 ]
  %467 = phi float [ 0.000000e+00, %.lr.ph ], [ %1519, %447 ]
  %468 = phi float [ 0.000000e+00, %.lr.ph ], [ %1520, %447 ]
  %469 = phi float [ 0.000000e+00, %.lr.ph ], [ %1521, %447 ]
  %470 = phi float [ 0.000000e+00, %.lr.ph ], [ %1522, %447 ]
  %471 = phi float [ 0.000000e+00, %.lr.ph ], [ %1523, %447 ]
  %472 = phi float [ 0.000000e+00, %.lr.ph ], [ %1524, %447 ]
  %473 = phi float [ 0.000000e+00, %.lr.ph ], [ %1525, %447 ]
  %474 = phi float [ 0.000000e+00, %.lr.ph ], [ %1526, %447 ]
  %475 = phi float [ 0.000000e+00, %.lr.ph ], [ %1527, %447 ]
  %476 = phi float [ 0.000000e+00, %.lr.ph ], [ %1528, %447 ]
  %477 = phi float [ 0.000000e+00, %.lr.ph ], [ %1529, %447 ]
  %478 = phi float [ 0.000000e+00, %.lr.ph ], [ %1530, %447 ]
  %479 = phi float [ 0.000000e+00, %.lr.ph ], [ %1531, %447 ]
  %480 = phi float [ 0.000000e+00, %.lr.ph ], [ %1532, %447 ]
  %481 = phi float [ 0.000000e+00, %.lr.ph ], [ %1533, %447 ]
  %482 = phi float [ 0.000000e+00, %.lr.ph ], [ %1534, %447 ]
  %483 = phi float [ 0.000000e+00, %.lr.ph ], [ %1715, %447 ]
  %484 = phi float [ 0.000000e+00, %.lr.ph ], [ %1716, %447 ]
  %485 = phi float [ 0.000000e+00, %.lr.ph ], [ %1717, %447 ]
  %486 = phi float [ 0.000000e+00, %.lr.ph ], [ %1718, %447 ]
  %487 = phi float [ 0.000000e+00, %.lr.ph ], [ %1719, %447 ]
  %488 = phi float [ 0.000000e+00, %.lr.ph ], [ %1720, %447 ]
  %489 = phi float [ 0.000000e+00, %.lr.ph ], [ %1721, %447 ]
  %490 = phi float [ 0.000000e+00, %.lr.ph ], [ %1722, %447 ]
  %491 = phi float [ 0.000000e+00, %.lr.ph ], [ %1723, %447 ]
  %492 = phi float [ 0.000000e+00, %.lr.ph ], [ %1724, %447 ]
  %493 = phi float [ 0.000000e+00, %.lr.ph ], [ %1725, %447 ]
  %494 = phi float [ 0.000000e+00, %.lr.ph ], [ %1726, %447 ]
  %495 = phi float [ 0.000000e+00, %.lr.ph ], [ %1727, %447 ]
  %496 = phi float [ 0.000000e+00, %.lr.ph ], [ %1728, %447 ]
  %497 = phi float [ 0.000000e+00, %.lr.ph ], [ %1729, %447 ]
  %498 = phi float [ 0.000000e+00, %.lr.ph ], [ %1730, %447 ]
  %499 = phi float [ 0.000000e+00, %.lr.ph ], [ %1751, %447 ]
  %500 = phi float [ 0.000000e+00, %.lr.ph ], [ %1752, %447 ]
  %501 = phi float [ 0.000000e+00, %.lr.ph ], [ %1753, %447 ]
  %502 = phi float [ 0.000000e+00, %.lr.ph ], [ %1754, %447 ]
  %503 = phi float [ 0.000000e+00, %.lr.ph ], [ %1755, %447 ]
  %504 = phi float [ 0.000000e+00, %.lr.ph ], [ %1756, %447 ]
  %505 = phi float [ 0.000000e+00, %.lr.ph ], [ %1757, %447 ]
  %506 = phi float [ 0.000000e+00, %.lr.ph ], [ %1758, %447 ]
  %507 = phi float [ 0.000000e+00, %.lr.ph ], [ %1759, %447 ]
  %508 = phi float [ 0.000000e+00, %.lr.ph ], [ %1760, %447 ]
  %509 = phi float [ 0.000000e+00, %.lr.ph ], [ %1761, %447 ]
  %510 = phi float [ 0.000000e+00, %.lr.ph ], [ %1762, %447 ]
  %511 = phi float [ 0.000000e+00, %.lr.ph ], [ %1763, %447 ]
  %512 = phi float [ 0.000000e+00, %.lr.ph ], [ %1764, %447 ]
  %513 = phi float [ 0.000000e+00, %.lr.ph ], [ %1765, %447 ]
  %514 = phi float [ 0.000000e+00, %.lr.ph ], [ %1766, %447 ]
  %515 = phi i32 [ 0, %.lr.ph ], [ %1767, %447 ]
  %516 = phi <2 x bfloat> [ %429, %.lr.ph ], [ %1776, %447 ]
  %517 = phi <2 x bfloat> [ %430, %.lr.ph ], [ %1777, %447 ]
  %518 = phi <2 x bfloat> [ %431, %.lr.ph ], [ %1778, %447 ]
  %519 = phi <2 x bfloat> [ %432, %.lr.ph ], [ %1779, %447 ]
  %520 = phi <2 x bfloat> [ %433, %.lr.ph ], [ %1780, %447 ]
  %521 = phi <2 x bfloat> [ %434, %.lr.ph ], [ %1781, %447 ]
  %522 = phi <2 x bfloat> [ %435, %.lr.ph ], [ %1782, %447 ]
  %523 = phi <2 x bfloat> [ %436, %.lr.ph ], [ %1783, %447 ]
  %524 = phi <2 x bfloat> [ %437, %.lr.ph ], [ %1768, %447 ]
  %525 = phi <2 x bfloat> [ %438, %.lr.ph ], [ %1769, %447 ]
  %526 = phi <2 x bfloat> [ %439, %.lr.ph ], [ %1772, %447 ]
  %527 = phi <2 x bfloat> [ %440, %.lr.ph ], [ %1773, %447 ]
  %528 = phi <2 x bfloat> [ %441, %.lr.ph ], [ %1770, %447 ]
  %529 = phi <2 x bfloat> [ %442, %.lr.ph ], [ %1771, %447 ]
  %530 = phi <2 x bfloat> [ %443, %.lr.ph ], [ %1774, %447 ]
  %531 = phi <2 x bfloat> [ %444, %.lr.ph ], [ %1775, %447 ]
  %532 = add nuw nsw i32 %450, 64, !dbg !76
  %533 = getelementptr bfloat, ptr addrspace(1) %449, i64 %277, !dbg !77
  %534 = getelementptr bfloat, ptr addrspace(1) %448, i64 %278, !dbg !78
  %535 = or disjoint i32 %532, %46, !dbg !79
  %536 = or disjoint i32 %532, %47, !dbg !79
  %537 = icmp slt i32 %535, %34, !dbg !68
  %538 = icmp slt i32 %536, %34, !dbg !68
  %539 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %533, i16 %235, i32 2147483646, i32 159744), !dbg !69
  %540 = select i1 %537, i32 %237, i32 -2147483648, !dbg !69
  %541 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %539, i32 %540, i32 0, i32 0), !dbg !69
  %542 = bitcast <4 x i32> %541 to <8 x bfloat>, !dbg !69
  %543 = select i1 %538, i32 %241, i32 -2147483648, !dbg !69
  %544 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %539, i32 %543, i32 0, i32 0), !dbg !69
  %545 = bitcast <4 x i32> %544 to <8 x bfloat>, !dbg !69
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  %546 = shufflevector <2 x bfloat> %516, <2 x bfloat> %517, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %547 = shufflevector <2 x bfloat> %518, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %548 = shufflevector <8 x bfloat> %546, <8 x bfloat> %547, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !69
  %549 = shufflevector <2 x bfloat> %519, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %550 = shufflevector <8 x bfloat> %548, <8 x bfloat> %549, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !69
  store <8 x bfloat> %550, ptr addrspace(3) %144, align 16, !dbg !69
  %551 = shufflevector <2 x bfloat> %520, <2 x bfloat> %521, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %552 = shufflevector <2 x bfloat> %522, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %553 = shufflevector <8 x bfloat> %551, <8 x bfloat> %552, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !69
  %554 = shufflevector <2 x bfloat> %523, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %555 = shufflevector <8 x bfloat> %553, <8 x bfloat> %554, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !69
  store <8 x bfloat> %555, ptr addrspace(3) %145, align 16, !dbg !69
  fence syncscope("workgroup") release, !dbg !71
  tail call void @llvm.amdgcn.s.barrier(), !dbg !71
  fence syncscope("workgroup") acquire, !dbg !71
  %556 = load <1 x bfloat>, ptr addrspace(3) %282, align 2, !dbg !71
  %557 = load <1 x bfloat>, ptr addrspace(3) %283, align 2, !dbg !71
  %558 = load <1 x bfloat>, ptr addrspace(3) %284, align 2, !dbg !71
  %559 = load <1 x bfloat>, ptr addrspace(3) %285, align 2, !dbg !71
  %560 = load <1 x bfloat>, ptr addrspace(3) %286, align 2, !dbg !71
  %561 = load <1 x bfloat>, ptr addrspace(3) %287, align 2, !dbg !71
  %562 = load <1 x bfloat>, ptr addrspace(3) %288, align 2, !dbg !71
  %563 = load <1 x bfloat>, ptr addrspace(3) %289, align 2, !dbg !71
  %564 = load <1 x bfloat>, ptr addrspace(3) %291, align 2, !dbg !71
  %565 = shufflevector <1 x bfloat> %564, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %566 = load <1 x bfloat>, ptr addrspace(3) %292, align 2, !dbg !71
  %567 = shufflevector <1 x bfloat> %566, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %568 = load <1 x bfloat>, ptr addrspace(3) %293, align 2, !dbg !71
  %569 = shufflevector <1 x bfloat> %568, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %570 = load <1 x bfloat>, ptr addrspace(3) %294, align 2, !dbg !71
  %571 = shufflevector <1 x bfloat> %570, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %572 = load <1 x bfloat>, ptr addrspace(3) %295, align 2, !dbg !71
  %573 = shufflevector <1 x bfloat> %572, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %574 = load <1 x bfloat>, ptr addrspace(3) %296, align 2, !dbg !71
  %575 = shufflevector <1 x bfloat> %574, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %576 = load <1 x bfloat>, ptr addrspace(3) %297, align 2, !dbg !71
  %577 = shufflevector <1 x bfloat> %576, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %578 = load <1 x bfloat>, ptr addrspace(3) %298, align 2, !dbg !71
  %579 = shufflevector <1 x bfloat> %578, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %580 = load <1 x bfloat>, ptr addrspace(3) %300, align 2, !dbg !71
  %581 = shufflevector <1 x bfloat> %580, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %582 = load <1 x bfloat>, ptr addrspace(3) %301, align 2, !dbg !71
  %583 = shufflevector <1 x bfloat> %582, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %584 = load <1 x bfloat>, ptr addrspace(3) %302, align 2, !dbg !71
  %585 = shufflevector <1 x bfloat> %584, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %586 = load <1 x bfloat>, ptr addrspace(3) %303, align 2, !dbg !71
  %587 = shufflevector <1 x bfloat> %586, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %588 = load <1 x bfloat>, ptr addrspace(3) %304, align 2, !dbg !71
  %589 = shufflevector <1 x bfloat> %588, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %590 = load <1 x bfloat>, ptr addrspace(3) %305, align 2, !dbg !71
  %591 = shufflevector <1 x bfloat> %590, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %592 = load <1 x bfloat>, ptr addrspace(3) %306, align 2, !dbg !71
  %593 = shufflevector <1 x bfloat> %592, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %594 = load <1 x bfloat>, ptr addrspace(3) %307, align 2, !dbg !71
  %595 = shufflevector <1 x bfloat> %594, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %596 = load <1 x bfloat>, ptr addrspace(3) %309, align 2, !dbg !71
  %597 = shufflevector <1 x bfloat> %596, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %598 = load <1 x bfloat>, ptr addrspace(3) %310, align 2, !dbg !71
  %599 = shufflevector <1 x bfloat> %598, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %600 = load <1 x bfloat>, ptr addrspace(3) %311, align 2, !dbg !71
  %601 = shufflevector <1 x bfloat> %600, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %602 = load <1 x bfloat>, ptr addrspace(3) %312, align 2, !dbg !71
  %603 = shufflevector <1 x bfloat> %602, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %604 = load <1 x bfloat>, ptr addrspace(3) %313, align 2, !dbg !71
  %605 = shufflevector <1 x bfloat> %604, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %606 = load <1 x bfloat>, ptr addrspace(3) %314, align 2, !dbg !71
  %607 = shufflevector <1 x bfloat> %606, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %608 = load <1 x bfloat>, ptr addrspace(3) %315, align 2, !dbg !71
  %609 = shufflevector <1 x bfloat> %608, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %610 = load <1 x bfloat>, ptr addrspace(3) %316, align 2, !dbg !71
  %611 = shufflevector <1 x bfloat> %610, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %612 = load <1 x bfloat>, ptr addrspace(3) %318, align 2, !dbg !71
  %613 = load <1 x bfloat>, ptr addrspace(3) %319, align 2, !dbg !71
  %614 = load <1 x bfloat>, ptr addrspace(3) %320, align 2, !dbg !71
  %615 = load <1 x bfloat>, ptr addrspace(3) %321, align 2, !dbg !71
  %616 = load <1 x bfloat>, ptr addrspace(3) %322, align 2, !dbg !71
  %617 = load <1 x bfloat>, ptr addrspace(3) %323, align 2, !dbg !71
  %618 = load <1 x bfloat>, ptr addrspace(3) %324, align 2, !dbg !71
  %619 = load <1 x bfloat>, ptr addrspace(3) %325, align 2, !dbg !71
  %620 = load <1 x bfloat>, ptr addrspace(3) %327, align 2, !dbg !71
  %621 = shufflevector <1 x bfloat> %620, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %622 = load <1 x bfloat>, ptr addrspace(3) %328, align 2, !dbg !71
  %623 = shufflevector <1 x bfloat> %622, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %624 = load <1 x bfloat>, ptr addrspace(3) %329, align 2, !dbg !71
  %625 = shufflevector <1 x bfloat> %624, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %626 = load <1 x bfloat>, ptr addrspace(3) %330, align 2, !dbg !71
  %627 = shufflevector <1 x bfloat> %626, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %628 = load <1 x bfloat>, ptr addrspace(3) %331, align 2, !dbg !71
  %629 = shufflevector <1 x bfloat> %628, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %630 = load <1 x bfloat>, ptr addrspace(3) %332, align 2, !dbg !71
  %631 = shufflevector <1 x bfloat> %630, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %632 = load <1 x bfloat>, ptr addrspace(3) %333, align 2, !dbg !71
  %633 = shufflevector <1 x bfloat> %632, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %634 = load <1 x bfloat>, ptr addrspace(3) %334, align 2, !dbg !71
  %635 = shufflevector <1 x bfloat> %634, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %636 = load <1 x bfloat>, ptr addrspace(3) %336, align 2, !dbg !71
  %637 = shufflevector <1 x bfloat> %636, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %638 = load <1 x bfloat>, ptr addrspace(3) %337, align 2, !dbg !71
  %639 = shufflevector <1 x bfloat> %638, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %640 = load <1 x bfloat>, ptr addrspace(3) %338, align 2, !dbg !71
  %641 = shufflevector <1 x bfloat> %640, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %642 = load <1 x bfloat>, ptr addrspace(3) %339, align 2, !dbg !71
  %643 = shufflevector <1 x bfloat> %642, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %644 = load <1 x bfloat>, ptr addrspace(3) %340, align 2, !dbg !71
  %645 = shufflevector <1 x bfloat> %644, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %646 = load <1 x bfloat>, ptr addrspace(3) %341, align 2, !dbg !71
  %647 = shufflevector <1 x bfloat> %646, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %648 = load <1 x bfloat>, ptr addrspace(3) %342, align 2, !dbg !71
  %649 = shufflevector <1 x bfloat> %648, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %650 = load <1 x bfloat>, ptr addrspace(3) %343, align 2, !dbg !71
  %651 = shufflevector <1 x bfloat> %650, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %652 = load <1 x bfloat>, ptr addrspace(3) %345, align 2, !dbg !71
  %653 = shufflevector <1 x bfloat> %652, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %654 = load <1 x bfloat>, ptr addrspace(3) %346, align 2, !dbg !71
  %655 = shufflevector <1 x bfloat> %654, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %656 = load <1 x bfloat>, ptr addrspace(3) %347, align 2, !dbg !71
  %657 = shufflevector <1 x bfloat> %656, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %658 = load <1 x bfloat>, ptr addrspace(3) %348, align 2, !dbg !71
  %659 = shufflevector <1 x bfloat> %658, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %660 = load <1 x bfloat>, ptr addrspace(3) %349, align 2, !dbg !71
  %661 = shufflevector <1 x bfloat> %660, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %662 = load <1 x bfloat>, ptr addrspace(3) %350, align 2, !dbg !71
  %663 = shufflevector <1 x bfloat> %662, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %664 = load <1 x bfloat>, ptr addrspace(3) %351, align 2, !dbg !71
  %665 = shufflevector <1 x bfloat> %664, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %666 = load <1 x bfloat>, ptr addrspace(3) %352, align 2, !dbg !71
  %667 = shufflevector <1 x bfloat> %666, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %668 = load <8 x bfloat>, ptr addrspace(3) %355, align 16, !dbg !69
  %669 = load <8 x bfloat>, ptr addrspace(3) %356, align 16, !dbg !69
  %670 = load <8 x bfloat>, ptr addrspace(3) %358, align 16, !dbg !69
  %671 = load <8 x bfloat>, ptr addrspace(3) %359, align 16, !dbg !69
  %672 = load <8 x bfloat>, ptr addrspace(3) %361, align 16, !dbg !69
  %673 = load <8 x bfloat>, ptr addrspace(3) %362, align 16, !dbg !69
  %674 = load <8 x bfloat>, ptr addrspace(3) %364, align 16, !dbg !69
  %675 = load <8 x bfloat>, ptr addrspace(3) %365, align 16, !dbg !69
  %676 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %668, <8 x bfloat> %157, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !80
  %677 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %670, <8 x bfloat> %160, <16 x float> %676, i32 0, i32 0, i32 0), !dbg !80
  %678 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %672, <8 x bfloat> %163, <16 x float> %677, i32 0, i32 0, i32 0), !dbg !80
  %679 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %674, <8 x bfloat> %166, <16 x float> %678, i32 0, i32 0, i32 0), !dbg !80
  %680 = extractelement <16 x float> %679, i64 0, !dbg !80
  %681 = extractelement <16 x float> %679, i64 1, !dbg !80
  %682 = extractelement <16 x float> %679, i64 2, !dbg !80
  %683 = extractelement <16 x float> %679, i64 3, !dbg !80
  %684 = extractelement <16 x float> %679, i64 4, !dbg !80
  %685 = extractelement <16 x float> %679, i64 5, !dbg !80
  %686 = extractelement <16 x float> %679, i64 6, !dbg !80
  %687 = extractelement <16 x float> %679, i64 7, !dbg !80
  %688 = extractelement <16 x float> %679, i64 8, !dbg !80
  %689 = extractelement <16 x float> %679, i64 9, !dbg !80
  %690 = extractelement <16 x float> %679, i64 10, !dbg !80
  %691 = extractelement <16 x float> %679, i64 11, !dbg !80
  %692 = extractelement <16 x float> %679, i64 12, !dbg !80
  %693 = extractelement <16 x float> %679, i64 13, !dbg !80
  %694 = extractelement <16 x float> %679, i64 14, !dbg !80
  %695 = extractelement <16 x float> %679, i64 15, !dbg !80
  %696 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %669, <8 x bfloat> %157, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !80
  %697 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %671, <8 x bfloat> %160, <16 x float> %696, i32 0, i32 0, i32 0), !dbg !80
  %698 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %673, <8 x bfloat> %163, <16 x float> %697, i32 0, i32 0, i32 0), !dbg !80
  %699 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %675, <8 x bfloat> %166, <16 x float> %698, i32 0, i32 0, i32 0), !dbg !80
  %700 = extractelement <16 x float> %699, i64 0, !dbg !80
  %701 = extractelement <16 x float> %699, i64 1, !dbg !80
  %702 = extractelement <16 x float> %699, i64 2, !dbg !80
  %703 = extractelement <16 x float> %699, i64 3, !dbg !80
  %704 = extractelement <16 x float> %699, i64 4, !dbg !80
  %705 = extractelement <16 x float> %699, i64 5, !dbg !80
  %706 = extractelement <16 x float> %699, i64 6, !dbg !80
  %707 = extractelement <16 x float> %699, i64 7, !dbg !80
  %708 = extractelement <16 x float> %699, i64 8, !dbg !80
  %709 = extractelement <16 x float> %699, i64 9, !dbg !80
  %710 = extractelement <16 x float> %699, i64 10, !dbg !80
  %711 = extractelement <16 x float> %699, i64 11, !dbg !80
  %712 = extractelement <16 x float> %699, i64 12, !dbg !80
  %713 = extractelement <16 x float> %699, i64 13, !dbg !80
  %714 = extractelement <16 x float> %699, i64 14, !dbg !80
  %715 = extractelement <16 x float> %699, i64 15, !dbg !80
  %716 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %534, i16 %247, i32 2147483646, i32 159744), !dbg !70
  %717 = select i1 %537, i32 %249, i32 -2147483648, !dbg !70
  %718 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %716, i32 %717, i32 0, i32 0), !dbg !70
  %719 = bitcast <4 x i32> %718 to <8 x bfloat>, !dbg !70
  %720 = select i1 %538, i32 %253, i32 -2147483648, !dbg !70
  %721 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %716, i32 %720, i32 0, i32 0), !dbg !70
  %722 = bitcast <4 x i32> %721 to <8 x bfloat>, !dbg !70
  fence syncscope("workgroup") release, !dbg !70
  tail call void @llvm.amdgcn.s.barrier(), !dbg !70
  fence syncscope("workgroup") acquire, !dbg !70
  %723 = shufflevector <2 x bfloat> %524, <2 x bfloat> %525, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !70
  store <4 x bfloat> %723, ptr addrspace(3) %179, align 8, !dbg !70
  %724 = shufflevector <2 x bfloat> %528, <2 x bfloat> %529, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !70
  store <4 x bfloat> %724, ptr addrspace(3) %181, align 8, !dbg !70
  %725 = shufflevector <2 x bfloat> %526, <2 x bfloat> %527, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !70
  store <4 x bfloat> %725, ptr addrspace(3) %188, align 8, !dbg !70
  %726 = shufflevector <2 x bfloat> %530, <2 x bfloat> %531, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !70
  store <4 x bfloat> %726, ptr addrspace(3) %190, align 8, !dbg !70
  fence syncscope("workgroup") release, !dbg !81
  tail call void @llvm.amdgcn.s.barrier(), !dbg !81
  fence syncscope("workgroup") acquire, !dbg !81
  %727 = load <4 x bfloat>, ptr addrspace(3) %368, align 8, !dbg !81
  %728 = load <4 x bfloat>, ptr addrspace(3) %369, align 8, !dbg !81
  %729 = load <4 x bfloat>, ptr addrspace(3) %370, align 8, !dbg !81
  %730 = load <4 x bfloat>, ptr addrspace(3) %371, align 8, !dbg !81
  %731 = load <4 x bfloat>, ptr addrspace(3) %373, align 8, !dbg !81
  %732 = load <4 x bfloat>, ptr addrspace(3) %374, align 8, !dbg !81
  %733 = load <4 x bfloat>, ptr addrspace(3) %375, align 8, !dbg !81
  %734 = load <4 x bfloat>, ptr addrspace(3) %376, align 8, !dbg !81
  %735 = load <4 x bfloat>, ptr addrspace(3) %378, align 8, !dbg !81
  %736 = load <4 x bfloat>, ptr addrspace(3) %379, align 8, !dbg !81
  %737 = load <4 x bfloat>, ptr addrspace(3) %380, align 8, !dbg !81
  %738 = load <4 x bfloat>, ptr addrspace(3) %381, align 8, !dbg !81
  %739 = load <4 x bfloat>, ptr addrspace(3) %383, align 8, !dbg !81
  %740 = load <4 x bfloat>, ptr addrspace(3) %384, align 8, !dbg !81
  %741 = load <4 x bfloat>, ptr addrspace(3) %385, align 8, !dbg !81
  %742 = load <4 x bfloat>, ptr addrspace(3) %386, align 8, !dbg !81
  %743 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %408), !dbg !70
  %744 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %409), !dbg !70
  %745 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %410), !dbg !70
  %746 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %411), !dbg !70
  %747 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %412), !dbg !70
  %748 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %413), !dbg !70
  %749 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %414), !dbg !70
  %750 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %415), !dbg !70
  %751 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %416), !dbg !70
  %752 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %417), !dbg !70
  %753 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %418), !dbg !70
  %754 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %419), !dbg !70
  %755 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %420), !dbg !70
  %756 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %421), !dbg !70
  %757 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %422), !dbg !70
  %758 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %423), !dbg !70
  %759 = shufflevector <4 x bfloat> %727, <4 x bfloat> %731, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %760 = shufflevector <4 x bfloat> %735, <4 x bfloat> %739, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %761 = shufflevector <4 x bfloat> %728, <4 x bfloat> %732, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %762 = shufflevector <4 x bfloat> %736, <4 x bfloat> %740, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %763 = shufflevector <4 x bfloat> %729, <4 x bfloat> %733, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %764 = shufflevector <4 x bfloat> %737, <4 x bfloat> %741, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %765 = shufflevector <4 x bfloat> %730, <4 x bfloat> %734, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %766 = shufflevector <4 x bfloat> %738, <4 x bfloat> %742, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %767 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %759, <8 x bfloat> %424, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !81
  %768 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %760, <8 x bfloat> %425, <16 x float> %767, i32 0, i32 0, i32 0), !dbg !81
  %769 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %761, <8 x bfloat> %426, <16 x float> %768, i32 0, i32 0, i32 0), !dbg !81
  %770 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %762, <8 x bfloat> %427, <16 x float> %769, i32 0, i32 0, i32 0), !dbg !81
  %771 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %763, <8 x bfloat> %424, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !81
  %772 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %764, <8 x bfloat> %425, <16 x float> %771, i32 0, i32 0, i32 0), !dbg !81
  %773 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %765, <8 x bfloat> %426, <16 x float> %772, i32 0, i32 0, i32 0), !dbg !81
  %774 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %766, <8 x bfloat> %427, <16 x float> %773, i32 0, i32 0, i32 0), !dbg !81
  %775 = fmul float %680, 0x3FE9884540000000, !dbg !82
  %776 = fmul float %681, 0x3FE9884540000000, !dbg !82
  %777 = fmul float %682, 0x3FE9884540000000, !dbg !82
  %778 = fmul float %683, 0x3FE9884540000000, !dbg !82
  %779 = fmul float %684, 0x3FE9884540000000, !dbg !82
  %780 = fmul float %685, 0x3FE9884540000000, !dbg !82
  %781 = fmul float %686, 0x3FE9884540000000, !dbg !82
  %782 = fmul float %687, 0x3FE9884540000000, !dbg !82
  %783 = fmul float %688, 0x3FE9884540000000, !dbg !82
  %784 = fmul float %689, 0x3FE9884540000000, !dbg !82
  %785 = fmul float %690, 0x3FE9884540000000, !dbg !82
  %786 = fmul float %691, 0x3FE9884540000000, !dbg !82
  %787 = fmul float %692, 0x3FE9884540000000, !dbg !82
  %788 = fmul float %693, 0x3FE9884540000000, !dbg !82
  %789 = fmul float %694, 0x3FE9884540000000, !dbg !82
  %790 = fmul float %695, 0x3FE9884540000000, !dbg !82
  %791 = fmul float %700, 0x3FE9884540000000, !dbg !82
  %792 = fmul float %701, 0x3FE9884540000000, !dbg !82
  %793 = fmul float %702, 0x3FE9884540000000, !dbg !82
  %794 = fmul float %703, 0x3FE9884540000000, !dbg !82
  %795 = fmul float %704, 0x3FE9884540000000, !dbg !82
  %796 = fmul float %705, 0x3FE9884540000000, !dbg !82
  %797 = fmul float %706, 0x3FE9884540000000, !dbg !82
  %798 = fmul float %707, 0x3FE9884540000000, !dbg !82
  %799 = fmul float %708, 0x3FE9884540000000, !dbg !82
  %800 = fmul float %709, 0x3FE9884540000000, !dbg !82
  %801 = fmul float %710, 0x3FE9884540000000, !dbg !82
  %802 = fmul float %711, 0x3FE9884540000000, !dbg !82
  %803 = fmul float %712, 0x3FE9884540000000, !dbg !82
  %804 = fmul float %713, 0x3FE9884540000000, !dbg !82
  %805 = fmul float %714, 0x3FE9884540000000, !dbg !82
  %806 = fmul float %715, 0x3FE9884540000000, !dbg !82
  %807 = fmul float %680, 0x3FA6E4E260000000, !dbg !83
  %808 = fmul float %681, 0x3FA6E4E260000000, !dbg !83
  %809 = fmul float %682, 0x3FA6E4E260000000, !dbg !83
  %810 = fmul float %683, 0x3FA6E4E260000000, !dbg !83
  %811 = fmul float %684, 0x3FA6E4E260000000, !dbg !83
  %812 = fmul float %685, 0x3FA6E4E260000000, !dbg !83
  %813 = fmul float %686, 0x3FA6E4E260000000, !dbg !83
  %814 = fmul float %687, 0x3FA6E4E260000000, !dbg !83
  %815 = fmul float %688, 0x3FA6E4E260000000, !dbg !83
  %816 = fmul float %689, 0x3FA6E4E260000000, !dbg !83
  %817 = fmul float %690, 0x3FA6E4E260000000, !dbg !83
  %818 = fmul float %691, 0x3FA6E4E260000000, !dbg !83
  %819 = fmul float %692, 0x3FA6E4E260000000, !dbg !83
  %820 = fmul float %693, 0x3FA6E4E260000000, !dbg !83
  %821 = fmul float %694, 0x3FA6E4E260000000, !dbg !83
  %822 = fmul float %695, 0x3FA6E4E260000000, !dbg !83
  %823 = fmul float %700, 0x3FA6E4E260000000, !dbg !83
  %824 = fmul float %701, 0x3FA6E4E260000000, !dbg !83
  %825 = fmul float %702, 0x3FA6E4E260000000, !dbg !83
  %826 = fmul float %703, 0x3FA6E4E260000000, !dbg !83
  %827 = fmul float %704, 0x3FA6E4E260000000, !dbg !83
  %828 = fmul float %705, 0x3FA6E4E260000000, !dbg !83
  %829 = fmul float %706, 0x3FA6E4E260000000, !dbg !83
  %830 = fmul float %707, 0x3FA6E4E260000000, !dbg !83
  %831 = fmul float %708, 0x3FA6E4E260000000, !dbg !83
  %832 = fmul float %709, 0x3FA6E4E260000000, !dbg !83
  %833 = fmul float %710, 0x3FA6E4E260000000, !dbg !83
  %834 = fmul float %711, 0x3FA6E4E260000000, !dbg !83
  %835 = fmul float %712, 0x3FA6E4E260000000, !dbg !83
  %836 = fmul float %713, 0x3FA6E4E260000000, !dbg !83
  %837 = fmul float %714, 0x3FA6E4E260000000, !dbg !83
  %838 = fmul float %715, 0x3FA6E4E260000000, !dbg !83
  %839 = fmul float %680, %807, !dbg !84
  %840 = fmul float %681, %808, !dbg !84
  %841 = fmul float %682, %809, !dbg !84
  %842 = fmul float %683, %810, !dbg !84
  %843 = fmul float %684, %811, !dbg !84
  %844 = fmul float %685, %812, !dbg !84
  %845 = fmul float %686, %813, !dbg !84
  %846 = fmul float %687, %814, !dbg !84
  %847 = fmul float %688, %815, !dbg !84
  %848 = fmul float %689, %816, !dbg !84
  %849 = fmul float %690, %817, !dbg !84
  %850 = fmul float %691, %818, !dbg !84
  %851 = fmul float %692, %819, !dbg !84
  %852 = fmul float %693, %820, !dbg !84
  %853 = fmul float %694, %821, !dbg !84
  %854 = fmul float %695, %822, !dbg !84
  %855 = fmul float %700, %823, !dbg !84
  %856 = fmul float %701, %824, !dbg !84
  %857 = fmul float %702, %825, !dbg !84
  %858 = fmul float %703, %826, !dbg !84
  %859 = fmul float %704, %827, !dbg !84
  %860 = fmul float %705, %828, !dbg !84
  %861 = fmul float %706, %829, !dbg !84
  %862 = fmul float %707, %830, !dbg !84
  %863 = fmul float %708, %831, !dbg !84
  %864 = fmul float %709, %832, !dbg !84
  %865 = fmul float %710, %833, !dbg !84
  %866 = fmul float %711, %834, !dbg !84
  %867 = fmul float %712, %835, !dbg !84
  %868 = fmul float %713, %836, !dbg !84
  %869 = fmul float %714, %837, !dbg !84
  %870 = fmul float %715, %838, !dbg !84
  %871 = fadd float %839, 1.000000e+00, !dbg !85
  %872 = fadd float %840, 1.000000e+00, !dbg !85
  %873 = fadd float %841, 1.000000e+00, !dbg !85
  %874 = fadd float %842, 1.000000e+00, !dbg !85
  %875 = fadd float %843, 1.000000e+00, !dbg !85
  %876 = fadd float %844, 1.000000e+00, !dbg !85
  %877 = fadd float %845, 1.000000e+00, !dbg !85
  %878 = fadd float %846, 1.000000e+00, !dbg !85
  %879 = fadd float %847, 1.000000e+00, !dbg !85
  %880 = fadd float %848, 1.000000e+00, !dbg !85
  %881 = fadd float %849, 1.000000e+00, !dbg !85
  %882 = fadd float %850, 1.000000e+00, !dbg !85
  %883 = fadd float %851, 1.000000e+00, !dbg !85
  %884 = fadd float %852, 1.000000e+00, !dbg !85
  %885 = fadd float %853, 1.000000e+00, !dbg !85
  %886 = fadd float %854, 1.000000e+00, !dbg !85
  %887 = fadd float %855, 1.000000e+00, !dbg !85
  %888 = fadd float %856, 1.000000e+00, !dbg !85
  %889 = fadd float %857, 1.000000e+00, !dbg !85
  %890 = fadd float %858, 1.000000e+00, !dbg !85
  %891 = fadd float %859, 1.000000e+00, !dbg !85
  %892 = fadd float %860, 1.000000e+00, !dbg !85
  %893 = fadd float %861, 1.000000e+00, !dbg !85
  %894 = fadd float %862, 1.000000e+00, !dbg !85
  %895 = fadd float %863, 1.000000e+00, !dbg !85
  %896 = fadd float %864, 1.000000e+00, !dbg !85
  %897 = fadd float %865, 1.000000e+00, !dbg !85
  %898 = fadd float %866, 1.000000e+00, !dbg !85
  %899 = fadd float %867, 1.000000e+00, !dbg !85
  %900 = fadd float %868, 1.000000e+00, !dbg !85
  %901 = fadd float %869, 1.000000e+00, !dbg !85
  %902 = fadd float %870, 1.000000e+00, !dbg !85
  %903 = fmul float %775, %871, !dbg !86
  %904 = fmul float %776, %872, !dbg !86
  %905 = fmul float %777, %873, !dbg !86
  %906 = fmul float %778, %874, !dbg !86
  %907 = fmul float %779, %875, !dbg !86
  %908 = fmul float %780, %876, !dbg !86
  %909 = fmul float %781, %877, !dbg !86
  %910 = fmul float %782, %878, !dbg !86
  %911 = fmul float %783, %879, !dbg !86
  %912 = fmul float %784, %880, !dbg !86
  %913 = fmul float %785, %881, !dbg !86
  %914 = fmul float %786, %882, !dbg !86
  %915 = fmul float %787, %883, !dbg !86
  %916 = fmul float %788, %884, !dbg !86
  %917 = fmul float %789, %885, !dbg !86
  %918 = fmul float %790, %886, !dbg !86
  %919 = fmul float %791, %887, !dbg !86
  %920 = fmul float %792, %888, !dbg !86
  %921 = fmul float %793, %889, !dbg !86
  %922 = fmul float %794, %890, !dbg !86
  %923 = fmul float %795, %891, !dbg !86
  %924 = fmul float %796, %892, !dbg !86
  %925 = fmul float %797, %893, !dbg !86
  %926 = fmul float %798, %894, !dbg !86
  %927 = fmul float %799, %895, !dbg !86
  %928 = fmul float %800, %896, !dbg !86
  %929 = fmul float %801, %897, !dbg !86
  %930 = fmul float %802, %898, !dbg !86
  %931 = fmul float %803, %899, !dbg !86
  %932 = fmul float %804, %900, !dbg !86
  %933 = fmul float %805, %901, !dbg !86
  %934 = fmul float %806, %902, !dbg !86
  %935 = fmul float %903, 2.000000e+00, !dbg !87
  %936 = fmul float %904, 2.000000e+00, !dbg !87
  %937 = fmul float %905, 2.000000e+00, !dbg !87
  %938 = fmul float %906, 2.000000e+00, !dbg !87
  %939 = fmul float %907, 2.000000e+00, !dbg !87
  %940 = fmul float %908, 2.000000e+00, !dbg !87
  %941 = fmul float %909, 2.000000e+00, !dbg !87
  %942 = fmul float %910, 2.000000e+00, !dbg !87
  %943 = fmul float %911, 2.000000e+00, !dbg !87
  %944 = fmul float %912, 2.000000e+00, !dbg !87
  %945 = fmul float %913, 2.000000e+00, !dbg !87
  %946 = fmul float %914, 2.000000e+00, !dbg !87
  %947 = fmul float %915, 2.000000e+00, !dbg !87
  %948 = fmul float %916, 2.000000e+00, !dbg !87
  %949 = fmul float %917, 2.000000e+00, !dbg !87
  %950 = fmul float %918, 2.000000e+00, !dbg !87
  %951 = fmul float %919, 2.000000e+00, !dbg !87
  %952 = fmul float %920, 2.000000e+00, !dbg !87
  %953 = fmul float %921, 2.000000e+00, !dbg !87
  %954 = fmul float %922, 2.000000e+00, !dbg !87
  %955 = fmul float %923, 2.000000e+00, !dbg !87
  %956 = fmul float %924, 2.000000e+00, !dbg !87
  %957 = fmul float %925, 2.000000e+00, !dbg !87
  %958 = fmul float %926, 2.000000e+00, !dbg !87
  %959 = fmul float %927, 2.000000e+00, !dbg !87
  %960 = fmul float %928, 2.000000e+00, !dbg !87
  %961 = fmul float %929, 2.000000e+00, !dbg !87
  %962 = fmul float %930, 2.000000e+00, !dbg !87
  %963 = fmul float %931, 2.000000e+00, !dbg !87
  %964 = fmul float %932, 2.000000e+00, !dbg !87
  %965 = fmul float %933, 2.000000e+00, !dbg !87
  %966 = fmul float %934, 2.000000e+00, !dbg !87
  %967 = fsub float 0.000000e+00, %935, !dbg !90
  %968 = fsub float 0.000000e+00, %936, !dbg !90
  %969 = fsub float 0.000000e+00, %937, !dbg !90
  %970 = fsub float 0.000000e+00, %938, !dbg !90
  %971 = fsub float 0.000000e+00, %939, !dbg !90
  %972 = fsub float 0.000000e+00, %940, !dbg !90
  %973 = fsub float 0.000000e+00, %941, !dbg !90
  %974 = fsub float 0.000000e+00, %942, !dbg !90
  %975 = fsub float 0.000000e+00, %943, !dbg !90
  %976 = fsub float 0.000000e+00, %944, !dbg !90
  %977 = fsub float 0.000000e+00, %945, !dbg !90
  %978 = fsub float 0.000000e+00, %946, !dbg !90
  %979 = fsub float 0.000000e+00, %947, !dbg !90
  %980 = fsub float 0.000000e+00, %948, !dbg !90
  %981 = fsub float 0.000000e+00, %949, !dbg !90
  %982 = fsub float 0.000000e+00, %950, !dbg !90
  %983 = fsub float 0.000000e+00, %951, !dbg !90
  %984 = fsub float 0.000000e+00, %952, !dbg !90
  %985 = fsub float 0.000000e+00, %953, !dbg !90
  %986 = fsub float 0.000000e+00, %954, !dbg !90
  %987 = fsub float 0.000000e+00, %955, !dbg !90
  %988 = fsub float 0.000000e+00, %956, !dbg !90
  %989 = fsub float 0.000000e+00, %957, !dbg !90
  %990 = fsub float 0.000000e+00, %958, !dbg !90
  %991 = fsub float 0.000000e+00, %959, !dbg !90
  %992 = fsub float 0.000000e+00, %960, !dbg !90
  %993 = fsub float 0.000000e+00, %961, !dbg !90
  %994 = fsub float 0.000000e+00, %962, !dbg !90
  %995 = fsub float 0.000000e+00, %963, !dbg !90
  %996 = fsub float 0.000000e+00, %964, !dbg !90
  %997 = fsub float 0.000000e+00, %965, !dbg !90
  %998 = fsub float 0.000000e+00, %966, !dbg !90
  %999 = fmul float %967, 0x3FF7154760000000, !dbg !91
  %1000 = tail call float @llvm.exp2.f32(float %999), !dbg !91
  %1001 = fmul float %968, 0x3FF7154760000000, !dbg !91
  %1002 = tail call float @llvm.exp2.f32(float %1001), !dbg !91
  %1003 = fmul float %969, 0x3FF7154760000000, !dbg !91
  %1004 = tail call float @llvm.exp2.f32(float %1003), !dbg !91
  %1005 = fmul float %970, 0x3FF7154760000000, !dbg !91
  %1006 = tail call float @llvm.exp2.f32(float %1005), !dbg !91
  %1007 = fmul float %971, 0x3FF7154760000000, !dbg !91
  %1008 = tail call float @llvm.exp2.f32(float %1007), !dbg !91
  %1009 = fmul float %972, 0x3FF7154760000000, !dbg !91
  %1010 = tail call float @llvm.exp2.f32(float %1009), !dbg !91
  %1011 = fmul float %973, 0x3FF7154760000000, !dbg !91
  %1012 = tail call float @llvm.exp2.f32(float %1011), !dbg !91
  %1013 = fmul float %974, 0x3FF7154760000000, !dbg !91
  %1014 = tail call float @llvm.exp2.f32(float %1013), !dbg !91
  %1015 = fmul float %975, 0x3FF7154760000000, !dbg !91
  %1016 = tail call float @llvm.exp2.f32(float %1015), !dbg !91
  %1017 = fmul float %976, 0x3FF7154760000000, !dbg !91
  %1018 = tail call float @llvm.exp2.f32(float %1017), !dbg !91
  %1019 = fmul float %977, 0x3FF7154760000000, !dbg !91
  %1020 = tail call float @llvm.exp2.f32(float %1019), !dbg !91
  %1021 = fmul float %978, 0x3FF7154760000000, !dbg !91
  %1022 = tail call float @llvm.exp2.f32(float %1021), !dbg !91
  %1023 = fmul float %979, 0x3FF7154760000000, !dbg !91
  %1024 = tail call float @llvm.exp2.f32(float %1023), !dbg !91
  %1025 = fmul float %980, 0x3FF7154760000000, !dbg !91
  %1026 = tail call float @llvm.exp2.f32(float %1025), !dbg !91
  %1027 = fmul float %981, 0x3FF7154760000000, !dbg !91
  %1028 = tail call float @llvm.exp2.f32(float %1027), !dbg !91
  %1029 = fmul float %982, 0x3FF7154760000000, !dbg !91
  %1030 = tail call float @llvm.exp2.f32(float %1029), !dbg !91
  %1031 = fmul float %983, 0x3FF7154760000000, !dbg !91
  %1032 = tail call float @llvm.exp2.f32(float %1031), !dbg !91
  %1033 = fmul float %984, 0x3FF7154760000000, !dbg !91
  %1034 = tail call float @llvm.exp2.f32(float %1033), !dbg !91
  %1035 = fmul float %985, 0x3FF7154760000000, !dbg !91
  %1036 = tail call float @llvm.exp2.f32(float %1035), !dbg !91
  %1037 = fmul float %986, 0x3FF7154760000000, !dbg !91
  %1038 = tail call float @llvm.exp2.f32(float %1037), !dbg !91
  %1039 = fmul float %987, 0x3FF7154760000000, !dbg !91
  %1040 = tail call float @llvm.exp2.f32(float %1039), !dbg !91
  %1041 = fmul float %988, 0x3FF7154760000000, !dbg !91
  %1042 = tail call float @llvm.exp2.f32(float %1041), !dbg !91
  %1043 = fmul float %989, 0x3FF7154760000000, !dbg !91
  %1044 = tail call float @llvm.exp2.f32(float %1043), !dbg !91
  %1045 = fmul float %990, 0x3FF7154760000000, !dbg !91
  %1046 = tail call float @llvm.exp2.f32(float %1045), !dbg !91
  %1047 = fmul float %991, 0x3FF7154760000000, !dbg !91
  %1048 = tail call float @llvm.exp2.f32(float %1047), !dbg !91
  %1049 = fmul float %992, 0x3FF7154760000000, !dbg !91
  %1050 = tail call float @llvm.exp2.f32(float %1049), !dbg !91
  %1051 = fmul float %993, 0x3FF7154760000000, !dbg !91
  %1052 = tail call float @llvm.exp2.f32(float %1051), !dbg !91
  %1053 = fmul float %994, 0x3FF7154760000000, !dbg !91
  %1054 = tail call float @llvm.exp2.f32(float %1053), !dbg !91
  %1055 = fmul float %995, 0x3FF7154760000000, !dbg !91
  %1056 = tail call float @llvm.exp2.f32(float %1055), !dbg !91
  %1057 = fmul float %996, 0x3FF7154760000000, !dbg !91
  %1058 = tail call float @llvm.exp2.f32(float %1057), !dbg !91
  %1059 = fmul float %997, 0x3FF7154760000000, !dbg !91
  %1060 = tail call float @llvm.exp2.f32(float %1059), !dbg !91
  %1061 = fmul float %998, 0x3FF7154760000000, !dbg !91
  %1062 = tail call float @llvm.exp2.f32(float %1061), !dbg !91
  %1063 = shufflevector <4 x bfloat> %743, <4 x bfloat> %744, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %1064 = shufflevector <4 x bfloat> %745, <4 x bfloat> %746, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %1065 = shufflevector <4 x bfloat> %747, <4 x bfloat> %748, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %1066 = shufflevector <4 x bfloat> %749, <4 x bfloat> %750, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %1067 = shufflevector <4 x bfloat> %751, <4 x bfloat> %752, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %1068 = shufflevector <4 x bfloat> %753, <4 x bfloat> %754, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %1069 = shufflevector <4 x bfloat> %755, <4 x bfloat> %756, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %1070 = shufflevector <4 x bfloat> %757, <4 x bfloat> %758, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %1071 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %451, i64 0, !dbg !92
  %1072 = insertelement <16 x float> %1071, float %452, i64 1, !dbg !92
  %1073 = insertelement <16 x float> %1072, float %453, i64 2, !dbg !92
  %1074 = insertelement <16 x float> %1073, float %454, i64 3, !dbg !92
  %1075 = insertelement <16 x float> %1074, float %455, i64 4, !dbg !92
  %1076 = insertelement <16 x float> %1075, float %456, i64 5, !dbg !92
  %1077 = insertelement <16 x float> %1076, float %457, i64 6, !dbg !92
  %1078 = insertelement <16 x float> %1077, float %458, i64 7, !dbg !92
  %1079 = insertelement <16 x float> %1078, float %459, i64 8, !dbg !92
  %1080 = insertelement <16 x float> %1079, float %460, i64 9, !dbg !92
  %1081 = insertelement <16 x float> %1080, float %461, i64 10, !dbg !92
  %1082 = insertelement <16 x float> %1081, float %462, i64 11, !dbg !92
  %1083 = insertelement <16 x float> %1082, float %463, i64 12, !dbg !92
  %1084 = insertelement <16 x float> %1083, float %464, i64 13, !dbg !92
  %1085 = insertelement <16 x float> %1084, float %465, i64 14, !dbg !92
  %1086 = insertelement <16 x float> %1085, float %466, i64 15, !dbg !92
  %1087 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %467, i64 0, !dbg !92
  %1088 = insertelement <16 x float> %1087, float %468, i64 1, !dbg !92
  %1089 = insertelement <16 x float> %1088, float %469, i64 2, !dbg !92
  %1090 = insertelement <16 x float> %1089, float %470, i64 3, !dbg !92
  %1091 = insertelement <16 x float> %1090, float %471, i64 4, !dbg !92
  %1092 = insertelement <16 x float> %1091, float %472, i64 5, !dbg !92
  %1093 = insertelement <16 x float> %1092, float %473, i64 6, !dbg !92
  %1094 = insertelement <16 x float> %1093, float %474, i64 7, !dbg !92
  %1095 = insertelement <16 x float> %1094, float %475, i64 8, !dbg !92
  %1096 = insertelement <16 x float> %1095, float %476, i64 9, !dbg !92
  %1097 = insertelement <16 x float> %1096, float %477, i64 10, !dbg !92
  %1098 = insertelement <16 x float> %1097, float %478, i64 11, !dbg !92
  %1099 = insertelement <16 x float> %1098, float %479, i64 12, !dbg !92
  %1100 = insertelement <16 x float> %1099, float %480, i64 13, !dbg !92
  %1101 = insertelement <16 x float> %1100, float %481, i64 14, !dbg !92
  %1102 = insertelement <16 x float> %1101, float %482, i64 15, !dbg !92
  %1103 = insertelement <2 x float> poison, float %1000, i64 0, !dbg !93
  %1104 = insertelement <2 x float> %1103, float %1002, i64 1, !dbg !93
  %1105 = fadd <2 x float> %1104, splat (float 1.000000e+00), !dbg !93
  %1106 = fdiv <2 x float> splat (float 1.000000e+00), %1105, !dbg !94
  %1107 = fmul <2 x float> %1106, splat (float 2.000000e+00), !dbg !95
  %1108 = fadd <2 x float> %1107, splat (float -1.000000e+00), !dbg !96
  %1109 = shufflevector <16 x float> %679, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !97
  %1110 = fmul <2 x float> %1109, splat (float 5.000000e-01), !dbg !97
  %1111 = fadd <2 x float> %1108, splat (float 1.000000e+00), !dbg !98
  %1112 = fmul <2 x float> %1110, %1111, !dbg !99
  %1113 = fmul <2 x float> %446, %1112, !dbg !100
  %1114 = fptrunc <2 x float> %1113 to <2 x bfloat>, !dbg !101
  %1115 = fmul <2 x float> %1108, %1108, !dbg !102
  %1116 = fsub <2 x float> splat (float 1.000000e+00), %1115, !dbg !103
  %1117 = fmul <2 x float> %1110, %1116, !dbg !104
  %1118 = fmul <2 x float> %1109, splat (float 0x3FBB6676C0000000), !dbg !105
  %1119 = fmul <2 x float> %1109, %1118, !dbg !106
  %1120 = fadd <2 x float> %1119, splat (float 0x3FE9884540000000), !dbg !107
  %1121 = fmul <2 x float> %1120, %1117, !dbg !108
  %1122 = fmul <2 x float> %1111, splat (float 5.000000e-01), !dbg !109
  %1123 = fadd <2 x float> %1122, %1121, !dbg !110
  %1124 = fmul <2 x float> %446, %1123, !dbg !75
  %1125 = shufflevector <16 x float> %770, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !111
  %1126 = fmul <2 x float> %1124, %1125, !dbg !111
  %1127 = insertelement <2 x float> poison, float %1004, i64 0, !dbg !93
  %1128 = insertelement <2 x float> %1127, float %1006, i64 1, !dbg !93
  %1129 = fadd <2 x float> %1128, splat (float 1.000000e+00), !dbg !93
  %1130 = fdiv <2 x float> splat (float 1.000000e+00), %1129, !dbg !94
  %1131 = fmul <2 x float> %1130, splat (float 2.000000e+00), !dbg !95
  %1132 = fadd <2 x float> %1131, splat (float -1.000000e+00), !dbg !96
  %1133 = shufflevector <16 x float> %679, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !97
  %1134 = fmul <2 x float> %1133, splat (float 5.000000e-01), !dbg !97
  %1135 = fadd <2 x float> %1132, splat (float 1.000000e+00), !dbg !98
  %1136 = fmul <2 x float> %1134, %1135, !dbg !99
  %1137 = fmul <2 x float> %446, %1136, !dbg !100
  %1138 = fptrunc <2 x float> %1137 to <2 x bfloat>, !dbg !101
  %1139 = shufflevector <2 x bfloat> %1114, <2 x bfloat> %1138, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !92
  %1140 = fmul <2 x float> %1132, %1132, !dbg !102
  %1141 = fsub <2 x float> splat (float 1.000000e+00), %1140, !dbg !103
  %1142 = fmul <2 x float> %1134, %1141, !dbg !104
  %1143 = fmul <2 x float> %1133, splat (float 0x3FBB6676C0000000), !dbg !105
  %1144 = fmul <2 x float> %1133, %1143, !dbg !106
  %1145 = fadd <2 x float> %1144, splat (float 0x3FE9884540000000), !dbg !107
  %1146 = fmul <2 x float> %1145, %1142, !dbg !108
  %1147 = fmul <2 x float> %1135, splat (float 5.000000e-01), !dbg !109
  %1148 = fadd <2 x float> %1147, %1146, !dbg !110
  %1149 = fmul <2 x float> %446, %1148, !dbg !75
  %1150 = shufflevector <16 x float> %770, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !111
  %1151 = fmul <2 x float> %1149, %1150, !dbg !111
  %1152 = insertelement <2 x float> poison, float %1008, i64 0, !dbg !93
  %1153 = insertelement <2 x float> %1152, float %1010, i64 1, !dbg !93
  %1154 = fadd <2 x float> %1153, splat (float 1.000000e+00), !dbg !93
  %1155 = fdiv <2 x float> splat (float 1.000000e+00), %1154, !dbg !94
  %1156 = fmul <2 x float> %1155, splat (float 2.000000e+00), !dbg !95
  %1157 = fadd <2 x float> %1156, splat (float -1.000000e+00), !dbg !96
  %1158 = shufflevector <16 x float> %679, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !97
  %1159 = fmul <2 x float> %1158, splat (float 5.000000e-01), !dbg !97
  %1160 = fadd <2 x float> %1157, splat (float 1.000000e+00), !dbg !98
  %1161 = fmul <2 x float> %1159, %1160, !dbg !99
  %1162 = fmul <2 x float> %446, %1161, !dbg !100
  %1163 = fptrunc <2 x float> %1162 to <2 x bfloat>, !dbg !101
  %1164 = shufflevector <2 x bfloat> %1163, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1165 = shufflevector <8 x bfloat> %1139, <8 x bfloat> %1164, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !92
  %1166 = fmul <2 x float> %1157, %1157, !dbg !102
  %1167 = fsub <2 x float> splat (float 1.000000e+00), %1166, !dbg !103
  %1168 = fmul <2 x float> %1159, %1167, !dbg !104
  %1169 = fmul <2 x float> %1158, splat (float 0x3FBB6676C0000000), !dbg !105
  %1170 = fmul <2 x float> %1158, %1169, !dbg !106
  %1171 = fadd <2 x float> %1170, splat (float 0x3FE9884540000000), !dbg !107
  %1172 = fmul <2 x float> %1171, %1168, !dbg !108
  %1173 = fmul <2 x float> %1160, splat (float 5.000000e-01), !dbg !109
  %1174 = fadd <2 x float> %1173, %1172, !dbg !110
  %1175 = fmul <2 x float> %446, %1174, !dbg !75
  %1176 = shufflevector <16 x float> %770, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !111
  %1177 = fmul <2 x float> %1175, %1176, !dbg !111
  %1178 = insertelement <2 x float> poison, float %1012, i64 0, !dbg !93
  %1179 = insertelement <2 x float> %1178, float %1014, i64 1, !dbg !93
  %1180 = fadd <2 x float> %1179, splat (float 1.000000e+00), !dbg !93
  %1181 = fdiv <2 x float> splat (float 1.000000e+00), %1180, !dbg !94
  %1182 = fmul <2 x float> %1181, splat (float 2.000000e+00), !dbg !95
  %1183 = fadd <2 x float> %1182, splat (float -1.000000e+00), !dbg !96
  %1184 = shufflevector <16 x float> %679, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !97
  %1185 = fmul <2 x float> %1184, splat (float 5.000000e-01), !dbg !97
  %1186 = fadd <2 x float> %1183, splat (float 1.000000e+00), !dbg !98
  %1187 = fmul <2 x float> %1185, %1186, !dbg !99
  %1188 = fmul <2 x float> %446, %1187, !dbg !100
  %1189 = fptrunc <2 x float> %1188 to <2 x bfloat>, !dbg !101
  %1190 = shufflevector <2 x bfloat> %1189, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1191 = shufflevector <8 x bfloat> %1165, <8 x bfloat> %1190, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !92
  %1192 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1063, <8 x bfloat> %1191, <16 x float> %1086, i32 0, i32 0, i32 0), !dbg !92
  %1193 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1067, <8 x bfloat> %1191, <16 x float> %1102, i32 0, i32 0, i32 0), !dbg !92
  %1194 = fmul <2 x float> %1183, %1183, !dbg !102
  %1195 = fsub <2 x float> splat (float 1.000000e+00), %1194, !dbg !103
  %1196 = fmul <2 x float> %1185, %1195, !dbg !104
  %1197 = fmul <2 x float> %1184, splat (float 0x3FBB6676C0000000), !dbg !105
  %1198 = fmul <2 x float> %1184, %1197, !dbg !106
  %1199 = fadd <2 x float> %1198, splat (float 0x3FE9884540000000), !dbg !107
  %1200 = fmul <2 x float> %1199, %1196, !dbg !108
  %1201 = fmul <2 x float> %1186, splat (float 5.000000e-01), !dbg !109
  %1202 = fadd <2 x float> %1201, %1200, !dbg !110
  %1203 = fmul <2 x float> %446, %1202, !dbg !75
  %1204 = shufflevector <16 x float> %770, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !111
  %1205 = fmul <2 x float> %1203, %1204, !dbg !111
  %1206 = insertelement <2 x float> poison, float %1016, i64 0, !dbg !93
  %1207 = insertelement <2 x float> %1206, float %1018, i64 1, !dbg !93
  %1208 = fadd <2 x float> %1207, splat (float 1.000000e+00), !dbg !93
  %1209 = fdiv <2 x float> splat (float 1.000000e+00), %1208, !dbg !94
  %1210 = fmul <2 x float> %1209, splat (float 2.000000e+00), !dbg !95
  %1211 = fadd <2 x float> %1210, splat (float -1.000000e+00), !dbg !96
  %1212 = shufflevector <16 x float> %679, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !97
  %1213 = fmul <2 x float> %1212, splat (float 5.000000e-01), !dbg !97
  %1214 = fadd <2 x float> %1211, splat (float 1.000000e+00), !dbg !98
  %1215 = fmul <2 x float> %1213, %1214, !dbg !99
  %1216 = fmul <2 x float> %446, %1215, !dbg !100
  %1217 = fptrunc <2 x float> %1216 to <2 x bfloat>, !dbg !101
  %1218 = fmul <2 x float> %1211, %1211, !dbg !102
  %1219 = fsub <2 x float> splat (float 1.000000e+00), %1218, !dbg !103
  %1220 = fmul <2 x float> %1213, %1219, !dbg !104
  %1221 = fmul <2 x float> %1212, splat (float 0x3FBB6676C0000000), !dbg !105
  %1222 = fmul <2 x float> %1212, %1221, !dbg !106
  %1223 = fadd <2 x float> %1222, splat (float 0x3FE9884540000000), !dbg !107
  %1224 = fmul <2 x float> %1223, %1220, !dbg !108
  %1225 = fmul <2 x float> %1214, splat (float 5.000000e-01), !dbg !109
  %1226 = fadd <2 x float> %1225, %1224, !dbg !110
  %1227 = fmul <2 x float> %446, %1226, !dbg !75
  %1228 = shufflevector <16 x float> %770, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !111
  %1229 = fmul <2 x float> %1227, %1228, !dbg !111
  %1230 = insertelement <2 x float> poison, float %1020, i64 0, !dbg !93
  %1231 = insertelement <2 x float> %1230, float %1022, i64 1, !dbg !93
  %1232 = fadd <2 x float> %1231, splat (float 1.000000e+00), !dbg !93
  %1233 = fdiv <2 x float> splat (float 1.000000e+00), %1232, !dbg !94
  %1234 = fmul <2 x float> %1233, splat (float 2.000000e+00), !dbg !95
  %1235 = fadd <2 x float> %1234, splat (float -1.000000e+00), !dbg !96
  %1236 = shufflevector <16 x float> %679, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !97
  %1237 = fmul <2 x float> %1236, splat (float 5.000000e-01), !dbg !97
  %1238 = fadd <2 x float> %1235, splat (float 1.000000e+00), !dbg !98
  %1239 = fmul <2 x float> %1237, %1238, !dbg !99
  %1240 = fmul <2 x float> %446, %1239, !dbg !100
  %1241 = fptrunc <2 x float> %1240 to <2 x bfloat>, !dbg !101
  %1242 = shufflevector <2 x bfloat> %1217, <2 x bfloat> %1241, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !92
  %1243 = fmul <2 x float> %1235, %1235, !dbg !102
  %1244 = fsub <2 x float> splat (float 1.000000e+00), %1243, !dbg !103
  %1245 = fmul <2 x float> %1237, %1244, !dbg !104
  %1246 = fmul <2 x float> %1236, splat (float 0x3FBB6676C0000000), !dbg !105
  %1247 = fmul <2 x float> %1236, %1246, !dbg !106
  %1248 = fadd <2 x float> %1247, splat (float 0x3FE9884540000000), !dbg !107
  %1249 = fmul <2 x float> %1248, %1245, !dbg !108
  %1250 = fmul <2 x float> %1238, splat (float 5.000000e-01), !dbg !109
  %1251 = fadd <2 x float> %1250, %1249, !dbg !110
  %1252 = fmul <2 x float> %446, %1251, !dbg !75
  %1253 = shufflevector <16 x float> %770, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !111
  %1254 = fmul <2 x float> %1252, %1253, !dbg !111
  %1255 = insertelement <2 x float> poison, float %1024, i64 0, !dbg !93
  %1256 = insertelement <2 x float> %1255, float %1026, i64 1, !dbg !93
  %1257 = fadd <2 x float> %1256, splat (float 1.000000e+00), !dbg !93
  %1258 = fdiv <2 x float> splat (float 1.000000e+00), %1257, !dbg !94
  %1259 = fmul <2 x float> %1258, splat (float 2.000000e+00), !dbg !95
  %1260 = fadd <2 x float> %1259, splat (float -1.000000e+00), !dbg !96
  %1261 = shufflevector <16 x float> %679, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !97
  %1262 = fmul <2 x float> %1261, splat (float 5.000000e-01), !dbg !97
  %1263 = fadd <2 x float> %1260, splat (float 1.000000e+00), !dbg !98
  %1264 = fmul <2 x float> %1262, %1263, !dbg !99
  %1265 = fmul <2 x float> %446, %1264, !dbg !100
  %1266 = fptrunc <2 x float> %1265 to <2 x bfloat>, !dbg !101
  %1267 = shufflevector <2 x bfloat> %1266, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1268 = shufflevector <8 x bfloat> %1242, <8 x bfloat> %1267, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !92
  %1269 = fmul <2 x float> %1260, %1260, !dbg !102
  %1270 = fsub <2 x float> splat (float 1.000000e+00), %1269, !dbg !103
  %1271 = fmul <2 x float> %1262, %1270, !dbg !104
  %1272 = fmul <2 x float> %1261, splat (float 0x3FBB6676C0000000), !dbg !105
  %1273 = fmul <2 x float> %1261, %1272, !dbg !106
  %1274 = fadd <2 x float> %1273, splat (float 0x3FE9884540000000), !dbg !107
  %1275 = fmul <2 x float> %1274, %1271, !dbg !108
  %1276 = fmul <2 x float> %1263, splat (float 5.000000e-01), !dbg !109
  %1277 = fadd <2 x float> %1276, %1275, !dbg !110
  %1278 = fmul <2 x float> %446, %1277, !dbg !75
  %1279 = shufflevector <16 x float> %770, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !111
  %1280 = fmul <2 x float> %1278, %1279, !dbg !111
  %1281 = insertelement <2 x float> poison, float %1028, i64 0, !dbg !93
  %1282 = insertelement <2 x float> %1281, float %1030, i64 1, !dbg !93
  %1283 = fadd <2 x float> %1282, splat (float 1.000000e+00), !dbg !93
  %1284 = fdiv <2 x float> splat (float 1.000000e+00), %1283, !dbg !94
  %1285 = fmul <2 x float> %1284, splat (float 2.000000e+00), !dbg !95
  %1286 = fadd <2 x float> %1285, splat (float -1.000000e+00), !dbg !96
  %1287 = shufflevector <16 x float> %679, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !97
  %1288 = fmul <2 x float> %1287, splat (float 5.000000e-01), !dbg !97
  %1289 = fadd <2 x float> %1286, splat (float 1.000000e+00), !dbg !98
  %1290 = fmul <2 x float> %1288, %1289, !dbg !99
  %1291 = fmul <2 x float> %446, %1290, !dbg !100
  %1292 = fptrunc <2 x float> %1291 to <2 x bfloat>, !dbg !101
  %1293 = shufflevector <2 x bfloat> %1292, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1294 = shufflevector <8 x bfloat> %1268, <8 x bfloat> %1293, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !92
  %1295 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1064, <8 x bfloat> %1294, <16 x float> %1192, i32 0, i32 0, i32 0), !dbg !92
  %1296 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1068, <8 x bfloat> %1294, <16 x float> %1193, i32 0, i32 0, i32 0), !dbg !92
  %1297 = fmul <2 x float> %1286, %1286, !dbg !102
  %1298 = fsub <2 x float> splat (float 1.000000e+00), %1297, !dbg !103
  %1299 = fmul <2 x float> %1288, %1298, !dbg !104
  %1300 = fmul <2 x float> %1287, splat (float 0x3FBB6676C0000000), !dbg !105
  %1301 = fmul <2 x float> %1287, %1300, !dbg !106
  %1302 = fadd <2 x float> %1301, splat (float 0x3FE9884540000000), !dbg !107
  %1303 = fmul <2 x float> %1302, %1299, !dbg !108
  %1304 = fmul <2 x float> %1289, splat (float 5.000000e-01), !dbg !109
  %1305 = fadd <2 x float> %1304, %1303, !dbg !110
  %1306 = fmul <2 x float> %446, %1305, !dbg !75
  %1307 = shufflevector <16 x float> %770, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !111
  %1308 = fmul <2 x float> %1306, %1307, !dbg !111
  %1309 = insertelement <2 x float> poison, float %1032, i64 0, !dbg !93
  %1310 = insertelement <2 x float> %1309, float %1034, i64 1, !dbg !93
  %1311 = fadd <2 x float> %1310, splat (float 1.000000e+00), !dbg !93
  %1312 = fdiv <2 x float> splat (float 1.000000e+00), %1311, !dbg !94
  %1313 = fmul <2 x float> %1312, splat (float 2.000000e+00), !dbg !95
  %1314 = fadd <2 x float> %1313, splat (float -1.000000e+00), !dbg !96
  %1315 = shufflevector <16 x float> %699, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !97
  %1316 = fmul <2 x float> %1315, splat (float 5.000000e-01), !dbg !97
  %1317 = fadd <2 x float> %1314, splat (float 1.000000e+00), !dbg !98
  %1318 = fmul <2 x float> %1316, %1317, !dbg !99
  %1319 = fmul <2 x float> %446, %1318, !dbg !100
  %1320 = fptrunc <2 x float> %1319 to <2 x bfloat>, !dbg !101
  %1321 = fmul <2 x float> %1314, %1314, !dbg !102
  %1322 = fsub <2 x float> splat (float 1.000000e+00), %1321, !dbg !103
  %1323 = fmul <2 x float> %1316, %1322, !dbg !104
  %1324 = fmul <2 x float> %1315, splat (float 0x3FBB6676C0000000), !dbg !105
  %1325 = fmul <2 x float> %1315, %1324, !dbg !106
  %1326 = fadd <2 x float> %1325, splat (float 0x3FE9884540000000), !dbg !107
  %1327 = fmul <2 x float> %1326, %1323, !dbg !108
  %1328 = fmul <2 x float> %1317, splat (float 5.000000e-01), !dbg !109
  %1329 = fadd <2 x float> %1328, %1327, !dbg !110
  %1330 = fmul <2 x float> %446, %1329, !dbg !75
  %1331 = shufflevector <16 x float> %774, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !111
  %1332 = fmul <2 x float> %1330, %1331, !dbg !111
  %1333 = insertelement <2 x float> poison, float %1036, i64 0, !dbg !93
  %1334 = insertelement <2 x float> %1333, float %1038, i64 1, !dbg !93
  %1335 = fadd <2 x float> %1334, splat (float 1.000000e+00), !dbg !93
  %1336 = fdiv <2 x float> splat (float 1.000000e+00), %1335, !dbg !94
  %1337 = fmul <2 x float> %1336, splat (float 2.000000e+00), !dbg !95
  %1338 = fadd <2 x float> %1337, splat (float -1.000000e+00), !dbg !96
  %1339 = shufflevector <16 x float> %699, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !97
  %1340 = fmul <2 x float> %1339, splat (float 5.000000e-01), !dbg !97
  %1341 = fadd <2 x float> %1338, splat (float 1.000000e+00), !dbg !98
  %1342 = fmul <2 x float> %1340, %1341, !dbg !99
  %1343 = fmul <2 x float> %446, %1342, !dbg !100
  %1344 = fptrunc <2 x float> %1343 to <2 x bfloat>, !dbg !101
  %1345 = shufflevector <2 x bfloat> %1320, <2 x bfloat> %1344, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !92
  %1346 = fmul <2 x float> %1338, %1338, !dbg !102
  %1347 = fsub <2 x float> splat (float 1.000000e+00), %1346, !dbg !103
  %1348 = fmul <2 x float> %1340, %1347, !dbg !104
  %1349 = fmul <2 x float> %1339, splat (float 0x3FBB6676C0000000), !dbg !105
  %1350 = fmul <2 x float> %1339, %1349, !dbg !106
  %1351 = fadd <2 x float> %1350, splat (float 0x3FE9884540000000), !dbg !107
  %1352 = fmul <2 x float> %1351, %1348, !dbg !108
  %1353 = fmul <2 x float> %1341, splat (float 5.000000e-01), !dbg !109
  %1354 = fadd <2 x float> %1353, %1352, !dbg !110
  %1355 = fmul <2 x float> %446, %1354, !dbg !75
  %1356 = shufflevector <16 x float> %774, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !111
  %1357 = fmul <2 x float> %1355, %1356, !dbg !111
  %1358 = insertelement <2 x float> poison, float %1040, i64 0, !dbg !93
  %1359 = insertelement <2 x float> %1358, float %1042, i64 1, !dbg !93
  %1360 = fadd <2 x float> %1359, splat (float 1.000000e+00), !dbg !93
  %1361 = fdiv <2 x float> splat (float 1.000000e+00), %1360, !dbg !94
  %1362 = fmul <2 x float> %1361, splat (float 2.000000e+00), !dbg !95
  %1363 = fadd <2 x float> %1362, splat (float -1.000000e+00), !dbg !96
  %1364 = shufflevector <16 x float> %699, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !97
  %1365 = fmul <2 x float> %1364, splat (float 5.000000e-01), !dbg !97
  %1366 = fadd <2 x float> %1363, splat (float 1.000000e+00), !dbg !98
  %1367 = fmul <2 x float> %1365, %1366, !dbg !99
  %1368 = fmul <2 x float> %446, %1367, !dbg !100
  %1369 = fptrunc <2 x float> %1368 to <2 x bfloat>, !dbg !101
  %1370 = shufflevector <2 x bfloat> %1369, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1371 = shufflevector <8 x bfloat> %1345, <8 x bfloat> %1370, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !92
  %1372 = fmul <2 x float> %1363, %1363, !dbg !102
  %1373 = fsub <2 x float> splat (float 1.000000e+00), %1372, !dbg !103
  %1374 = fmul <2 x float> %1365, %1373, !dbg !104
  %1375 = fmul <2 x float> %1364, splat (float 0x3FBB6676C0000000), !dbg !105
  %1376 = fmul <2 x float> %1364, %1375, !dbg !106
  %1377 = fadd <2 x float> %1376, splat (float 0x3FE9884540000000), !dbg !107
  %1378 = fmul <2 x float> %1377, %1374, !dbg !108
  %1379 = fmul <2 x float> %1366, splat (float 5.000000e-01), !dbg !109
  %1380 = fadd <2 x float> %1379, %1378, !dbg !110
  %1381 = fmul <2 x float> %446, %1380, !dbg !75
  %1382 = shufflevector <16 x float> %774, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !111
  %1383 = fmul <2 x float> %1381, %1382, !dbg !111
  %1384 = insertelement <2 x float> poison, float %1044, i64 0, !dbg !93
  %1385 = insertelement <2 x float> %1384, float %1046, i64 1, !dbg !93
  %1386 = fadd <2 x float> %1385, splat (float 1.000000e+00), !dbg !93
  %1387 = fdiv <2 x float> splat (float 1.000000e+00), %1386, !dbg !94
  %1388 = fmul <2 x float> %1387, splat (float 2.000000e+00), !dbg !95
  %1389 = fadd <2 x float> %1388, splat (float -1.000000e+00), !dbg !96
  %1390 = shufflevector <16 x float> %699, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !97
  %1391 = fmul <2 x float> %1390, splat (float 5.000000e-01), !dbg !97
  %1392 = fadd <2 x float> %1389, splat (float 1.000000e+00), !dbg !98
  %1393 = fmul <2 x float> %1391, %1392, !dbg !99
  %1394 = fmul <2 x float> %446, %1393, !dbg !100
  %1395 = fptrunc <2 x float> %1394 to <2 x bfloat>, !dbg !101
  %1396 = shufflevector <2 x bfloat> %1395, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1397 = shufflevector <8 x bfloat> %1371, <8 x bfloat> %1396, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !92
  %1398 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1065, <8 x bfloat> %1397, <16 x float> %1295, i32 0, i32 0, i32 0), !dbg !92
  %1399 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1069, <8 x bfloat> %1397, <16 x float> %1296, i32 0, i32 0, i32 0), !dbg !92
  %1400 = fmul <2 x float> %1389, %1389, !dbg !102
  %1401 = fsub <2 x float> splat (float 1.000000e+00), %1400, !dbg !103
  %1402 = fmul <2 x float> %1391, %1401, !dbg !104
  %1403 = fmul <2 x float> %1390, splat (float 0x3FBB6676C0000000), !dbg !105
  %1404 = fmul <2 x float> %1390, %1403, !dbg !106
  %1405 = fadd <2 x float> %1404, splat (float 0x3FE9884540000000), !dbg !107
  %1406 = fmul <2 x float> %1405, %1402, !dbg !108
  %1407 = fmul <2 x float> %1392, splat (float 5.000000e-01), !dbg !109
  %1408 = fadd <2 x float> %1407, %1406, !dbg !110
  %1409 = fmul <2 x float> %446, %1408, !dbg !75
  %1410 = shufflevector <16 x float> %774, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !111
  %1411 = fmul <2 x float> %1409, %1410, !dbg !111
  %1412 = insertelement <2 x float> poison, float %1048, i64 0, !dbg !93
  %1413 = insertelement <2 x float> %1412, float %1050, i64 1, !dbg !93
  %1414 = fadd <2 x float> %1413, splat (float 1.000000e+00), !dbg !93
  %1415 = fdiv <2 x float> splat (float 1.000000e+00), %1414, !dbg !94
  %1416 = fmul <2 x float> %1415, splat (float 2.000000e+00), !dbg !95
  %1417 = fadd <2 x float> %1416, splat (float -1.000000e+00), !dbg !96
  %1418 = shufflevector <16 x float> %699, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !97
  %1419 = fmul <2 x float> %1418, splat (float 5.000000e-01), !dbg !97
  %1420 = fadd <2 x float> %1417, splat (float 1.000000e+00), !dbg !98
  %1421 = fmul <2 x float> %1419, %1420, !dbg !99
  %1422 = fmul <2 x float> %446, %1421, !dbg !100
  %1423 = fptrunc <2 x float> %1422 to <2 x bfloat>, !dbg !101
  %1424 = fmul <2 x float> %1417, %1417, !dbg !102
  %1425 = fsub <2 x float> splat (float 1.000000e+00), %1424, !dbg !103
  %1426 = fmul <2 x float> %1419, %1425, !dbg !104
  %1427 = fmul <2 x float> %1418, splat (float 0x3FBB6676C0000000), !dbg !105
  %1428 = fmul <2 x float> %1418, %1427, !dbg !106
  %1429 = fadd <2 x float> %1428, splat (float 0x3FE9884540000000), !dbg !107
  %1430 = fmul <2 x float> %1429, %1426, !dbg !108
  %1431 = fmul <2 x float> %1420, splat (float 5.000000e-01), !dbg !109
  %1432 = fadd <2 x float> %1431, %1430, !dbg !110
  %1433 = fmul <2 x float> %446, %1432, !dbg !75
  %1434 = shufflevector <16 x float> %774, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !111
  %1435 = fmul <2 x float> %1433, %1434, !dbg !111
  %1436 = insertelement <2 x float> poison, float %1052, i64 0, !dbg !93
  %1437 = insertelement <2 x float> %1436, float %1054, i64 1, !dbg !93
  %1438 = fadd <2 x float> %1437, splat (float 1.000000e+00), !dbg !93
  %1439 = fdiv <2 x float> splat (float 1.000000e+00), %1438, !dbg !94
  %1440 = fmul <2 x float> %1439, splat (float 2.000000e+00), !dbg !95
  %1441 = fadd <2 x float> %1440, splat (float -1.000000e+00), !dbg !96
  %1442 = shufflevector <16 x float> %699, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !97
  %1443 = fmul <2 x float> %1442, splat (float 5.000000e-01), !dbg !97
  %1444 = fadd <2 x float> %1441, splat (float 1.000000e+00), !dbg !98
  %1445 = fmul <2 x float> %1443, %1444, !dbg !99
  %1446 = fmul <2 x float> %446, %1445, !dbg !100
  %1447 = fptrunc <2 x float> %1446 to <2 x bfloat>, !dbg !101
  %1448 = shufflevector <2 x bfloat> %1423, <2 x bfloat> %1447, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !92
  %1449 = fmul <2 x float> %1441, %1441, !dbg !102
  %1450 = fsub <2 x float> splat (float 1.000000e+00), %1449, !dbg !103
  %1451 = fmul <2 x float> %1443, %1450, !dbg !104
  %1452 = fmul <2 x float> %1442, splat (float 0x3FBB6676C0000000), !dbg !105
  %1453 = fmul <2 x float> %1442, %1452, !dbg !106
  %1454 = fadd <2 x float> %1453, splat (float 0x3FE9884540000000), !dbg !107
  %1455 = fmul <2 x float> %1454, %1451, !dbg !108
  %1456 = fmul <2 x float> %1444, splat (float 5.000000e-01), !dbg !109
  %1457 = fadd <2 x float> %1456, %1455, !dbg !110
  %1458 = fmul <2 x float> %446, %1457, !dbg !75
  %1459 = shufflevector <16 x float> %774, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !111
  %1460 = fmul <2 x float> %1458, %1459, !dbg !111
  %1461 = insertelement <2 x float> poison, float %1056, i64 0, !dbg !93
  %1462 = insertelement <2 x float> %1461, float %1058, i64 1, !dbg !93
  %1463 = fadd <2 x float> %1462, splat (float 1.000000e+00), !dbg !93
  %1464 = fdiv <2 x float> splat (float 1.000000e+00), %1463, !dbg !94
  %1465 = fmul <2 x float> %1464, splat (float 2.000000e+00), !dbg !95
  %1466 = fadd <2 x float> %1465, splat (float -1.000000e+00), !dbg !96
  %1467 = shufflevector <16 x float> %699, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !97
  %1468 = fmul <2 x float> %1467, splat (float 5.000000e-01), !dbg !97
  %1469 = fadd <2 x float> %1466, splat (float 1.000000e+00), !dbg !98
  %1470 = fmul <2 x float> %1468, %1469, !dbg !99
  %1471 = fmul <2 x float> %446, %1470, !dbg !100
  %1472 = fptrunc <2 x float> %1471 to <2 x bfloat>, !dbg !101
  %1473 = shufflevector <2 x bfloat> %1472, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1474 = shufflevector <8 x bfloat> %1448, <8 x bfloat> %1473, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !92
  %1475 = fmul <2 x float> %1466, %1466, !dbg !102
  %1476 = fsub <2 x float> splat (float 1.000000e+00), %1475, !dbg !103
  %1477 = fmul <2 x float> %1468, %1476, !dbg !104
  %1478 = fmul <2 x float> %1467, splat (float 0x3FBB6676C0000000), !dbg !105
  %1479 = fmul <2 x float> %1467, %1478, !dbg !106
  %1480 = fadd <2 x float> %1479, splat (float 0x3FE9884540000000), !dbg !107
  %1481 = fmul <2 x float> %1480, %1477, !dbg !108
  %1482 = fmul <2 x float> %1469, splat (float 5.000000e-01), !dbg !109
  %1483 = fadd <2 x float> %1482, %1481, !dbg !110
  %1484 = fmul <2 x float> %446, %1483, !dbg !75
  %1485 = shufflevector <16 x float> %774, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !111
  %1486 = fmul <2 x float> %1484, %1485, !dbg !111
  %1487 = insertelement <2 x float> poison, float %1060, i64 0, !dbg !93
  %1488 = insertelement <2 x float> %1487, float %1062, i64 1, !dbg !93
  %1489 = fadd <2 x float> %1488, splat (float 1.000000e+00), !dbg !93
  %1490 = fdiv <2 x float> splat (float 1.000000e+00), %1489, !dbg !94
  %1491 = fmul <2 x float> %1490, splat (float 2.000000e+00), !dbg !95
  %1492 = fadd <2 x float> %1491, splat (float -1.000000e+00), !dbg !96
  %1493 = shufflevector <16 x float> %699, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !97
  %1494 = fmul <2 x float> %1493, splat (float 5.000000e-01), !dbg !97
  %1495 = fadd <2 x float> %1492, splat (float 1.000000e+00), !dbg !98
  %1496 = fmul <2 x float> %1494, %1495, !dbg !99
  %1497 = fmul <2 x float> %446, %1496, !dbg !100
  %1498 = fptrunc <2 x float> %1497 to <2 x bfloat>, !dbg !101
  %1499 = shufflevector <2 x bfloat> %1498, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1500 = shufflevector <8 x bfloat> %1474, <8 x bfloat> %1499, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !92
  %1501 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1066, <8 x bfloat> %1500, <16 x float> %1398, i32 0, i32 0, i32 0), !dbg !92
  %1502 = extractelement <16 x float> %1501, i64 0, !dbg !92
  %1503 = extractelement <16 x float> %1501, i64 1, !dbg !92
  %1504 = extractelement <16 x float> %1501, i64 2, !dbg !92
  %1505 = extractelement <16 x float> %1501, i64 3, !dbg !92
  %1506 = extractelement <16 x float> %1501, i64 4, !dbg !92
  %1507 = extractelement <16 x float> %1501, i64 5, !dbg !92
  %1508 = extractelement <16 x float> %1501, i64 6, !dbg !92
  %1509 = extractelement <16 x float> %1501, i64 7, !dbg !92
  %1510 = extractelement <16 x float> %1501, i64 8, !dbg !92
  %1511 = extractelement <16 x float> %1501, i64 9, !dbg !92
  %1512 = extractelement <16 x float> %1501, i64 10, !dbg !92
  %1513 = extractelement <16 x float> %1501, i64 11, !dbg !92
  %1514 = extractelement <16 x float> %1501, i64 12, !dbg !92
  %1515 = extractelement <16 x float> %1501, i64 13, !dbg !92
  %1516 = extractelement <16 x float> %1501, i64 14, !dbg !92
  %1517 = extractelement <16 x float> %1501, i64 15, !dbg !92
  %1518 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1070, <8 x bfloat> %1500, <16 x float> %1399, i32 0, i32 0, i32 0), !dbg !92
  %1519 = extractelement <16 x float> %1518, i64 0, !dbg !92
  %1520 = extractelement <16 x float> %1518, i64 1, !dbg !92
  %1521 = extractelement <16 x float> %1518, i64 2, !dbg !92
  %1522 = extractelement <16 x float> %1518, i64 3, !dbg !92
  %1523 = extractelement <16 x float> %1518, i64 4, !dbg !92
  %1524 = extractelement <16 x float> %1518, i64 5, !dbg !92
  %1525 = extractelement <16 x float> %1518, i64 6, !dbg !92
  %1526 = extractelement <16 x float> %1518, i64 7, !dbg !92
  %1527 = extractelement <16 x float> %1518, i64 8, !dbg !92
  %1528 = extractelement <16 x float> %1518, i64 9, !dbg !92
  %1529 = extractelement <16 x float> %1518, i64 10, !dbg !92
  %1530 = extractelement <16 x float> %1518, i64 11, !dbg !92
  %1531 = extractelement <16 x float> %1518, i64 12, !dbg !92
  %1532 = extractelement <16 x float> %1518, i64 13, !dbg !92
  %1533 = extractelement <16 x float> %1518, i64 14, !dbg !92
  %1534 = extractelement <16 x float> %1518, i64 15, !dbg !92
  %1535 = fmul <2 x float> %1492, %1492, !dbg !102
  %1536 = fsub <2 x float> splat (float 1.000000e+00), %1535, !dbg !103
  %1537 = fmul <2 x float> %1494, %1536, !dbg !104
  %1538 = fmul <2 x float> %1493, splat (float 0x3FBB6676C0000000), !dbg !105
  %1539 = fmul <2 x float> %1493, %1538, !dbg !106
  %1540 = fadd <2 x float> %1539, splat (float 0x3FE9884540000000), !dbg !107
  %1541 = fmul <2 x float> %1540, %1537, !dbg !108
  %1542 = fmul <2 x float> %1495, splat (float 5.000000e-01), !dbg !109
  %1543 = fadd <2 x float> %1542, %1541, !dbg !110
  %1544 = fmul <2 x float> %446, %1543, !dbg !75
  %1545 = shufflevector <16 x float> %774, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !111
  %1546 = fmul <2 x float> %1544, %1545, !dbg !111
  %1547 = fptrunc <2 x float> %1126 to <2 x bfloat>, !dbg !112
  %1548 = fptrunc <2 x float> %1151 to <2 x bfloat>, !dbg !112
  %1549 = fptrunc <2 x float> %1177 to <2 x bfloat>, !dbg !112
  %1550 = fptrunc <2 x float> %1205 to <2 x bfloat>, !dbg !112
  %1551 = fptrunc <2 x float> %1229 to <2 x bfloat>, !dbg !112
  %1552 = fptrunc <2 x float> %1254 to <2 x bfloat>, !dbg !112
  %1553 = fptrunc <2 x float> %1280 to <2 x bfloat>, !dbg !112
  %1554 = fptrunc <2 x float> %1308 to <2 x bfloat>, !dbg !112
  %1555 = fptrunc <2 x float> %1332 to <2 x bfloat>, !dbg !112
  %1556 = fptrunc <2 x float> %1357 to <2 x bfloat>, !dbg !112
  %1557 = fptrunc <2 x float> %1383 to <2 x bfloat>, !dbg !112
  %1558 = fptrunc <2 x float> %1411 to <2 x bfloat>, !dbg !112
  %1559 = fptrunc <2 x float> %1435 to <2 x bfloat>, !dbg !112
  %1560 = fptrunc <2 x float> %1460 to <2 x bfloat>, !dbg !112
  %1561 = fptrunc <2 x float> %1486 to <2 x bfloat>, !dbg !112
  %1562 = fptrunc <2 x float> %1546 to <2 x bfloat>, !dbg !112
  %1563 = bitcast <2 x bfloat> %1547 to i32, !dbg !112
  %1564 = bitcast <2 x bfloat> %1548 to i32, !dbg !112
  %1565 = bitcast <2 x bfloat> %1549 to i32, !dbg !112
  %1566 = bitcast <2 x bfloat> %1550 to i32, !dbg !112
  %1567 = bitcast <2 x bfloat> %1551 to i32, !dbg !112
  %1568 = bitcast <2 x bfloat> %1552 to i32, !dbg !112
  %1569 = bitcast <2 x bfloat> %1553 to i32, !dbg !112
  %1570 = bitcast <2 x bfloat> %1554 to i32, !dbg !112
  %1571 = bitcast <2 x bfloat> %1555 to i32, !dbg !112
  %1572 = bitcast <2 x bfloat> %1556 to i32, !dbg !112
  %1573 = bitcast <2 x bfloat> %1557 to i32, !dbg !112
  %1574 = bitcast <2 x bfloat> %1558 to i32, !dbg !112
  %1575 = bitcast <2 x bfloat> %1559 to i32, !dbg !112
  %1576 = bitcast <2 x bfloat> %1560 to i32, !dbg !112
  %1577 = bitcast <2 x bfloat> %1561 to i32, !dbg !112
  %1578 = bitcast <2 x bfloat> %1562 to i32, !dbg !112
  %1579 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %1563, i32 %1565, i1 false, i1 false), !dbg !112
  %1580 = extractvalue { i32, i32 } %1579, 0, !dbg !112
  %1581 = extractvalue { i32, i32 } %1579, 1, !dbg !112
  %1582 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %1564, i32 %1566, i1 false, i1 false), !dbg !112
  %1583 = extractvalue { i32, i32 } %1582, 0, !dbg !112
  %1584 = extractvalue { i32, i32 } %1582, 1, !dbg !112
  %1585 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %1567, i32 %1569, i1 false, i1 false), !dbg !112
  %1586 = extractvalue { i32, i32 } %1585, 0, !dbg !112
  %1587 = extractvalue { i32, i32 } %1585, 1, !dbg !112
  %1588 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %1568, i32 %1570, i1 false, i1 false), !dbg !112
  %1589 = extractvalue { i32, i32 } %1588, 0, !dbg !112
  %1590 = extractvalue { i32, i32 } %1588, 1, !dbg !112
  %1591 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %1571, i32 %1573, i1 false, i1 false), !dbg !112
  %1592 = extractvalue { i32, i32 } %1591, 0, !dbg !112
  %1593 = extractvalue { i32, i32 } %1591, 1, !dbg !112
  %1594 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %1572, i32 %1574, i1 false, i1 false), !dbg !112
  %1595 = extractvalue { i32, i32 } %1594, 0, !dbg !112
  %1596 = extractvalue { i32, i32 } %1594, 1, !dbg !112
  %1597 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %1575, i32 %1577, i1 false, i1 false), !dbg !112
  %1598 = extractvalue { i32, i32 } %1597, 0, !dbg !112
  %1599 = extractvalue { i32, i32 } %1597, 1, !dbg !112
  %1600 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %1576, i32 %1578, i1 false, i1 false), !dbg !112
  %1601 = extractvalue { i32, i32 } %1600, 0, !dbg !112
  %1602 = extractvalue { i32, i32 } %1600, 1, !dbg !112
  %1603 = bitcast i32 %1580 to <2 x bfloat>, !dbg !112
  %1604 = bitcast i32 %1583 to <2 x bfloat>, !dbg !112
  %1605 = bitcast i32 %1581 to <2 x bfloat>, !dbg !112
  %1606 = shufflevector <2 x bfloat> %1605, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1607 = bitcast i32 %1584 to <2 x bfloat>, !dbg !112
  %1608 = shufflevector <2 x bfloat> %1607, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1609 = bitcast i32 %1586 to <2 x bfloat>, !dbg !112
  %1610 = bitcast i32 %1589 to <2 x bfloat>, !dbg !112
  %1611 = bitcast i32 %1587 to <2 x bfloat>, !dbg !112
  %1612 = shufflevector <2 x bfloat> %1611, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1613 = bitcast i32 %1590 to <2 x bfloat>, !dbg !112
  %1614 = shufflevector <2 x bfloat> %1613, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1615 = bitcast i32 %1592 to <2 x bfloat>, !dbg !112
  %1616 = bitcast i32 %1595 to <2 x bfloat>, !dbg !112
  %1617 = bitcast i32 %1593 to <2 x bfloat>, !dbg !112
  %1618 = shufflevector <2 x bfloat> %1617, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1619 = bitcast i32 %1596 to <2 x bfloat>, !dbg !112
  %1620 = shufflevector <2 x bfloat> %1619, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1621 = bitcast i32 %1598 to <2 x bfloat>, !dbg !112
  %1622 = bitcast i32 %1601 to <2 x bfloat>, !dbg !112
  %1623 = bitcast i32 %1599 to <2 x bfloat>, !dbg !112
  %1624 = shufflevector <2 x bfloat> %1623, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1625 = bitcast i32 %1602 to <2 x bfloat>, !dbg !112
  %1626 = shufflevector <2 x bfloat> %1625, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1627 = shufflevector <2 x bfloat> %1603, <2 x bfloat> %1604, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1628 = shufflevector <8 x bfloat> %1627, <8 x bfloat> %1606, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !71
  %1629 = shufflevector <8 x bfloat> %1628, <8 x bfloat> %1608, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !71
  %1630 = shufflevector <2 x bfloat> %1609, <2 x bfloat> %1610, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1631 = shufflevector <8 x bfloat> %1630, <8 x bfloat> %1612, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !71
  %1632 = shufflevector <8 x bfloat> %1631, <8 x bfloat> %1614, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !71
  %1633 = shufflevector <2 x bfloat> %1615, <2 x bfloat> %1616, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1634 = shufflevector <8 x bfloat> %1633, <8 x bfloat> %1618, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !71
  %1635 = shufflevector <8 x bfloat> %1634, <8 x bfloat> %1620, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !71
  %1636 = shufflevector <2 x bfloat> %1621, <2 x bfloat> %1622, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1637 = shufflevector <8 x bfloat> %1636, <8 x bfloat> %1624, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !71
  %1638 = shufflevector <8 x bfloat> %1637, <8 x bfloat> %1626, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !71
  %1639 = shufflevector <1 x bfloat> %556, <1 x bfloat> %557, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1640 = shufflevector <8 x bfloat> %1639, <8 x bfloat> %565, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1641 = shufflevector <8 x bfloat> %1640, <8 x bfloat> %567, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1642 = shufflevector <8 x bfloat> %1641, <8 x bfloat> %581, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1643 = shufflevector <8 x bfloat> %1642, <8 x bfloat> %583, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !71
  %1644 = shufflevector <8 x bfloat> %1643, <8 x bfloat> %597, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !71
  %1645 = shufflevector <8 x bfloat> %1644, <8 x bfloat> %599, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !71
  %1646 = shufflevector <1 x bfloat> %558, <1 x bfloat> %559, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1647 = shufflevector <8 x bfloat> %1646, <8 x bfloat> %569, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1648 = shufflevector <8 x bfloat> %1647, <8 x bfloat> %571, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1649 = shufflevector <8 x bfloat> %1648, <8 x bfloat> %585, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1650 = shufflevector <8 x bfloat> %1649, <8 x bfloat> %587, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !71
  %1651 = shufflevector <8 x bfloat> %1650, <8 x bfloat> %601, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !71
  %1652 = shufflevector <8 x bfloat> %1651, <8 x bfloat> %603, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !71
  %1653 = shufflevector <1 x bfloat> %560, <1 x bfloat> %561, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1654 = shufflevector <8 x bfloat> %1653, <8 x bfloat> %573, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1655 = shufflevector <8 x bfloat> %1654, <8 x bfloat> %575, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1656 = shufflevector <8 x bfloat> %1655, <8 x bfloat> %589, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1657 = shufflevector <8 x bfloat> %1656, <8 x bfloat> %591, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !71
  %1658 = shufflevector <8 x bfloat> %1657, <8 x bfloat> %605, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !71
  %1659 = shufflevector <8 x bfloat> %1658, <8 x bfloat> %607, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !71
  %1660 = shufflevector <1 x bfloat> %562, <1 x bfloat> %563, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1661 = shufflevector <8 x bfloat> %1660, <8 x bfloat> %577, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1662 = shufflevector <8 x bfloat> %1661, <8 x bfloat> %579, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1663 = shufflevector <8 x bfloat> %1662, <8 x bfloat> %593, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1664 = shufflevector <8 x bfloat> %1663, <8 x bfloat> %595, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !71
  %1665 = shufflevector <8 x bfloat> %1664, <8 x bfloat> %609, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !71
  %1666 = shufflevector <8 x bfloat> %1665, <8 x bfloat> %611, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !71
  %1667 = shufflevector <1 x bfloat> %612, <1 x bfloat> %613, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1668 = shufflevector <8 x bfloat> %1667, <8 x bfloat> %621, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1669 = shufflevector <8 x bfloat> %1668, <8 x bfloat> %623, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1670 = shufflevector <8 x bfloat> %1669, <8 x bfloat> %637, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1671 = shufflevector <8 x bfloat> %1670, <8 x bfloat> %639, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !71
  %1672 = shufflevector <8 x bfloat> %1671, <8 x bfloat> %653, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !71
  %1673 = shufflevector <8 x bfloat> %1672, <8 x bfloat> %655, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !71
  %1674 = shufflevector <1 x bfloat> %614, <1 x bfloat> %615, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1675 = shufflevector <8 x bfloat> %1674, <8 x bfloat> %625, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1676 = shufflevector <8 x bfloat> %1675, <8 x bfloat> %627, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1677 = shufflevector <8 x bfloat> %1676, <8 x bfloat> %641, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1678 = shufflevector <8 x bfloat> %1677, <8 x bfloat> %643, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !71
  %1679 = shufflevector <8 x bfloat> %1678, <8 x bfloat> %657, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !71
  %1680 = shufflevector <8 x bfloat> %1679, <8 x bfloat> %659, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !71
  %1681 = shufflevector <1 x bfloat> %616, <1 x bfloat> %617, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1682 = shufflevector <8 x bfloat> %1681, <8 x bfloat> %629, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1683 = shufflevector <8 x bfloat> %1682, <8 x bfloat> %631, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1684 = shufflevector <8 x bfloat> %1683, <8 x bfloat> %645, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1685 = shufflevector <8 x bfloat> %1684, <8 x bfloat> %647, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !71
  %1686 = shufflevector <8 x bfloat> %1685, <8 x bfloat> %661, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !71
  %1687 = shufflevector <8 x bfloat> %1686, <8 x bfloat> %663, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !71
  %1688 = shufflevector <1 x bfloat> %618, <1 x bfloat> %619, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1689 = shufflevector <8 x bfloat> %1688, <8 x bfloat> %633, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1690 = shufflevector <8 x bfloat> %1689, <8 x bfloat> %635, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1691 = shufflevector <8 x bfloat> %1690, <8 x bfloat> %649, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !71
  %1692 = shufflevector <8 x bfloat> %1691, <8 x bfloat> %651, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !71
  %1693 = shufflevector <8 x bfloat> %1692, <8 x bfloat> %665, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !71
  %1694 = shufflevector <8 x bfloat> %1693, <8 x bfloat> %667, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !71
  %1695 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %483, i64 0, !dbg !71
  %1696 = insertelement <16 x float> %1695, float %484, i64 1, !dbg !71
  %1697 = insertelement <16 x float> %1696, float %485, i64 2, !dbg !71
  %1698 = insertelement <16 x float> %1697, float %486, i64 3, !dbg !71
  %1699 = insertelement <16 x float> %1698, float %487, i64 4, !dbg !71
  %1700 = insertelement <16 x float> %1699, float %488, i64 5, !dbg !71
  %1701 = insertelement <16 x float> %1700, float %489, i64 6, !dbg !71
  %1702 = insertelement <16 x float> %1701, float %490, i64 7, !dbg !71
  %1703 = insertelement <16 x float> %1702, float %491, i64 8, !dbg !71
  %1704 = insertelement <16 x float> %1703, float %492, i64 9, !dbg !71
  %1705 = insertelement <16 x float> %1704, float %493, i64 10, !dbg !71
  %1706 = insertelement <16 x float> %1705, float %494, i64 11, !dbg !71
  %1707 = insertelement <16 x float> %1706, float %495, i64 12, !dbg !71
  %1708 = insertelement <16 x float> %1707, float %496, i64 13, !dbg !71
  %1709 = insertelement <16 x float> %1708, float %497, i64 14, !dbg !71
  %1710 = insertelement <16 x float> %1709, float %498, i64 15, !dbg !71
  %1711 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1645, <8 x bfloat> %1629, <16 x float> %1710, i32 0, i32 0, i32 0), !dbg !71
  %1712 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1652, <8 x bfloat> %1632, <16 x float> %1711, i32 0, i32 0, i32 0), !dbg !71
  %1713 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1659, <8 x bfloat> %1635, <16 x float> %1712, i32 0, i32 0, i32 0), !dbg !71
  %1714 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1666, <8 x bfloat> %1638, <16 x float> %1713, i32 0, i32 0, i32 0), !dbg !71
  %1715 = extractelement <16 x float> %1714, i64 0, !dbg !71
  %1716 = extractelement <16 x float> %1714, i64 1, !dbg !71
  %1717 = extractelement <16 x float> %1714, i64 2, !dbg !71
  %1718 = extractelement <16 x float> %1714, i64 3, !dbg !71
  %1719 = extractelement <16 x float> %1714, i64 4, !dbg !71
  %1720 = extractelement <16 x float> %1714, i64 5, !dbg !71
  %1721 = extractelement <16 x float> %1714, i64 6, !dbg !71
  %1722 = extractelement <16 x float> %1714, i64 7, !dbg !71
  %1723 = extractelement <16 x float> %1714, i64 8, !dbg !71
  %1724 = extractelement <16 x float> %1714, i64 9, !dbg !71
  %1725 = extractelement <16 x float> %1714, i64 10, !dbg !71
  %1726 = extractelement <16 x float> %1714, i64 11, !dbg !71
  %1727 = extractelement <16 x float> %1714, i64 12, !dbg !71
  %1728 = extractelement <16 x float> %1714, i64 13, !dbg !71
  %1729 = extractelement <16 x float> %1714, i64 14, !dbg !71
  %1730 = extractelement <16 x float> %1714, i64 15, !dbg !71
  %1731 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %499, i64 0, !dbg !71
  %1732 = insertelement <16 x float> %1731, float %500, i64 1, !dbg !71
  %1733 = insertelement <16 x float> %1732, float %501, i64 2, !dbg !71
  %1734 = insertelement <16 x float> %1733, float %502, i64 3, !dbg !71
  %1735 = insertelement <16 x float> %1734, float %503, i64 4, !dbg !71
  %1736 = insertelement <16 x float> %1735, float %504, i64 5, !dbg !71
  %1737 = insertelement <16 x float> %1736, float %505, i64 6, !dbg !71
  %1738 = insertelement <16 x float> %1737, float %506, i64 7, !dbg !71
  %1739 = insertelement <16 x float> %1738, float %507, i64 8, !dbg !71
  %1740 = insertelement <16 x float> %1739, float %508, i64 9, !dbg !71
  %1741 = insertelement <16 x float> %1740, float %509, i64 10, !dbg !71
  %1742 = insertelement <16 x float> %1741, float %510, i64 11, !dbg !71
  %1743 = insertelement <16 x float> %1742, float %511, i64 12, !dbg !71
  %1744 = insertelement <16 x float> %1743, float %512, i64 13, !dbg !71
  %1745 = insertelement <16 x float> %1744, float %513, i64 14, !dbg !71
  %1746 = insertelement <16 x float> %1745, float %514, i64 15, !dbg !71
  %1747 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1673, <8 x bfloat> %1629, <16 x float> %1746, i32 0, i32 0, i32 0), !dbg !71
  %1748 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1680, <8 x bfloat> %1632, <16 x float> %1747, i32 0, i32 0, i32 0), !dbg !71
  %1749 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1687, <8 x bfloat> %1635, <16 x float> %1748, i32 0, i32 0, i32 0), !dbg !71
  %1750 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %1694, <8 x bfloat> %1638, <16 x float> %1749, i32 0, i32 0, i32 0), !dbg !71
  %1751 = extractelement <16 x float> %1750, i64 0, !dbg !71
  %1752 = extractelement <16 x float> %1750, i64 1, !dbg !71
  %1753 = extractelement <16 x float> %1750, i64 2, !dbg !71
  %1754 = extractelement <16 x float> %1750, i64 3, !dbg !71
  %1755 = extractelement <16 x float> %1750, i64 4, !dbg !71
  %1756 = extractelement <16 x float> %1750, i64 5, !dbg !71
  %1757 = extractelement <16 x float> %1750, i64 6, !dbg !71
  %1758 = extractelement <16 x float> %1750, i64 7, !dbg !71
  %1759 = extractelement <16 x float> %1750, i64 8, !dbg !71
  %1760 = extractelement <16 x float> %1750, i64 9, !dbg !71
  %1761 = extractelement <16 x float> %1750, i64 10, !dbg !71
  %1762 = extractelement <16 x float> %1750, i64 11, !dbg !71
  %1763 = extractelement <16 x float> %1750, i64 12, !dbg !71
  %1764 = extractelement <16 x float> %1750, i64 13, !dbg !71
  %1765 = extractelement <16 x float> %1750, i64 14, !dbg !71
  %1766 = extractelement <16 x float> %1750, i64 15, !dbg !71
  %1767 = add nuw nsw i32 %515, 1, !dbg !67
  %exitcond.not = icmp eq i32 %515, %428, !dbg !67
  %1768 = shufflevector <8 x bfloat> %719, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %1769 = shufflevector <8 x bfloat> %719, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %1770 = shufflevector <8 x bfloat> %722, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %1771 = shufflevector <8 x bfloat> %722, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %1772 = shufflevector <8 x bfloat> %719, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %1773 = shufflevector <8 x bfloat> %719, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %1774 = shufflevector <8 x bfloat> %722, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %1775 = shufflevector <8 x bfloat> %722, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %1776 = shufflevector <8 x bfloat> %542, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %1777 = shufflevector <8 x bfloat> %542, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %1778 = shufflevector <8 x bfloat> %542, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %1779 = shufflevector <8 x bfloat> %542, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %1780 = shufflevector <8 x bfloat> %545, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %1781 = shufflevector <8 x bfloat> %545, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %1782 = shufflevector <8 x bfloat> %545, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %1783 = shufflevector <8 x bfloat> %545, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  br i1 %exitcond.not, label %._crit_edge, label %447, !dbg !67

._crit_edge:                                      ; preds = %447, %.._crit_edge_crit_edge
  %.pre-phi275 = phi i32 [ %.pre274, %.._crit_edge_crit_edge ], [ %344, %447 ], !dbg !71
  %.pre-phi273 = phi i32 [ %.pre272, %.._crit_edge_crit_edge ], [ %335, %447 ], !dbg !71
  %.pre-phi271 = phi i32 [ %.pre270, %.._crit_edge_crit_edge ], [ %326, %447 ], !dbg !71
  %.pre-phi269 = phi i32 [ %.pre268, %.._crit_edge_crit_edge ], [ %317, %447 ], !dbg !71
  %.pre-phi267 = phi i32 [ %.pre266, %.._crit_edge_crit_edge ], [ %308, %447 ], !dbg !71
  %.pre-phi265 = phi i32 [ %.pre264, %.._crit_edge_crit_edge ], [ %299, %447 ], !dbg !71
  %.pre-phi263 = phi i32 [ %.pre262, %.._crit_edge_crit_edge ], [ %290, %447 ], !dbg !71
  %.pre-phi261 = phi i32 [ %.pre260, %.._crit_edge_crit_edge ], [ %281, %447 ], !dbg !71
  %1784 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1715, %447 ]
  %1785 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1716, %447 ]
  %1786 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1717, %447 ]
  %1787 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1718, %447 ]
  %1788 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1719, %447 ]
  %1789 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1720, %447 ]
  %1790 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1721, %447 ]
  %1791 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1722, %447 ]
  %1792 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1723, %447 ]
  %1793 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1724, %447 ]
  %1794 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1725, %447 ]
  %1795 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1726, %447 ]
  %1796 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1727, %447 ]
  %1797 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1728, %447 ]
  %1798 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1729, %447 ]
  %1799 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1730, %447 ]
  %1800 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1751, %447 ]
  %1801 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1752, %447 ]
  %1802 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1753, %447 ]
  %1803 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1754, %447 ]
  %1804 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1755, %447 ]
  %1805 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1756, %447 ]
  %1806 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1757, %447 ]
  %1807 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1758, %447 ]
  %1808 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1759, %447 ]
  %1809 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1760, %447 ]
  %1810 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1761, %447 ]
  %1811 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1762, %447 ]
  %1812 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1763, %447 ]
  %1813 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1764, %447 ]
  %1814 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1765, %447 ]
  %1815 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1766, %447 ]
  %1816 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1502, %447 ]
  %1817 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1503, %447 ]
  %1818 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1504, %447 ]
  %1819 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1505, %447 ]
  %1820 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1506, %447 ]
  %1821 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1507, %447 ]
  %1822 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1508, %447 ]
  %1823 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1509, %447 ]
  %1824 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1510, %447 ]
  %1825 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1511, %447 ]
  %1826 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1512, %447 ]
  %1827 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1513, %447 ]
  %1828 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1514, %447 ]
  %1829 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1515, %447 ]
  %1830 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1516, %447 ]
  %1831 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1517, %447 ]
  %1832 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1519, %447 ]
  %1833 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1520, %447 ]
  %1834 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1521, %447 ]
  %1835 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1522, %447 ]
  %1836 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1523, %447 ]
  %1837 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1524, %447 ]
  %1838 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1525, %447 ]
  %1839 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1526, %447 ]
  %1840 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1527, %447 ]
  %1841 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1528, %447 ]
  %1842 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1529, %447 ]
  %1843 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1530, %447 ]
  %1844 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1531, %447 ]
  %1845 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1532, %447 ]
  %1846 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1533, %447 ]
  %1847 = phi float [ 0.000000e+00, %.._crit_edge_crit_edge ], [ %1534, %447 ]
  %1848 = phi <2 x bfloat> [ %258, %.._crit_edge_crit_edge ], [ %1768, %447 ]
  %1849 = phi <2 x bfloat> [ %259, %.._crit_edge_crit_edge ], [ %1769, %447 ]
  %1850 = phi <2 x bfloat> [ %260, %.._crit_edge_crit_edge ], [ %1770, %447 ]
  %1851 = phi <2 x bfloat> [ %261, %.._crit_edge_crit_edge ], [ %1771, %447 ]
  %1852 = phi <2 x bfloat> [ %262, %.._crit_edge_crit_edge ], [ %1772, %447 ]
  %1853 = phi <2 x bfloat> [ %263, %.._crit_edge_crit_edge ], [ %1773, %447 ]
  %1854 = phi <2 x bfloat> [ %264, %.._crit_edge_crit_edge ], [ %1774, %447 ]
  %1855 = phi <2 x bfloat> [ %265, %.._crit_edge_crit_edge ], [ %1775, %447 ]
  %1856 = phi <2 x bfloat> [ %266, %.._crit_edge_crit_edge ], [ %1776, %447 ]
  %1857 = phi <2 x bfloat> [ %267, %.._crit_edge_crit_edge ], [ %1777, %447 ]
  %1858 = phi <2 x bfloat> [ %268, %.._crit_edge_crit_edge ], [ %1778, %447 ]
  %1859 = phi <2 x bfloat> [ %269, %.._crit_edge_crit_edge ], [ %1779, %447 ]
  %1860 = phi <2 x bfloat> [ %270, %.._crit_edge_crit_edge ], [ %1780, %447 ]
  %1861 = phi <2 x bfloat> [ %271, %.._crit_edge_crit_edge ], [ %1781, %447 ]
  %1862 = phi <2 x bfloat> [ %272, %.._crit_edge_crit_edge ], [ %1782, %447 ]
  %1863 = phi <2 x bfloat> [ %273, %.._crit_edge_crit_edge ], [ %1783, %447 ]
  fence syncscope("workgroup") release, !dbg !69
  tail call void @llvm.amdgcn.s.barrier(), !dbg !69
  fence syncscope("workgroup") acquire, !dbg !69
  %1864 = shufflevector <2 x bfloat> %1856, <2 x bfloat> %1857, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %1865 = shufflevector <2 x bfloat> %1858, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %1866 = shufflevector <8 x bfloat> %1864, <8 x bfloat> %1865, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !69
  %1867 = shufflevector <2 x bfloat> %1859, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %1868 = shufflevector <8 x bfloat> %1866, <8 x bfloat> %1867, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !69
  store <8 x bfloat> %1868, ptr addrspace(3) %144, align 16, !dbg !69
  %1869 = shufflevector <2 x bfloat> %1860, <2 x bfloat> %1861, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %1870 = shufflevector <2 x bfloat> %1862, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %1871 = shufflevector <8 x bfloat> %1869, <8 x bfloat> %1870, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !69
  %1872 = shufflevector <2 x bfloat> %1863, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !69
  %1873 = shufflevector <8 x bfloat> %1871, <8 x bfloat> %1872, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !69
  store <8 x bfloat> %1873, ptr addrspace(3) %145, align 16, !dbg !69
  fence syncscope("workgroup") release, !dbg !71
  tail call void @llvm.amdgcn.s.barrier(), !dbg !71
  fence syncscope("workgroup") acquire, !dbg !71
  %1874 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi261, !dbg !71
  %1875 = load <1 x bfloat>, ptr addrspace(3) %1874, align 2, !dbg !71
  %1876 = extractelement <1 x bfloat> %1875, i64 0, !dbg !71
  %1877 = getelementptr inbounds nuw i8, ptr addrspace(3) %1874, i32 128, !dbg !71
  %1878 = load <1 x bfloat>, ptr addrspace(3) %1877, align 2, !dbg !71
  %1879 = extractelement <1 x bfloat> %1878, i64 0, !dbg !71
  %1880 = getelementptr inbounds nuw i8, ptr addrspace(3) %1874, i32 2048, !dbg !71
  %1881 = load <1 x bfloat>, ptr addrspace(3) %1880, align 2, !dbg !71
  %1882 = extractelement <1 x bfloat> %1881, i64 0, !dbg !71
  %1883 = getelementptr inbounds nuw i8, ptr addrspace(3) %1874, i32 2176, !dbg !71
  %1884 = load <1 x bfloat>, ptr addrspace(3) %1883, align 2, !dbg !71
  %1885 = extractelement <1 x bfloat> %1884, i64 0, !dbg !71
  %1886 = getelementptr inbounds nuw i8, ptr addrspace(3) %1874, i32 4096, !dbg !71
  %1887 = load <1 x bfloat>, ptr addrspace(3) %1886, align 2, !dbg !71
  %1888 = extractelement <1 x bfloat> %1887, i64 0, !dbg !71
  %1889 = getelementptr inbounds nuw i8, ptr addrspace(3) %1874, i32 4224, !dbg !71
  %1890 = load <1 x bfloat>, ptr addrspace(3) %1889, align 2, !dbg !71
  %1891 = extractelement <1 x bfloat> %1890, i64 0, !dbg !71
  %1892 = getelementptr inbounds nuw i8, ptr addrspace(3) %1874, i32 6144, !dbg !71
  %1893 = load <1 x bfloat>, ptr addrspace(3) %1892, align 2, !dbg !71
  %1894 = extractelement <1 x bfloat> %1893, i64 0, !dbg !71
  %1895 = getelementptr inbounds nuw i8, ptr addrspace(3) %1874, i32 6272, !dbg !71
  %1896 = load <1 x bfloat>, ptr addrspace(3) %1895, align 2, !dbg !71
  %1897 = extractelement <1 x bfloat> %1896, i64 0, !dbg !71
  %1898 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi263, !dbg !71
  %1899 = load <1 x bfloat>, ptr addrspace(3) %1898, align 2, !dbg !71
  %1900 = extractelement <1 x bfloat> %1899, i64 0, !dbg !71
  %1901 = getelementptr inbounds nuw i8, ptr addrspace(3) %1898, i32 128, !dbg !71
  %1902 = load <1 x bfloat>, ptr addrspace(3) %1901, align 2, !dbg !71
  %1903 = extractelement <1 x bfloat> %1902, i64 0, !dbg !71
  %1904 = getelementptr inbounds nuw i8, ptr addrspace(3) %1898, i32 2048, !dbg !71
  %1905 = load <1 x bfloat>, ptr addrspace(3) %1904, align 2, !dbg !71
  %1906 = extractelement <1 x bfloat> %1905, i64 0, !dbg !71
  %1907 = getelementptr inbounds nuw i8, ptr addrspace(3) %1898, i32 2176, !dbg !71
  %1908 = load <1 x bfloat>, ptr addrspace(3) %1907, align 2, !dbg !71
  %1909 = extractelement <1 x bfloat> %1908, i64 0, !dbg !71
  %1910 = getelementptr inbounds nuw i8, ptr addrspace(3) %1898, i32 4096, !dbg !71
  %1911 = load <1 x bfloat>, ptr addrspace(3) %1910, align 2, !dbg !71
  %1912 = extractelement <1 x bfloat> %1911, i64 0, !dbg !71
  %1913 = getelementptr inbounds nuw i8, ptr addrspace(3) %1898, i32 4224, !dbg !71
  %1914 = load <1 x bfloat>, ptr addrspace(3) %1913, align 2, !dbg !71
  %1915 = extractelement <1 x bfloat> %1914, i64 0, !dbg !71
  %1916 = getelementptr inbounds nuw i8, ptr addrspace(3) %1898, i32 6144, !dbg !71
  %1917 = load <1 x bfloat>, ptr addrspace(3) %1916, align 2, !dbg !71
  %1918 = extractelement <1 x bfloat> %1917, i64 0, !dbg !71
  %1919 = getelementptr inbounds nuw i8, ptr addrspace(3) %1898, i32 6272, !dbg !71
  %1920 = load <1 x bfloat>, ptr addrspace(3) %1919, align 2, !dbg !71
  %1921 = extractelement <1 x bfloat> %1920, i64 0, !dbg !71
  %1922 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi265, !dbg !71
  %1923 = load <1 x bfloat>, ptr addrspace(3) %1922, align 2, !dbg !71
  %1924 = extractelement <1 x bfloat> %1923, i64 0, !dbg !71
  %1925 = getelementptr inbounds nuw i8, ptr addrspace(3) %1922, i32 128, !dbg !71
  %1926 = load <1 x bfloat>, ptr addrspace(3) %1925, align 2, !dbg !71
  %1927 = extractelement <1 x bfloat> %1926, i64 0, !dbg !71
  %1928 = getelementptr inbounds nuw i8, ptr addrspace(3) %1922, i32 2048, !dbg !71
  %1929 = load <1 x bfloat>, ptr addrspace(3) %1928, align 2, !dbg !71
  %1930 = extractelement <1 x bfloat> %1929, i64 0, !dbg !71
  %1931 = getelementptr inbounds nuw i8, ptr addrspace(3) %1922, i32 2176, !dbg !71
  %1932 = load <1 x bfloat>, ptr addrspace(3) %1931, align 2, !dbg !71
  %1933 = extractelement <1 x bfloat> %1932, i64 0, !dbg !71
  %1934 = getelementptr inbounds nuw i8, ptr addrspace(3) %1922, i32 4096, !dbg !71
  %1935 = load <1 x bfloat>, ptr addrspace(3) %1934, align 2, !dbg !71
  %1936 = extractelement <1 x bfloat> %1935, i64 0, !dbg !71
  %1937 = getelementptr inbounds nuw i8, ptr addrspace(3) %1922, i32 4224, !dbg !71
  %1938 = load <1 x bfloat>, ptr addrspace(3) %1937, align 2, !dbg !71
  %1939 = extractelement <1 x bfloat> %1938, i64 0, !dbg !71
  %1940 = getelementptr inbounds nuw i8, ptr addrspace(3) %1922, i32 6144, !dbg !71
  %1941 = load <1 x bfloat>, ptr addrspace(3) %1940, align 2, !dbg !71
  %1942 = extractelement <1 x bfloat> %1941, i64 0, !dbg !71
  %1943 = getelementptr inbounds nuw i8, ptr addrspace(3) %1922, i32 6272, !dbg !71
  %1944 = load <1 x bfloat>, ptr addrspace(3) %1943, align 2, !dbg !71
  %1945 = extractelement <1 x bfloat> %1944, i64 0, !dbg !71
  %1946 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi267, !dbg !71
  %1947 = load <1 x bfloat>, ptr addrspace(3) %1946, align 2, !dbg !71
  %1948 = extractelement <1 x bfloat> %1947, i64 0, !dbg !71
  %1949 = getelementptr inbounds nuw i8, ptr addrspace(3) %1946, i32 128, !dbg !71
  %1950 = load <1 x bfloat>, ptr addrspace(3) %1949, align 2, !dbg !71
  %1951 = extractelement <1 x bfloat> %1950, i64 0, !dbg !71
  %1952 = getelementptr inbounds nuw i8, ptr addrspace(3) %1946, i32 2048, !dbg !71
  %1953 = load <1 x bfloat>, ptr addrspace(3) %1952, align 2, !dbg !71
  %1954 = extractelement <1 x bfloat> %1953, i64 0, !dbg !71
  %1955 = getelementptr inbounds nuw i8, ptr addrspace(3) %1946, i32 2176, !dbg !71
  %1956 = load <1 x bfloat>, ptr addrspace(3) %1955, align 2, !dbg !71
  %1957 = extractelement <1 x bfloat> %1956, i64 0, !dbg !71
  %1958 = getelementptr inbounds nuw i8, ptr addrspace(3) %1946, i32 4096, !dbg !71
  %1959 = load <1 x bfloat>, ptr addrspace(3) %1958, align 2, !dbg !71
  %1960 = extractelement <1 x bfloat> %1959, i64 0, !dbg !71
  %1961 = getelementptr inbounds nuw i8, ptr addrspace(3) %1946, i32 4224, !dbg !71
  %1962 = load <1 x bfloat>, ptr addrspace(3) %1961, align 2, !dbg !71
  %1963 = extractelement <1 x bfloat> %1962, i64 0, !dbg !71
  %1964 = getelementptr inbounds nuw i8, ptr addrspace(3) %1946, i32 6144, !dbg !71
  %1965 = load <1 x bfloat>, ptr addrspace(3) %1964, align 2, !dbg !71
  %1966 = extractelement <1 x bfloat> %1965, i64 0, !dbg !71
  %1967 = getelementptr inbounds nuw i8, ptr addrspace(3) %1946, i32 6272, !dbg !71
  %1968 = load <1 x bfloat>, ptr addrspace(3) %1967, align 2, !dbg !71
  %1969 = extractelement <1 x bfloat> %1968, i64 0, !dbg !71
  %1970 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi269, !dbg !71
  %1971 = load <1 x bfloat>, ptr addrspace(3) %1970, align 2, !dbg !71
  %1972 = extractelement <1 x bfloat> %1971, i64 0, !dbg !71
  %1973 = getelementptr inbounds nuw i8, ptr addrspace(3) %1970, i32 128, !dbg !71
  %1974 = load <1 x bfloat>, ptr addrspace(3) %1973, align 2, !dbg !71
  %1975 = extractelement <1 x bfloat> %1974, i64 0, !dbg !71
  %1976 = getelementptr inbounds nuw i8, ptr addrspace(3) %1970, i32 2048, !dbg !71
  %1977 = load <1 x bfloat>, ptr addrspace(3) %1976, align 2, !dbg !71
  %1978 = extractelement <1 x bfloat> %1977, i64 0, !dbg !71
  %1979 = getelementptr inbounds nuw i8, ptr addrspace(3) %1970, i32 2176, !dbg !71
  %1980 = load <1 x bfloat>, ptr addrspace(3) %1979, align 2, !dbg !71
  %1981 = extractelement <1 x bfloat> %1980, i64 0, !dbg !71
  %1982 = getelementptr inbounds nuw i8, ptr addrspace(3) %1970, i32 4096, !dbg !71
  %1983 = load <1 x bfloat>, ptr addrspace(3) %1982, align 2, !dbg !71
  %1984 = extractelement <1 x bfloat> %1983, i64 0, !dbg !71
  %1985 = getelementptr inbounds nuw i8, ptr addrspace(3) %1970, i32 4224, !dbg !71
  %1986 = load <1 x bfloat>, ptr addrspace(3) %1985, align 2, !dbg !71
  %1987 = extractelement <1 x bfloat> %1986, i64 0, !dbg !71
  %1988 = getelementptr inbounds nuw i8, ptr addrspace(3) %1970, i32 6144, !dbg !71
  %1989 = load <1 x bfloat>, ptr addrspace(3) %1988, align 2, !dbg !71
  %1990 = extractelement <1 x bfloat> %1989, i64 0, !dbg !71
  %1991 = getelementptr inbounds nuw i8, ptr addrspace(3) %1970, i32 6272, !dbg !71
  %1992 = load <1 x bfloat>, ptr addrspace(3) %1991, align 2, !dbg !71
  %1993 = extractelement <1 x bfloat> %1992, i64 0, !dbg !71
  %1994 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi271, !dbg !71
  %1995 = load <1 x bfloat>, ptr addrspace(3) %1994, align 2, !dbg !71
  %1996 = extractelement <1 x bfloat> %1995, i64 0, !dbg !71
  %1997 = getelementptr inbounds nuw i8, ptr addrspace(3) %1994, i32 128, !dbg !71
  %1998 = load <1 x bfloat>, ptr addrspace(3) %1997, align 2, !dbg !71
  %1999 = extractelement <1 x bfloat> %1998, i64 0, !dbg !71
  %2000 = getelementptr inbounds nuw i8, ptr addrspace(3) %1994, i32 2048, !dbg !71
  %2001 = load <1 x bfloat>, ptr addrspace(3) %2000, align 2, !dbg !71
  %2002 = extractelement <1 x bfloat> %2001, i64 0, !dbg !71
  %2003 = getelementptr inbounds nuw i8, ptr addrspace(3) %1994, i32 2176, !dbg !71
  %2004 = load <1 x bfloat>, ptr addrspace(3) %2003, align 2, !dbg !71
  %2005 = extractelement <1 x bfloat> %2004, i64 0, !dbg !71
  %2006 = getelementptr inbounds nuw i8, ptr addrspace(3) %1994, i32 4096, !dbg !71
  %2007 = load <1 x bfloat>, ptr addrspace(3) %2006, align 2, !dbg !71
  %2008 = extractelement <1 x bfloat> %2007, i64 0, !dbg !71
  %2009 = getelementptr inbounds nuw i8, ptr addrspace(3) %1994, i32 4224, !dbg !71
  %2010 = load <1 x bfloat>, ptr addrspace(3) %2009, align 2, !dbg !71
  %2011 = extractelement <1 x bfloat> %2010, i64 0, !dbg !71
  %2012 = getelementptr inbounds nuw i8, ptr addrspace(3) %1994, i32 6144, !dbg !71
  %2013 = load <1 x bfloat>, ptr addrspace(3) %2012, align 2, !dbg !71
  %2014 = extractelement <1 x bfloat> %2013, i64 0, !dbg !71
  %2015 = getelementptr inbounds nuw i8, ptr addrspace(3) %1994, i32 6272, !dbg !71
  %2016 = load <1 x bfloat>, ptr addrspace(3) %2015, align 2, !dbg !71
  %2017 = extractelement <1 x bfloat> %2016, i64 0, !dbg !71
  %2018 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi273, !dbg !71
  %2019 = load <1 x bfloat>, ptr addrspace(3) %2018, align 2, !dbg !71
  %2020 = extractelement <1 x bfloat> %2019, i64 0, !dbg !71
  %2021 = getelementptr inbounds nuw i8, ptr addrspace(3) %2018, i32 128, !dbg !71
  %2022 = load <1 x bfloat>, ptr addrspace(3) %2021, align 2, !dbg !71
  %2023 = extractelement <1 x bfloat> %2022, i64 0, !dbg !71
  %2024 = getelementptr inbounds nuw i8, ptr addrspace(3) %2018, i32 2048, !dbg !71
  %2025 = load <1 x bfloat>, ptr addrspace(3) %2024, align 2, !dbg !71
  %2026 = extractelement <1 x bfloat> %2025, i64 0, !dbg !71
  %2027 = getelementptr inbounds nuw i8, ptr addrspace(3) %2018, i32 2176, !dbg !71
  %2028 = load <1 x bfloat>, ptr addrspace(3) %2027, align 2, !dbg !71
  %2029 = extractelement <1 x bfloat> %2028, i64 0, !dbg !71
  %2030 = getelementptr inbounds nuw i8, ptr addrspace(3) %2018, i32 4096, !dbg !71
  %2031 = load <1 x bfloat>, ptr addrspace(3) %2030, align 2, !dbg !71
  %2032 = extractelement <1 x bfloat> %2031, i64 0, !dbg !71
  %2033 = getelementptr inbounds nuw i8, ptr addrspace(3) %2018, i32 4224, !dbg !71
  %2034 = load <1 x bfloat>, ptr addrspace(3) %2033, align 2, !dbg !71
  %2035 = extractelement <1 x bfloat> %2034, i64 0, !dbg !71
  %2036 = getelementptr inbounds nuw i8, ptr addrspace(3) %2018, i32 6144, !dbg !71
  %2037 = load <1 x bfloat>, ptr addrspace(3) %2036, align 2, !dbg !71
  %2038 = extractelement <1 x bfloat> %2037, i64 0, !dbg !71
  %2039 = getelementptr inbounds nuw i8, ptr addrspace(3) %2018, i32 6272, !dbg !71
  %2040 = load <1 x bfloat>, ptr addrspace(3) %2039, align 2, !dbg !71
  %2041 = extractelement <1 x bfloat> %2040, i64 0, !dbg !71
  %2042 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi275, !dbg !71
  %2043 = load <1 x bfloat>, ptr addrspace(3) %2042, align 2, !dbg !71
  %2044 = extractelement <1 x bfloat> %2043, i64 0, !dbg !71
  %2045 = getelementptr inbounds nuw i8, ptr addrspace(3) %2042, i32 128, !dbg !71
  %2046 = load <1 x bfloat>, ptr addrspace(3) %2045, align 2, !dbg !71
  %2047 = extractelement <1 x bfloat> %2046, i64 0, !dbg !71
  %2048 = getelementptr inbounds nuw i8, ptr addrspace(3) %2042, i32 2048, !dbg !71
  %2049 = load <1 x bfloat>, ptr addrspace(3) %2048, align 2, !dbg !71
  %2050 = extractelement <1 x bfloat> %2049, i64 0, !dbg !71
  %2051 = getelementptr inbounds nuw i8, ptr addrspace(3) %2042, i32 2176, !dbg !71
  %2052 = load <1 x bfloat>, ptr addrspace(3) %2051, align 2, !dbg !71
  %2053 = extractelement <1 x bfloat> %2052, i64 0, !dbg !71
  %2054 = getelementptr inbounds nuw i8, ptr addrspace(3) %2042, i32 4096, !dbg !71
  %2055 = load <1 x bfloat>, ptr addrspace(3) %2054, align 2, !dbg !71
  %2056 = extractelement <1 x bfloat> %2055, i64 0, !dbg !71
  %2057 = getelementptr inbounds nuw i8, ptr addrspace(3) %2042, i32 4224, !dbg !71
  %2058 = load <1 x bfloat>, ptr addrspace(3) %2057, align 2, !dbg !71
  %2059 = extractelement <1 x bfloat> %2058, i64 0, !dbg !71
  %2060 = getelementptr inbounds nuw i8, ptr addrspace(3) %2042, i32 6144, !dbg !71
  %2061 = load <1 x bfloat>, ptr addrspace(3) %2060, align 2, !dbg !71
  %2062 = extractelement <1 x bfloat> %2061, i64 0, !dbg !71
  %2063 = getelementptr inbounds nuw i8, ptr addrspace(3) %2042, i32 6272, !dbg !71
  %2064 = load <1 x bfloat>, ptr addrspace(3) %2063, align 2, !dbg !71
  %2065 = extractelement <1 x bfloat> %2064, i64 0, !dbg !71
  br i1 %228, label %2066, label %2112, !dbg !80

2066:                                             ; preds = %._crit_edge
  %2067 = or disjoint i32 %148, %151, !dbg !69
  %2068 = xor i32 %2067, %152, !dbg !69
  %2069 = xor i32 %2068, 96, !dbg !69
  %2070 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %2069, !dbg !69
  %2071 = getelementptr inbounds nuw i8, ptr addrspace(3) %2070, i32 4096, !dbg !69
  %2072 = load <8 x bfloat>, ptr addrspace(3) %2071, align 16, !dbg !69
  %2073 = load <8 x bfloat>, ptr addrspace(3) %2070, align 16, !dbg !69
  %2074 = xor i32 %2068, 64, !dbg !69
  %2075 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %2074, !dbg !69
  %2076 = getelementptr inbounds nuw i8, ptr addrspace(3) %2075, i32 4096, !dbg !69
  %2077 = load <8 x bfloat>, ptr addrspace(3) %2076, align 16, !dbg !69
  %2078 = load <8 x bfloat>, ptr addrspace(3) %2075, align 16, !dbg !69
  %2079 = xor i32 %2068, 32, !dbg !69
  %2080 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %2079, !dbg !69
  %2081 = getelementptr inbounds nuw i8, ptr addrspace(3) %2080, i32 4096, !dbg !69
  %2082 = load <8 x bfloat>, ptr addrspace(3) %2081, align 16, !dbg !69
  %2083 = load <8 x bfloat>, ptr addrspace(3) %2080, align 16, !dbg !69
  %2084 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %2068, !dbg !69
  %2085 = getelementptr inbounds nuw i8, ptr addrspace(3) %2084, i32 4096, !dbg !69
  %2086 = load <8 x bfloat>, ptr addrspace(3) %2085, align 16, !dbg !69
  %2087 = load <8 x bfloat>, ptr addrspace(3) %2084, align 16, !dbg !69
  %2088 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2087, <8 x bfloat> %157, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !80
  %2089 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2083, <8 x bfloat> %160, <16 x float> %2088, i32 0, i32 0, i32 0), !dbg !80
  %2090 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2078, <8 x bfloat> %163, <16 x float> %2089, i32 0, i32 0, i32 0), !dbg !80
  %2091 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2073, <8 x bfloat> %166, <16 x float> %2090, i32 0, i32 0, i32 0), !dbg !80
  %2092 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2086, <8 x bfloat> %157, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !80
  %2093 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2082, <8 x bfloat> %160, <16 x float> %2092, i32 0, i32 0, i32 0), !dbg !80
  %2094 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2077, <8 x bfloat> %163, <16 x float> %2093, i32 0, i32 0, i32 0), !dbg !80
  %2095 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2072, <8 x bfloat> %166, <16 x float> %2094, i32 0, i32 0, i32 0), !dbg !80
  %2096 = shufflevector <16 x float> %2095, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !13
  %2097 = shufflevector <16 x float> %2095, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !13
  %2098 = shufflevector <16 x float> %2095, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !13
  %2099 = shufflevector <16 x float> %2095, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !13
  %2100 = shufflevector <16 x float> %2095, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !13
  %2101 = shufflevector <16 x float> %2095, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !13
  %2102 = shufflevector <16 x float> %2095, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !13
  %2103 = shufflevector <16 x float> %2095, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !13
  %2104 = shufflevector <16 x float> %2091, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !13
  %2105 = shufflevector <16 x float> %2091, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !13
  %2106 = shufflevector <16 x float> %2091, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !13
  %2107 = shufflevector <16 x float> %2091, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !13
  %2108 = shufflevector <16 x float> %2091, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !13
  %2109 = shufflevector <16 x float> %2091, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !13
  %2110 = shufflevector <16 x float> %2091, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !13
  %2111 = shufflevector <16 x float> %2091, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !13
  br label %2112, !dbg !80

2112:                                             ; preds = %2066, %._crit_edge
  %2113 = phi <2 x float> [ %2096, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2114 = phi <2 x float> [ %2097, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2115 = phi <2 x float> [ %2098, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2116 = phi <2 x float> [ %2099, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2117 = phi <2 x float> [ %2100, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2118 = phi <2 x float> [ %2101, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2119 = phi <2 x float> [ %2102, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2120 = phi <2 x float> [ %2103, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2121 = phi <2 x float> [ %2104, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2122 = phi <2 x float> [ %2105, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2123 = phi <2 x float> [ %2106, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2124 = phi <2 x float> [ %2107, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2125 = phi <2 x float> [ %2108, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2126 = phi <2 x float> [ %2109, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2127 = phi <2 x float> [ %2110, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  %2128 = phi <2 x float> [ %2111, %2066 ], [ zeroinitializer, %._crit_edge ], !dbg !13
  fence syncscope("workgroup") release, !dbg !70
  tail call void @llvm.amdgcn.s.barrier(), !dbg !70
  fence syncscope("workgroup") acquire, !dbg !70
  %2129 = shufflevector <2 x bfloat> %1848, <2 x bfloat> %1849, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !70
  store <4 x bfloat> %2129, ptr addrspace(3) %179, align 8, !dbg !70
  %2130 = shufflevector <2 x bfloat> %1850, <2 x bfloat> %1851, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !70
  store <4 x bfloat> %2130, ptr addrspace(3) %181, align 8, !dbg !70
  %2131 = shufflevector <2 x bfloat> %1852, <2 x bfloat> %1853, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !70
  store <4 x bfloat> %2131, ptr addrspace(3) %188, align 8, !dbg !70
  %2132 = shufflevector <2 x bfloat> %1854, <2 x bfloat> %1855, <4 x i32> <i32 0, i32 1, i32 2, i32 3>, !dbg !70
  store <4 x bfloat> %2132, ptr addrspace(3) %190, align 8, !dbg !70
  fence syncscope("workgroup") release, !dbg !81
  tail call void @llvm.amdgcn.s.barrier(), !dbg !81
  fence syncscope("workgroup") acquire, !dbg !81
  %2133 = shl nuw nsw i32 %43, 2, !dbg !70
  %2134 = and i32 %2133, 12, !dbg !70
  %2135 = shl nuw nsw i32 %43, 4, !dbg !70
  %2136 = and i32 %2135, 64, !dbg !70
  %2137 = and i32 %43, 8, !dbg !70
  %2138 = icmp eq i32 %2137, 0, !dbg !70
  %2139 = select i1 %2138, i32 0, i32 132, !dbg !70
  %2140 = and i32 %43, 16, !dbg !70
  %2141 = select i1 %102, i32 0, i32 264, !dbg !70
  %2142 = or disjoint i32 %2136, %2140, !dbg !70
  %2143 = xor i32 %2139, %2134, !dbg !70
  %2144 = xor i32 %2143, %2141, !dbg !70
  %2145 = or disjoint i32 %2142, %2144, !dbg !70
  %2146 = xor i32 %2145, 528, !dbg !70
  %2147 = xor i32 %2145, 1552, !dbg !70
  %2148 = xor i32 %2145, 2576, !dbg !70
  %2149 = xor i32 %2145, 3600, !dbg !70
  %2150 = xor i32 %2145, 560, !dbg !70
  %2151 = xor i32 %2145, 1584, !dbg !70
  %2152 = xor i32 %2145, 2608, !dbg !70
  %2153 = xor i32 %2145, 3632, !dbg !70
  %2154 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2145, !dbg !70
  %2155 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2146, !dbg !70
  %2156 = getelementptr inbounds nuw i8, ptr addrspace(3) %2154, i32 2048, !dbg !70
  %2157 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2147, !dbg !70
  %2158 = getelementptr inbounds nuw i8, ptr addrspace(3) %2154, i32 4096, !dbg !70
  %2159 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2148, !dbg !70
  %2160 = getelementptr inbounds nuw i8, ptr addrspace(3) %2154, i32 6144, !dbg !70
  %2161 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2149, !dbg !70
  %2162 = getelementptr inbounds nuw i8, ptr addrspace(3) %2154, i32 64, !dbg !70
  %2163 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2150, !dbg !70
  %2164 = getelementptr inbounds nuw i8, ptr addrspace(3) %2154, i32 2112, !dbg !70
  %2165 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2151, !dbg !70
  %2166 = getelementptr inbounds nuw i8, ptr addrspace(3) %2154, i32 4160, !dbg !70
  %2167 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2152, !dbg !70
  %2168 = getelementptr inbounds nuw i8, ptr addrspace(3) %2154, i32 6208, !dbg !70
  %2169 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2153, !dbg !70
  %2170 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %2154), !dbg !70
  %2171 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %2155), !dbg !70
  %2172 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %2156), !dbg !70
  %2173 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %2157), !dbg !70
  %2174 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %2158), !dbg !70
  %2175 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %2159), !dbg !70
  %2176 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %2160), !dbg !70
  %2177 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %2161), !dbg !70
  %2178 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %2162), !dbg !70
  %2179 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %2163), !dbg !70
  %2180 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %2164), !dbg !70
  %2181 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %2165), !dbg !70
  %2182 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %2166), !dbg !70
  %2183 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %2167), !dbg !70
  %2184 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) nonnull %2168), !dbg !70
  %2185 = tail call <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) %2169), !dbg !70
  br i1 %228, label %2186, label %2260, !dbg !81

2186:                                             ; preds = %2112
  %2187 = or disjoint i32 %148, %196, !dbg !81
  %2188 = xor i32 %2187, %103, !dbg !81
  %2189 = xor i32 %2188, 48, !dbg !81
  %2190 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %2189, !dbg !81
  %2191 = getelementptr inbounds nuw i8, ptr addrspace(3) %2190, i32 4160, !dbg !81
  %2192 = load <4 x bfloat>, ptr addrspace(3) %2191, align 8, !dbg !81
  %2193 = getelementptr inbounds nuw i8, ptr addrspace(3) %2190, i32 4096, !dbg !81
  %2194 = load <4 x bfloat>, ptr addrspace(3) %2193, align 8, !dbg !81
  %2195 = getelementptr inbounds nuw i8, ptr addrspace(3) %2190, i32 64, !dbg !81
  %2196 = load <4 x bfloat>, ptr addrspace(3) %2195, align 8, !dbg !81
  %2197 = load <4 x bfloat>, ptr addrspace(3) %2190, align 8, !dbg !81
  %2198 = xor i32 %2188, 32, !dbg !81
  %2199 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %2198, !dbg !81
  %2200 = getelementptr inbounds nuw i8, ptr addrspace(3) %2199, i32 4160, !dbg !81
  %2201 = load <4 x bfloat>, ptr addrspace(3) %2200, align 8, !dbg !81
  %2202 = getelementptr inbounds nuw i8, ptr addrspace(3) %2199, i32 4096, !dbg !81
  %2203 = load <4 x bfloat>, ptr addrspace(3) %2202, align 8, !dbg !81
  %2204 = getelementptr inbounds nuw i8, ptr addrspace(3) %2199, i32 64, !dbg !81
  %2205 = load <4 x bfloat>, ptr addrspace(3) %2204, align 8, !dbg !81
  %2206 = load <4 x bfloat>, ptr addrspace(3) %2199, align 8, !dbg !81
  %2207 = xor i32 %2188, 16, !dbg !81
  %2208 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %2207, !dbg !81
  %2209 = getelementptr inbounds nuw i8, ptr addrspace(3) %2208, i32 4160, !dbg !81
  %2210 = load <4 x bfloat>, ptr addrspace(3) %2209, align 8, !dbg !81
  %2211 = getelementptr inbounds nuw i8, ptr addrspace(3) %2208, i32 4096, !dbg !81
  %2212 = load <4 x bfloat>, ptr addrspace(3) %2211, align 8, !dbg !81
  %2213 = getelementptr inbounds nuw i8, ptr addrspace(3) %2208, i32 64, !dbg !81
  %2214 = load <4 x bfloat>, ptr addrspace(3) %2213, align 8, !dbg !81
  %2215 = load <4 x bfloat>, ptr addrspace(3) %2208, align 8, !dbg !81
  %2216 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %2188, !dbg !81
  %2217 = getelementptr inbounds nuw i8, ptr addrspace(3) %2216, i32 4160, !dbg !81
  %2218 = load <4 x bfloat>, ptr addrspace(3) %2217, align 8, !dbg !81
  %2219 = getelementptr inbounds nuw i8, ptr addrspace(3) %2216, i32 4096, !dbg !81
  %2220 = load <4 x bfloat>, ptr addrspace(3) %2219, align 8, !dbg !81
  %2221 = getelementptr inbounds nuw i8, ptr addrspace(3) %2216, i32 64, !dbg !81
  %2222 = load <4 x bfloat>, ptr addrspace(3) %2221, align 8, !dbg !81
  %2223 = load <4 x bfloat>, ptr addrspace(3) %2216, align 8, !dbg !81
  %2224 = shufflevector <4 x bfloat> %201, <4 x bfloat> %206, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2225 = shufflevector <4 x bfloat> %211, <4 x bfloat> %216, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2226 = shufflevector <4 x bfloat> %203, <4 x bfloat> %208, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2227 = shufflevector <4 x bfloat> %213, <4 x bfloat> %218, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2228 = shufflevector <4 x bfloat> %2223, <4 x bfloat> %2215, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2229 = shufflevector <4 x bfloat> %2206, <4 x bfloat> %2197, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2230 = shufflevector <4 x bfloat> %2222, <4 x bfloat> %2214, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2231 = shufflevector <4 x bfloat> %2205, <4 x bfloat> %2196, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2232 = shufflevector <4 x bfloat> %2220, <4 x bfloat> %2212, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2233 = shufflevector <4 x bfloat> %2203, <4 x bfloat> %2194, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2234 = shufflevector <4 x bfloat> %2218, <4 x bfloat> %2210, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2235 = shufflevector <4 x bfloat> %2201, <4 x bfloat> %2192, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !81
  %2236 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2228, <8 x bfloat> %2224, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !81
  %2237 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2229, <8 x bfloat> %2225, <16 x float> %2236, i32 0, i32 0, i32 0), !dbg !81
  %2238 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2230, <8 x bfloat> %2226, <16 x float> %2237, i32 0, i32 0, i32 0), !dbg !81
  %2239 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2231, <8 x bfloat> %2227, <16 x float> %2238, i32 0, i32 0, i32 0), !dbg !81
  %2240 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2232, <8 x bfloat> %2224, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !81
  %2241 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2233, <8 x bfloat> %2225, <16 x float> %2240, i32 0, i32 0, i32 0), !dbg !81
  %2242 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2234, <8 x bfloat> %2226, <16 x float> %2241, i32 0, i32 0, i32 0), !dbg !81
  %2243 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2235, <8 x bfloat> %2227, <16 x float> %2242, i32 0, i32 0, i32 0), !dbg !81
  %2244 = shufflevector <16 x float> %2243, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !13
  %2245 = shufflevector <16 x float> %2243, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !13
  %2246 = shufflevector <16 x float> %2243, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !13
  %2247 = shufflevector <16 x float> %2243, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !13
  %2248 = shufflevector <16 x float> %2243, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !13
  %2249 = shufflevector <16 x float> %2243, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !13
  %2250 = shufflevector <16 x float> %2243, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !13
  %2251 = shufflevector <16 x float> %2243, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !13
  %2252 = shufflevector <16 x float> %2239, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !13
  %2253 = shufflevector <16 x float> %2239, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !13
  %2254 = shufflevector <16 x float> %2239, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !13
  %2255 = shufflevector <16 x float> %2239, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !13
  %2256 = shufflevector <16 x float> %2239, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !13
  %2257 = shufflevector <16 x float> %2239, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !13
  %2258 = shufflevector <16 x float> %2239, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !13
  %2259 = shufflevector <16 x float> %2239, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !13
  br label %2260, !dbg !81

2260:                                             ; preds = %2186, %2112
  %2261 = phi <2 x float> [ %2244, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2262 = phi <2 x float> [ %2245, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2263 = phi <2 x float> [ %2246, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2264 = phi <2 x float> [ %2247, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2265 = phi <2 x float> [ %2248, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2266 = phi <2 x float> [ %2249, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2267 = phi <2 x float> [ %2250, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2268 = phi <2 x float> [ %2251, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2269 = phi <2 x float> [ %2252, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2270 = phi <2 x float> [ %2253, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2271 = phi <2 x float> [ %2254, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2272 = phi <2 x float> [ %2255, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2273 = phi <2 x float> [ %2256, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2274 = phi <2 x float> [ %2257, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2275 = phi <2 x float> [ %2258, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2276 = phi <2 x float> [ %2259, %2186 ], [ zeroinitializer, %2112 ], !dbg !13
  %2277 = extractelement <2 x float> %2128, i64 0, !dbg !82
  %2278 = fmul float %2277, 0x3FE9884540000000, !dbg !82
  %2279 = extractelement <2 x float> %2128, i64 1, !dbg !82
  %2280 = fmul float %2279, 0x3FE9884540000000, !dbg !82
  %2281 = extractelement <2 x float> %2127, i64 0, !dbg !82
  %2282 = fmul float %2281, 0x3FE9884540000000, !dbg !82
  %2283 = extractelement <2 x float> %2127, i64 1, !dbg !82
  %2284 = fmul float %2283, 0x3FE9884540000000, !dbg !82
  %2285 = extractelement <2 x float> %2126, i64 0, !dbg !82
  %2286 = fmul float %2285, 0x3FE9884540000000, !dbg !82
  %2287 = extractelement <2 x float> %2126, i64 1, !dbg !82
  %2288 = fmul float %2287, 0x3FE9884540000000, !dbg !82
  %2289 = extractelement <2 x float> %2125, i64 0, !dbg !82
  %2290 = fmul float %2289, 0x3FE9884540000000, !dbg !82
  %2291 = extractelement <2 x float> %2125, i64 1, !dbg !82
  %2292 = fmul float %2291, 0x3FE9884540000000, !dbg !82
  %2293 = extractelement <2 x float> %2124, i64 0, !dbg !82
  %2294 = fmul float %2293, 0x3FE9884540000000, !dbg !82
  %2295 = extractelement <2 x float> %2124, i64 1, !dbg !82
  %2296 = fmul float %2295, 0x3FE9884540000000, !dbg !82
  %2297 = extractelement <2 x float> %2123, i64 0, !dbg !82
  %2298 = fmul float %2297, 0x3FE9884540000000, !dbg !82
  %2299 = extractelement <2 x float> %2123, i64 1, !dbg !82
  %2300 = fmul float %2299, 0x3FE9884540000000, !dbg !82
  %2301 = extractelement <2 x float> %2122, i64 0, !dbg !82
  %2302 = fmul float %2301, 0x3FE9884540000000, !dbg !82
  %2303 = extractelement <2 x float> %2122, i64 1, !dbg !82
  %2304 = fmul float %2303, 0x3FE9884540000000, !dbg !82
  %2305 = extractelement <2 x float> %2121, i64 0, !dbg !82
  %2306 = fmul float %2305, 0x3FE9884540000000, !dbg !82
  %2307 = extractelement <2 x float> %2121, i64 1, !dbg !82
  %2308 = fmul float %2307, 0x3FE9884540000000, !dbg !82
  %2309 = extractelement <2 x float> %2120, i64 0, !dbg !82
  %2310 = fmul float %2309, 0x3FE9884540000000, !dbg !82
  %2311 = extractelement <2 x float> %2120, i64 1, !dbg !82
  %2312 = fmul float %2311, 0x3FE9884540000000, !dbg !82
  %2313 = extractelement <2 x float> %2119, i64 0, !dbg !82
  %2314 = fmul float %2313, 0x3FE9884540000000, !dbg !82
  %2315 = extractelement <2 x float> %2119, i64 1, !dbg !82
  %2316 = fmul float %2315, 0x3FE9884540000000, !dbg !82
  %2317 = extractelement <2 x float> %2118, i64 0, !dbg !82
  %2318 = fmul float %2317, 0x3FE9884540000000, !dbg !82
  %2319 = extractelement <2 x float> %2118, i64 1, !dbg !82
  %2320 = fmul float %2319, 0x3FE9884540000000, !dbg !82
  %2321 = extractelement <2 x float> %2117, i64 0, !dbg !82
  %2322 = fmul float %2321, 0x3FE9884540000000, !dbg !82
  %2323 = extractelement <2 x float> %2117, i64 1, !dbg !82
  %2324 = fmul float %2323, 0x3FE9884540000000, !dbg !82
  %2325 = extractelement <2 x float> %2116, i64 0, !dbg !82
  %2326 = fmul float %2325, 0x3FE9884540000000, !dbg !82
  %2327 = extractelement <2 x float> %2116, i64 1, !dbg !82
  %2328 = fmul float %2327, 0x3FE9884540000000, !dbg !82
  %2329 = extractelement <2 x float> %2115, i64 0, !dbg !82
  %2330 = fmul float %2329, 0x3FE9884540000000, !dbg !82
  %2331 = extractelement <2 x float> %2115, i64 1, !dbg !82
  %2332 = fmul float %2331, 0x3FE9884540000000, !dbg !82
  %2333 = extractelement <2 x float> %2114, i64 0, !dbg !82
  %2334 = fmul float %2333, 0x3FE9884540000000, !dbg !82
  %2335 = extractelement <2 x float> %2114, i64 1, !dbg !82
  %2336 = fmul float %2335, 0x3FE9884540000000, !dbg !82
  %2337 = extractelement <2 x float> %2113, i64 0, !dbg !82
  %2338 = fmul float %2337, 0x3FE9884540000000, !dbg !82
  %2339 = extractelement <2 x float> %2113, i64 1, !dbg !82
  %2340 = fmul float %2339, 0x3FE9884540000000, !dbg !82
  %2341 = fmul float %2277, 0x3FA6E4E260000000, !dbg !83
  %2342 = fmul float %2279, 0x3FA6E4E260000000, !dbg !83
  %2343 = fmul float %2281, 0x3FA6E4E260000000, !dbg !83
  %2344 = fmul float %2283, 0x3FA6E4E260000000, !dbg !83
  %2345 = fmul float %2285, 0x3FA6E4E260000000, !dbg !83
  %2346 = fmul float %2287, 0x3FA6E4E260000000, !dbg !83
  %2347 = fmul float %2289, 0x3FA6E4E260000000, !dbg !83
  %2348 = fmul float %2291, 0x3FA6E4E260000000, !dbg !83
  %2349 = fmul float %2293, 0x3FA6E4E260000000, !dbg !83
  %2350 = fmul float %2295, 0x3FA6E4E260000000, !dbg !83
  %2351 = fmul float %2297, 0x3FA6E4E260000000, !dbg !83
  %2352 = fmul float %2299, 0x3FA6E4E260000000, !dbg !83
  %2353 = fmul float %2301, 0x3FA6E4E260000000, !dbg !83
  %2354 = fmul float %2303, 0x3FA6E4E260000000, !dbg !83
  %2355 = fmul float %2305, 0x3FA6E4E260000000, !dbg !83
  %2356 = fmul float %2307, 0x3FA6E4E260000000, !dbg !83
  %2357 = fmul float %2309, 0x3FA6E4E260000000, !dbg !83
  %2358 = fmul float %2311, 0x3FA6E4E260000000, !dbg !83
  %2359 = fmul float %2313, 0x3FA6E4E260000000, !dbg !83
  %2360 = fmul float %2315, 0x3FA6E4E260000000, !dbg !83
  %2361 = fmul float %2317, 0x3FA6E4E260000000, !dbg !83
  %2362 = fmul float %2319, 0x3FA6E4E260000000, !dbg !83
  %2363 = fmul float %2321, 0x3FA6E4E260000000, !dbg !83
  %2364 = fmul float %2323, 0x3FA6E4E260000000, !dbg !83
  %2365 = fmul float %2325, 0x3FA6E4E260000000, !dbg !83
  %2366 = fmul float %2327, 0x3FA6E4E260000000, !dbg !83
  %2367 = fmul float %2329, 0x3FA6E4E260000000, !dbg !83
  %2368 = fmul float %2331, 0x3FA6E4E260000000, !dbg !83
  %2369 = fmul float %2333, 0x3FA6E4E260000000, !dbg !83
  %2370 = fmul float %2335, 0x3FA6E4E260000000, !dbg !83
  %2371 = fmul float %2337, 0x3FA6E4E260000000, !dbg !83
  %2372 = fmul float %2339, 0x3FA6E4E260000000, !dbg !83
  %2373 = fmul float %2277, %2341, !dbg !84
  %2374 = fmul float %2279, %2342, !dbg !84
  %2375 = fmul float %2281, %2343, !dbg !84
  %2376 = fmul float %2283, %2344, !dbg !84
  %2377 = fmul float %2285, %2345, !dbg !84
  %2378 = fmul float %2287, %2346, !dbg !84
  %2379 = fmul float %2289, %2347, !dbg !84
  %2380 = fmul float %2291, %2348, !dbg !84
  %2381 = fmul float %2293, %2349, !dbg !84
  %2382 = fmul float %2295, %2350, !dbg !84
  %2383 = fmul float %2297, %2351, !dbg !84
  %2384 = fmul float %2299, %2352, !dbg !84
  %2385 = fmul float %2301, %2353, !dbg !84
  %2386 = fmul float %2303, %2354, !dbg !84
  %2387 = fmul float %2305, %2355, !dbg !84
  %2388 = fmul float %2307, %2356, !dbg !84
  %2389 = fmul float %2309, %2357, !dbg !84
  %2390 = fmul float %2311, %2358, !dbg !84
  %2391 = fmul float %2313, %2359, !dbg !84
  %2392 = fmul float %2315, %2360, !dbg !84
  %2393 = fmul float %2317, %2361, !dbg !84
  %2394 = fmul float %2319, %2362, !dbg !84
  %2395 = fmul float %2321, %2363, !dbg !84
  %2396 = fmul float %2323, %2364, !dbg !84
  %2397 = fmul float %2325, %2365, !dbg !84
  %2398 = fmul float %2327, %2366, !dbg !84
  %2399 = fmul float %2329, %2367, !dbg !84
  %2400 = fmul float %2331, %2368, !dbg !84
  %2401 = fmul float %2333, %2369, !dbg !84
  %2402 = fmul float %2335, %2370, !dbg !84
  %2403 = fmul float %2337, %2371, !dbg !84
  %2404 = fmul float %2339, %2372, !dbg !84
  %2405 = fadd float %2373, 1.000000e+00, !dbg !85
  %2406 = fadd float %2374, 1.000000e+00, !dbg !85
  %2407 = fadd float %2375, 1.000000e+00, !dbg !85
  %2408 = fadd float %2376, 1.000000e+00, !dbg !85
  %2409 = fadd float %2377, 1.000000e+00, !dbg !85
  %2410 = fadd float %2378, 1.000000e+00, !dbg !85
  %2411 = fadd float %2379, 1.000000e+00, !dbg !85
  %2412 = fadd float %2380, 1.000000e+00, !dbg !85
  %2413 = fadd float %2381, 1.000000e+00, !dbg !85
  %2414 = fadd float %2382, 1.000000e+00, !dbg !85
  %2415 = fadd float %2383, 1.000000e+00, !dbg !85
  %2416 = fadd float %2384, 1.000000e+00, !dbg !85
  %2417 = fadd float %2385, 1.000000e+00, !dbg !85
  %2418 = fadd float %2386, 1.000000e+00, !dbg !85
  %2419 = fadd float %2387, 1.000000e+00, !dbg !85
  %2420 = fadd float %2388, 1.000000e+00, !dbg !85
  %2421 = fadd float %2389, 1.000000e+00, !dbg !85
  %2422 = fadd float %2390, 1.000000e+00, !dbg !85
  %2423 = fadd float %2391, 1.000000e+00, !dbg !85
  %2424 = fadd float %2392, 1.000000e+00, !dbg !85
  %2425 = fadd float %2393, 1.000000e+00, !dbg !85
  %2426 = fadd float %2394, 1.000000e+00, !dbg !85
  %2427 = fadd float %2395, 1.000000e+00, !dbg !85
  %2428 = fadd float %2396, 1.000000e+00, !dbg !85
  %2429 = fadd float %2397, 1.000000e+00, !dbg !85
  %2430 = fadd float %2398, 1.000000e+00, !dbg !85
  %2431 = fadd float %2399, 1.000000e+00, !dbg !85
  %2432 = fadd float %2400, 1.000000e+00, !dbg !85
  %2433 = fadd float %2401, 1.000000e+00, !dbg !85
  %2434 = fadd float %2402, 1.000000e+00, !dbg !85
  %2435 = fadd float %2403, 1.000000e+00, !dbg !85
  %2436 = fadd float %2404, 1.000000e+00, !dbg !85
  %2437 = fmul float %2278, %2405, !dbg !86
  %2438 = fmul float %2280, %2406, !dbg !86
  %2439 = fmul float %2282, %2407, !dbg !86
  %2440 = fmul float %2284, %2408, !dbg !86
  %2441 = fmul float %2286, %2409, !dbg !86
  %2442 = fmul float %2288, %2410, !dbg !86
  %2443 = fmul float %2290, %2411, !dbg !86
  %2444 = fmul float %2292, %2412, !dbg !86
  %2445 = fmul float %2294, %2413, !dbg !86
  %2446 = fmul float %2296, %2414, !dbg !86
  %2447 = fmul float %2298, %2415, !dbg !86
  %2448 = fmul float %2300, %2416, !dbg !86
  %2449 = fmul float %2302, %2417, !dbg !86
  %2450 = fmul float %2304, %2418, !dbg !86
  %2451 = fmul float %2306, %2419, !dbg !86
  %2452 = fmul float %2308, %2420, !dbg !86
  %2453 = fmul float %2310, %2421, !dbg !86
  %2454 = fmul float %2312, %2422, !dbg !86
  %2455 = fmul float %2314, %2423, !dbg !86
  %2456 = fmul float %2316, %2424, !dbg !86
  %2457 = fmul float %2318, %2425, !dbg !86
  %2458 = fmul float %2320, %2426, !dbg !86
  %2459 = fmul float %2322, %2427, !dbg !86
  %2460 = fmul float %2324, %2428, !dbg !86
  %2461 = fmul float %2326, %2429, !dbg !86
  %2462 = fmul float %2328, %2430, !dbg !86
  %2463 = fmul float %2330, %2431, !dbg !86
  %2464 = fmul float %2332, %2432, !dbg !86
  %2465 = fmul float %2334, %2433, !dbg !86
  %2466 = fmul float %2336, %2434, !dbg !86
  %2467 = fmul float %2338, %2435, !dbg !86
  %2468 = fmul float %2340, %2436, !dbg !86
  %2469 = fmul float %2437, 2.000000e+00, !dbg !87
  %2470 = fmul float %2438, 2.000000e+00, !dbg !87
  %2471 = fmul float %2439, 2.000000e+00, !dbg !87
  %2472 = fmul float %2440, 2.000000e+00, !dbg !87
  %2473 = fmul float %2441, 2.000000e+00, !dbg !87
  %2474 = fmul float %2442, 2.000000e+00, !dbg !87
  %2475 = fmul float %2443, 2.000000e+00, !dbg !87
  %2476 = fmul float %2444, 2.000000e+00, !dbg !87
  %2477 = fmul float %2445, 2.000000e+00, !dbg !87
  %2478 = fmul float %2446, 2.000000e+00, !dbg !87
  %2479 = fmul float %2447, 2.000000e+00, !dbg !87
  %2480 = fmul float %2448, 2.000000e+00, !dbg !87
  %2481 = fmul float %2449, 2.000000e+00, !dbg !87
  %2482 = fmul float %2450, 2.000000e+00, !dbg !87
  %2483 = fmul float %2451, 2.000000e+00, !dbg !87
  %2484 = fmul float %2452, 2.000000e+00, !dbg !87
  %2485 = fmul float %2453, 2.000000e+00, !dbg !87
  %2486 = fmul float %2454, 2.000000e+00, !dbg !87
  %2487 = fmul float %2455, 2.000000e+00, !dbg !87
  %2488 = fmul float %2456, 2.000000e+00, !dbg !87
  %2489 = fmul float %2457, 2.000000e+00, !dbg !87
  %2490 = fmul float %2458, 2.000000e+00, !dbg !87
  %2491 = fmul float %2459, 2.000000e+00, !dbg !87
  %2492 = fmul float %2460, 2.000000e+00, !dbg !87
  %2493 = fmul float %2461, 2.000000e+00, !dbg !87
  %2494 = fmul float %2462, 2.000000e+00, !dbg !87
  %2495 = fmul float %2463, 2.000000e+00, !dbg !87
  %2496 = fmul float %2464, 2.000000e+00, !dbg !87
  %2497 = fmul float %2465, 2.000000e+00, !dbg !87
  %2498 = fmul float %2466, 2.000000e+00, !dbg !87
  %2499 = fmul float %2467, 2.000000e+00, !dbg !87
  %2500 = fmul float %2468, 2.000000e+00, !dbg !87
  %2501 = fsub float 0.000000e+00, %2469, !dbg !90
  %2502 = fsub float 0.000000e+00, %2470, !dbg !90
  %2503 = fsub float 0.000000e+00, %2471, !dbg !90
  %2504 = fsub float 0.000000e+00, %2472, !dbg !90
  %2505 = fsub float 0.000000e+00, %2473, !dbg !90
  %2506 = fsub float 0.000000e+00, %2474, !dbg !90
  %2507 = fsub float 0.000000e+00, %2475, !dbg !90
  %2508 = fsub float 0.000000e+00, %2476, !dbg !90
  %2509 = fsub float 0.000000e+00, %2477, !dbg !90
  %2510 = fsub float 0.000000e+00, %2478, !dbg !90
  %2511 = fsub float 0.000000e+00, %2479, !dbg !90
  %2512 = fsub float 0.000000e+00, %2480, !dbg !90
  %2513 = fsub float 0.000000e+00, %2481, !dbg !90
  %2514 = fsub float 0.000000e+00, %2482, !dbg !90
  %2515 = fsub float 0.000000e+00, %2483, !dbg !90
  %2516 = fsub float 0.000000e+00, %2484, !dbg !90
  %2517 = fsub float 0.000000e+00, %2485, !dbg !90
  %2518 = fsub float 0.000000e+00, %2486, !dbg !90
  %2519 = fsub float 0.000000e+00, %2487, !dbg !90
  %2520 = fsub float 0.000000e+00, %2488, !dbg !90
  %2521 = fsub float 0.000000e+00, %2489, !dbg !90
  %2522 = fsub float 0.000000e+00, %2490, !dbg !90
  %2523 = fsub float 0.000000e+00, %2491, !dbg !90
  %2524 = fsub float 0.000000e+00, %2492, !dbg !90
  %2525 = fsub float 0.000000e+00, %2493, !dbg !90
  %2526 = fsub float 0.000000e+00, %2494, !dbg !90
  %2527 = fsub float 0.000000e+00, %2495, !dbg !90
  %2528 = fsub float 0.000000e+00, %2496, !dbg !90
  %2529 = fsub float 0.000000e+00, %2497, !dbg !90
  %2530 = fsub float 0.000000e+00, %2498, !dbg !90
  %2531 = fsub float 0.000000e+00, %2499, !dbg !90
  %2532 = fsub float 0.000000e+00, %2500, !dbg !90
  %2533 = fmul float %2501, 0x3FF7154760000000, !dbg !91
  %2534 = tail call float @llvm.exp2.f32(float %2533), !dbg !91
  %2535 = fmul float %2502, 0x3FF7154760000000, !dbg !91
  %2536 = tail call float @llvm.exp2.f32(float %2535), !dbg !91
  %2537 = fmul float %2503, 0x3FF7154760000000, !dbg !91
  %2538 = tail call float @llvm.exp2.f32(float %2537), !dbg !91
  %2539 = fmul float %2504, 0x3FF7154760000000, !dbg !91
  %2540 = tail call float @llvm.exp2.f32(float %2539), !dbg !91
  %2541 = fmul float %2505, 0x3FF7154760000000, !dbg !91
  %2542 = tail call float @llvm.exp2.f32(float %2541), !dbg !91
  %2543 = fmul float %2506, 0x3FF7154760000000, !dbg !91
  %2544 = tail call float @llvm.exp2.f32(float %2543), !dbg !91
  %2545 = fmul float %2507, 0x3FF7154760000000, !dbg !91
  %2546 = tail call float @llvm.exp2.f32(float %2545), !dbg !91
  %2547 = fmul float %2508, 0x3FF7154760000000, !dbg !91
  %2548 = tail call float @llvm.exp2.f32(float %2547), !dbg !91
  %2549 = fmul float %2509, 0x3FF7154760000000, !dbg !91
  %2550 = tail call float @llvm.exp2.f32(float %2549), !dbg !91
  %2551 = fmul float %2510, 0x3FF7154760000000, !dbg !91
  %2552 = tail call float @llvm.exp2.f32(float %2551), !dbg !91
  %2553 = fmul float %2511, 0x3FF7154760000000, !dbg !91
  %2554 = tail call float @llvm.exp2.f32(float %2553), !dbg !91
  %2555 = fmul float %2512, 0x3FF7154760000000, !dbg !91
  %2556 = tail call float @llvm.exp2.f32(float %2555), !dbg !91
  %2557 = fmul float %2513, 0x3FF7154760000000, !dbg !91
  %2558 = tail call float @llvm.exp2.f32(float %2557), !dbg !91
  %2559 = fmul float %2514, 0x3FF7154760000000, !dbg !91
  %2560 = tail call float @llvm.exp2.f32(float %2559), !dbg !91
  %2561 = fmul float %2515, 0x3FF7154760000000, !dbg !91
  %2562 = tail call float @llvm.exp2.f32(float %2561), !dbg !91
  %2563 = fmul float %2516, 0x3FF7154760000000, !dbg !91
  %2564 = tail call float @llvm.exp2.f32(float %2563), !dbg !91
  %2565 = fmul float %2517, 0x3FF7154760000000, !dbg !91
  %2566 = tail call float @llvm.exp2.f32(float %2565), !dbg !91
  %2567 = fmul float %2518, 0x3FF7154760000000, !dbg !91
  %2568 = tail call float @llvm.exp2.f32(float %2567), !dbg !91
  %2569 = fmul float %2519, 0x3FF7154760000000, !dbg !91
  %2570 = tail call float @llvm.exp2.f32(float %2569), !dbg !91
  %2571 = fmul float %2520, 0x3FF7154760000000, !dbg !91
  %2572 = tail call float @llvm.exp2.f32(float %2571), !dbg !91
  %2573 = fmul float %2521, 0x3FF7154760000000, !dbg !91
  %2574 = tail call float @llvm.exp2.f32(float %2573), !dbg !91
  %2575 = fmul float %2522, 0x3FF7154760000000, !dbg !91
  %2576 = tail call float @llvm.exp2.f32(float %2575), !dbg !91
  %2577 = fmul float %2523, 0x3FF7154760000000, !dbg !91
  %2578 = tail call float @llvm.exp2.f32(float %2577), !dbg !91
  %2579 = fmul float %2524, 0x3FF7154760000000, !dbg !91
  %2580 = tail call float @llvm.exp2.f32(float %2579), !dbg !91
  %2581 = fmul float %2525, 0x3FF7154760000000, !dbg !91
  %2582 = tail call float @llvm.exp2.f32(float %2581), !dbg !91
  %2583 = fmul float %2526, 0x3FF7154760000000, !dbg !91
  %2584 = tail call float @llvm.exp2.f32(float %2583), !dbg !91
  %2585 = fmul float %2527, 0x3FF7154760000000, !dbg !91
  %2586 = tail call float @llvm.exp2.f32(float %2585), !dbg !91
  %2587 = fmul float %2528, 0x3FF7154760000000, !dbg !91
  %2588 = tail call float @llvm.exp2.f32(float %2587), !dbg !91
  %2589 = fmul float %2529, 0x3FF7154760000000, !dbg !91
  %2590 = tail call float @llvm.exp2.f32(float %2589), !dbg !91
  %2591 = fmul float %2530, 0x3FF7154760000000, !dbg !91
  %2592 = tail call float @llvm.exp2.f32(float %2591), !dbg !91
  %2593 = fmul float %2531, 0x3FF7154760000000, !dbg !91
  %2594 = tail call float @llvm.exp2.f32(float %2593), !dbg !91
  %2595 = fmul float %2532, 0x3FF7154760000000, !dbg !91
  %2596 = tail call float @llvm.exp2.f32(float %2595), !dbg !91
  %2597 = insertelement <2 x float> poison, float %2534, i64 0, !dbg !93
  %2598 = insertelement <2 x float> %2597, float %2536, i64 1, !dbg !93
  %2599 = fadd <2 x float> %2598, splat (float 1.000000e+00), !dbg !93
  %2600 = fdiv <2 x float> splat (float 1.000000e+00), %2599, !dbg !94
  %2601 = fmul <2 x float> %2600, splat (float 2.000000e+00), !dbg !95
  %2602 = fadd <2 x float> %2601, splat (float -1.000000e+00), !dbg !96
  %2603 = insertelement <2 x float> poison, float %2538, i64 0, !dbg !93
  %2604 = insertelement <2 x float> %2603, float %2540, i64 1, !dbg !93
  %2605 = fadd <2 x float> %2604, splat (float 1.000000e+00), !dbg !93
  %2606 = fdiv <2 x float> splat (float 1.000000e+00), %2605, !dbg !94
  %2607 = fmul <2 x float> %2606, splat (float 2.000000e+00), !dbg !95
  %2608 = fadd <2 x float> %2607, splat (float -1.000000e+00), !dbg !96
  %2609 = insertelement <2 x float> poison, float %2542, i64 0, !dbg !93
  %2610 = insertelement <2 x float> %2609, float %2544, i64 1, !dbg !93
  %2611 = fadd <2 x float> %2610, splat (float 1.000000e+00), !dbg !93
  %2612 = fdiv <2 x float> splat (float 1.000000e+00), %2611, !dbg !94
  %2613 = fmul <2 x float> %2612, splat (float 2.000000e+00), !dbg !95
  %2614 = fadd <2 x float> %2613, splat (float -1.000000e+00), !dbg !96
  %2615 = insertelement <2 x float> poison, float %2546, i64 0, !dbg !93
  %2616 = insertelement <2 x float> %2615, float %2548, i64 1, !dbg !93
  %2617 = fadd <2 x float> %2616, splat (float 1.000000e+00), !dbg !93
  %2618 = fdiv <2 x float> splat (float 1.000000e+00), %2617, !dbg !94
  %2619 = fmul <2 x float> %2618, splat (float 2.000000e+00), !dbg !95
  %2620 = fadd <2 x float> %2619, splat (float -1.000000e+00), !dbg !96
  %2621 = insertelement <2 x float> poison, float %2550, i64 0, !dbg !93
  %2622 = insertelement <2 x float> %2621, float %2552, i64 1, !dbg !93
  %2623 = fadd <2 x float> %2622, splat (float 1.000000e+00), !dbg !93
  %2624 = fdiv <2 x float> splat (float 1.000000e+00), %2623, !dbg !94
  %2625 = fmul <2 x float> %2624, splat (float 2.000000e+00), !dbg !95
  %2626 = fadd <2 x float> %2625, splat (float -1.000000e+00), !dbg !96
  %2627 = insertelement <2 x float> poison, float %2554, i64 0, !dbg !93
  %2628 = insertelement <2 x float> %2627, float %2556, i64 1, !dbg !93
  %2629 = fadd <2 x float> %2628, splat (float 1.000000e+00), !dbg !93
  %2630 = fdiv <2 x float> splat (float 1.000000e+00), %2629, !dbg !94
  %2631 = fmul <2 x float> %2630, splat (float 2.000000e+00), !dbg !95
  %2632 = fadd <2 x float> %2631, splat (float -1.000000e+00), !dbg !96
  %2633 = insertelement <2 x float> poison, float %2558, i64 0, !dbg !93
  %2634 = insertelement <2 x float> %2633, float %2560, i64 1, !dbg !93
  %2635 = fadd <2 x float> %2634, splat (float 1.000000e+00), !dbg !93
  %2636 = fdiv <2 x float> splat (float 1.000000e+00), %2635, !dbg !94
  %2637 = fmul <2 x float> %2636, splat (float 2.000000e+00), !dbg !95
  %2638 = fadd <2 x float> %2637, splat (float -1.000000e+00), !dbg !96
  %2639 = insertelement <2 x float> poison, float %2562, i64 0, !dbg !93
  %2640 = insertelement <2 x float> %2639, float %2564, i64 1, !dbg !93
  %2641 = fadd <2 x float> %2640, splat (float 1.000000e+00), !dbg !93
  %2642 = fdiv <2 x float> splat (float 1.000000e+00), %2641, !dbg !94
  %2643 = fmul <2 x float> %2642, splat (float 2.000000e+00), !dbg !95
  %2644 = fadd <2 x float> %2643, splat (float -1.000000e+00), !dbg !96
  %2645 = insertelement <2 x float> poison, float %2566, i64 0, !dbg !93
  %2646 = insertelement <2 x float> %2645, float %2568, i64 1, !dbg !93
  %2647 = fadd <2 x float> %2646, splat (float 1.000000e+00), !dbg !93
  %2648 = fdiv <2 x float> splat (float 1.000000e+00), %2647, !dbg !94
  %2649 = fmul <2 x float> %2648, splat (float 2.000000e+00), !dbg !95
  %2650 = fadd <2 x float> %2649, splat (float -1.000000e+00), !dbg !96
  %2651 = insertelement <2 x float> poison, float %2570, i64 0, !dbg !93
  %2652 = insertelement <2 x float> %2651, float %2572, i64 1, !dbg !93
  %2653 = fadd <2 x float> %2652, splat (float 1.000000e+00), !dbg !93
  %2654 = fdiv <2 x float> splat (float 1.000000e+00), %2653, !dbg !94
  %2655 = fmul <2 x float> %2654, splat (float 2.000000e+00), !dbg !95
  %2656 = fadd <2 x float> %2655, splat (float -1.000000e+00), !dbg !96
  %2657 = insertelement <2 x float> poison, float %2574, i64 0, !dbg !93
  %2658 = insertelement <2 x float> %2657, float %2576, i64 1, !dbg !93
  %2659 = fadd <2 x float> %2658, splat (float 1.000000e+00), !dbg !93
  %2660 = fdiv <2 x float> splat (float 1.000000e+00), %2659, !dbg !94
  %2661 = fmul <2 x float> %2660, splat (float 2.000000e+00), !dbg !95
  %2662 = fadd <2 x float> %2661, splat (float -1.000000e+00), !dbg !96
  %2663 = insertelement <2 x float> poison, float %2578, i64 0, !dbg !93
  %2664 = insertelement <2 x float> %2663, float %2580, i64 1, !dbg !93
  %2665 = fadd <2 x float> %2664, splat (float 1.000000e+00), !dbg !93
  %2666 = fdiv <2 x float> splat (float 1.000000e+00), %2665, !dbg !94
  %2667 = fmul <2 x float> %2666, splat (float 2.000000e+00), !dbg !95
  %2668 = fadd <2 x float> %2667, splat (float -1.000000e+00), !dbg !96
  %2669 = insertelement <2 x float> poison, float %2582, i64 0, !dbg !93
  %2670 = insertelement <2 x float> %2669, float %2584, i64 1, !dbg !93
  %2671 = fadd <2 x float> %2670, splat (float 1.000000e+00), !dbg !93
  %2672 = fdiv <2 x float> splat (float 1.000000e+00), %2671, !dbg !94
  %2673 = fmul <2 x float> %2672, splat (float 2.000000e+00), !dbg !95
  %2674 = fadd <2 x float> %2673, splat (float -1.000000e+00), !dbg !96
  %2675 = insertelement <2 x float> poison, float %2586, i64 0, !dbg !93
  %2676 = insertelement <2 x float> %2675, float %2588, i64 1, !dbg !93
  %2677 = fadd <2 x float> %2676, splat (float 1.000000e+00), !dbg !93
  %2678 = fdiv <2 x float> splat (float 1.000000e+00), %2677, !dbg !94
  %2679 = fmul <2 x float> %2678, splat (float 2.000000e+00), !dbg !95
  %2680 = fadd <2 x float> %2679, splat (float -1.000000e+00), !dbg !96
  %2681 = insertelement <2 x float> poison, float %2590, i64 0, !dbg !93
  %2682 = insertelement <2 x float> %2681, float %2592, i64 1, !dbg !93
  %2683 = fadd <2 x float> %2682, splat (float 1.000000e+00), !dbg !93
  %2684 = fdiv <2 x float> splat (float 1.000000e+00), %2683, !dbg !94
  %2685 = fmul <2 x float> %2684, splat (float 2.000000e+00), !dbg !95
  %2686 = fadd <2 x float> %2685, splat (float -1.000000e+00), !dbg !96
  %2687 = insertelement <2 x float> poison, float %2594, i64 0, !dbg !93
  %2688 = insertelement <2 x float> %2687, float %2596, i64 1, !dbg !93
  %2689 = fadd <2 x float> %2688, splat (float 1.000000e+00), !dbg !93
  %2690 = fdiv <2 x float> splat (float 1.000000e+00), %2689, !dbg !94
  %2691 = fmul <2 x float> %2690, splat (float 2.000000e+00), !dbg !95
  %2692 = fadd <2 x float> %2691, splat (float -1.000000e+00), !dbg !96
  %2693 = fmul <2 x float> %2128, splat (float 5.000000e-01), !dbg !97
  %2694 = fmul <2 x float> %2127, splat (float 5.000000e-01), !dbg !97
  %2695 = fmul <2 x float> %2126, splat (float 5.000000e-01), !dbg !97
  %2696 = fmul <2 x float> %2125, splat (float 5.000000e-01), !dbg !97
  %2697 = fmul <2 x float> %2124, splat (float 5.000000e-01), !dbg !97
  %2698 = fmul <2 x float> %2123, splat (float 5.000000e-01), !dbg !97
  %2699 = fmul <2 x float> %2122, splat (float 5.000000e-01), !dbg !97
  %2700 = fmul <2 x float> %2121, splat (float 5.000000e-01), !dbg !97
  %2701 = fmul <2 x float> %2120, splat (float 5.000000e-01), !dbg !97
  %2702 = fmul <2 x float> %2119, splat (float 5.000000e-01), !dbg !97
  %2703 = fmul <2 x float> %2118, splat (float 5.000000e-01), !dbg !97
  %2704 = fmul <2 x float> %2117, splat (float 5.000000e-01), !dbg !97
  %2705 = fmul <2 x float> %2116, splat (float 5.000000e-01), !dbg !97
  %2706 = fmul <2 x float> %2115, splat (float 5.000000e-01), !dbg !97
  %2707 = fmul <2 x float> %2114, splat (float 5.000000e-01), !dbg !97
  %2708 = fmul <2 x float> %2113, splat (float 5.000000e-01), !dbg !97
  %2709 = fadd <2 x float> %2602, splat (float 1.000000e+00), !dbg !98
  %2710 = fadd <2 x float> %2608, splat (float 1.000000e+00), !dbg !98
  %2711 = fadd <2 x float> %2614, splat (float 1.000000e+00), !dbg !98
  %2712 = fadd <2 x float> %2620, splat (float 1.000000e+00), !dbg !98
  %2713 = fadd <2 x float> %2626, splat (float 1.000000e+00), !dbg !98
  %2714 = fadd <2 x float> %2632, splat (float 1.000000e+00), !dbg !98
  %2715 = fadd <2 x float> %2638, splat (float 1.000000e+00), !dbg !98
  %2716 = fadd <2 x float> %2644, splat (float 1.000000e+00), !dbg !98
  %2717 = fadd <2 x float> %2650, splat (float 1.000000e+00), !dbg !98
  %2718 = fadd <2 x float> %2656, splat (float 1.000000e+00), !dbg !98
  %2719 = fadd <2 x float> %2662, splat (float 1.000000e+00), !dbg !98
  %2720 = fadd <2 x float> %2668, splat (float 1.000000e+00), !dbg !98
  %2721 = fadd <2 x float> %2674, splat (float 1.000000e+00), !dbg !98
  %2722 = fadd <2 x float> %2680, splat (float 1.000000e+00), !dbg !98
  %2723 = fadd <2 x float> %2686, splat (float 1.000000e+00), !dbg !98
  %2724 = fadd <2 x float> %2692, splat (float 1.000000e+00), !dbg !98
  br i1 %228, label %2725, label %2876, !dbg !92

2725:                                             ; preds = %2260
  %2726 = fmul <2 x float> %2708, %2724, !dbg !99
  %2727 = insertelement <2 x float> poison, float %20, i64 0, !dbg !100
  %2728 = shufflevector <2 x float> %2727, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !100
  %2729 = fmul <2 x float> %2728, %2726, !dbg !100
  %2730 = fptrunc <2 x float> %2729 to <2 x bfloat>, !dbg !101
  %2731 = shufflevector <2 x bfloat> %2730, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2732 = fmul <2 x float> %2707, %2723, !dbg !99
  %2733 = fmul <2 x float> %2728, %2732, !dbg !100
  %2734 = fptrunc <2 x float> %2733 to <2 x bfloat>, !dbg !101
  %2735 = shufflevector <2 x bfloat> %2734, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2736 = fmul <2 x float> %2706, %2722, !dbg !99
  %2737 = fmul <2 x float> %2728, %2736, !dbg !100
  %2738 = fptrunc <2 x float> %2737 to <2 x bfloat>, !dbg !101
  %2739 = fmul <2 x float> %2705, %2721, !dbg !99
  %2740 = fmul <2 x float> %2728, %2739, !dbg !100
  %2741 = fptrunc <2 x float> %2740 to <2 x bfloat>, !dbg !101
  %2742 = fmul <2 x float> %2704, %2720, !dbg !99
  %2743 = fmul <2 x float> %2728, %2742, !dbg !100
  %2744 = fptrunc <2 x float> %2743 to <2 x bfloat>, !dbg !101
  %2745 = shufflevector <2 x bfloat> %2744, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2746 = fmul <2 x float> %2703, %2719, !dbg !99
  %2747 = fmul <2 x float> %2728, %2746, !dbg !100
  %2748 = fptrunc <2 x float> %2747 to <2 x bfloat>, !dbg !101
  %2749 = shufflevector <2 x bfloat> %2748, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2750 = fmul <2 x float> %2702, %2718, !dbg !99
  %2751 = fmul <2 x float> %2728, %2750, !dbg !100
  %2752 = fptrunc <2 x float> %2751 to <2 x bfloat>, !dbg !101
  %2753 = fmul <2 x float> %2701, %2717, !dbg !99
  %2754 = fmul <2 x float> %2728, %2753, !dbg !100
  %2755 = fptrunc <2 x float> %2754 to <2 x bfloat>, !dbg !101
  %2756 = fmul <2 x float> %2700, %2716, !dbg !99
  %2757 = fmul <2 x float> %2728, %2756, !dbg !100
  %2758 = fptrunc <2 x float> %2757 to <2 x bfloat>, !dbg !101
  %2759 = shufflevector <2 x bfloat> %2758, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2760 = fmul <2 x float> %2699, %2715, !dbg !99
  %2761 = fmul <2 x float> %2728, %2760, !dbg !100
  %2762 = fptrunc <2 x float> %2761 to <2 x bfloat>, !dbg !101
  %2763 = shufflevector <2 x bfloat> %2762, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2764 = fmul <2 x float> %2698, %2714, !dbg !99
  %2765 = fmul <2 x float> %2728, %2764, !dbg !100
  %2766 = fptrunc <2 x float> %2765 to <2 x bfloat>, !dbg !101
  %2767 = fmul <2 x float> %2697, %2713, !dbg !99
  %2768 = fmul <2 x float> %2728, %2767, !dbg !100
  %2769 = fptrunc <2 x float> %2768 to <2 x bfloat>, !dbg !101
  %2770 = fmul <2 x float> %2696, %2712, !dbg !99
  %2771 = fmul <2 x float> %2728, %2770, !dbg !100
  %2772 = fptrunc <2 x float> %2771 to <2 x bfloat>, !dbg !101
  %2773 = shufflevector <2 x bfloat> %2772, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2774 = fmul <2 x float> %2695, %2711, !dbg !99
  %2775 = fmul <2 x float> %2728, %2774, !dbg !100
  %2776 = fptrunc <2 x float> %2775 to <2 x bfloat>, !dbg !101
  %2777 = shufflevector <2 x bfloat> %2776, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %2778 = fmul <2 x float> %2694, %2710, !dbg !99
  %2779 = fmul <2 x float> %2728, %2778, !dbg !100
  %2780 = fptrunc <2 x float> %2779 to <2 x bfloat>, !dbg !101
  %2781 = fmul <2 x float> %2693, %2709, !dbg !99
  %2782 = fmul <2 x float> %2728, %2781, !dbg !100
  %2783 = fptrunc <2 x float> %2782 to <2 x bfloat>, !dbg !101
  %2784 = shufflevector <2 x bfloat> %2783, <2 x bfloat> %2780, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !92
  %2785 = shufflevector <8 x bfloat> %2784, <8 x bfloat> %2777, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !92
  %2786 = shufflevector <8 x bfloat> %2785, <8 x bfloat> %2773, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !92
  %2787 = shufflevector <2 x bfloat> %2769, <2 x bfloat> %2766, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !92
  %2788 = shufflevector <8 x bfloat> %2787, <8 x bfloat> %2763, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !92
  %2789 = shufflevector <8 x bfloat> %2788, <8 x bfloat> %2759, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !92
  %2790 = shufflevector <2 x bfloat> %2755, <2 x bfloat> %2752, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !92
  %2791 = shufflevector <8 x bfloat> %2790, <8 x bfloat> %2749, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !92
  %2792 = shufflevector <8 x bfloat> %2791, <8 x bfloat> %2745, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !92
  %2793 = shufflevector <2 x bfloat> %2741, <2 x bfloat> %2738, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !92
  %2794 = shufflevector <8 x bfloat> %2793, <8 x bfloat> %2735, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !92
  %2795 = shufflevector <8 x bfloat> %2794, <8 x bfloat> %2731, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !92
  %2796 = shufflevector <4 x bfloat> %2170, <4 x bfloat> %2171, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %2797 = shufflevector <4 x bfloat> %2172, <4 x bfloat> %2173, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %2798 = shufflevector <4 x bfloat> %2174, <4 x bfloat> %2175, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %2799 = shufflevector <4 x bfloat> %2176, <4 x bfloat> %2177, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %2800 = shufflevector <4 x bfloat> %2178, <4 x bfloat> %2179, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %2801 = shufflevector <4 x bfloat> %2180, <4 x bfloat> %2181, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %2802 = shufflevector <4 x bfloat> %2182, <4 x bfloat> %2183, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %2803 = shufflevector <4 x bfloat> %2184, <4 x bfloat> %2185, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>, !dbg !92
  %2804 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %1816, i64 0, !dbg !92
  %2805 = insertelement <16 x float> %2804, float %1817, i64 1, !dbg !92
  %2806 = insertelement <16 x float> %2805, float %1818, i64 2, !dbg !92
  %2807 = insertelement <16 x float> %2806, float %1819, i64 3, !dbg !92
  %2808 = insertelement <16 x float> %2807, float %1820, i64 4, !dbg !92
  %2809 = insertelement <16 x float> %2808, float %1821, i64 5, !dbg !92
  %2810 = insertelement <16 x float> %2809, float %1822, i64 6, !dbg !92
  %2811 = insertelement <16 x float> %2810, float %1823, i64 7, !dbg !92
  %2812 = insertelement <16 x float> %2811, float %1824, i64 8, !dbg !92
  %2813 = insertelement <16 x float> %2812, float %1825, i64 9, !dbg !92
  %2814 = insertelement <16 x float> %2813, float %1826, i64 10, !dbg !92
  %2815 = insertelement <16 x float> %2814, float %1827, i64 11, !dbg !92
  %2816 = insertelement <16 x float> %2815, float %1828, i64 12, !dbg !92
  %2817 = insertelement <16 x float> %2816, float %1829, i64 13, !dbg !92
  %2818 = insertelement <16 x float> %2817, float %1830, i64 14, !dbg !92
  %2819 = insertelement <16 x float> %2818, float %1831, i64 15, !dbg !92
  %2820 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2796, <8 x bfloat> %2786, <16 x float> %2819, i32 0, i32 0, i32 0), !dbg !92
  %2821 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2797, <8 x bfloat> %2789, <16 x float> %2820, i32 0, i32 0, i32 0), !dbg !92
  %2822 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2798, <8 x bfloat> %2792, <16 x float> %2821, i32 0, i32 0, i32 0), !dbg !92
  %2823 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2799, <8 x bfloat> %2795, <16 x float> %2822, i32 0, i32 0, i32 0), !dbg !92
  %2824 = extractelement <16 x float> %2823, i64 0, !dbg !92
  %2825 = extractelement <16 x float> %2823, i64 1, !dbg !92
  %2826 = extractelement <16 x float> %2823, i64 2, !dbg !92
  %2827 = extractelement <16 x float> %2823, i64 3, !dbg !92
  %2828 = extractelement <16 x float> %2823, i64 4, !dbg !92
  %2829 = extractelement <16 x float> %2823, i64 5, !dbg !92
  %2830 = extractelement <16 x float> %2823, i64 6, !dbg !92
  %2831 = extractelement <16 x float> %2823, i64 7, !dbg !92
  %2832 = extractelement <16 x float> %2823, i64 8, !dbg !92
  %2833 = extractelement <16 x float> %2823, i64 9, !dbg !92
  %2834 = extractelement <16 x float> %2823, i64 10, !dbg !92
  %2835 = extractelement <16 x float> %2823, i64 11, !dbg !92
  %2836 = extractelement <16 x float> %2823, i64 12, !dbg !92
  %2837 = extractelement <16 x float> %2823, i64 13, !dbg !92
  %2838 = extractelement <16 x float> %2823, i64 14, !dbg !92
  %2839 = extractelement <16 x float> %2823, i64 15, !dbg !92
  %2840 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %1832, i64 0, !dbg !92
  %2841 = insertelement <16 x float> %2840, float %1833, i64 1, !dbg !92
  %2842 = insertelement <16 x float> %2841, float %1834, i64 2, !dbg !92
  %2843 = insertelement <16 x float> %2842, float %1835, i64 3, !dbg !92
  %2844 = insertelement <16 x float> %2843, float %1836, i64 4, !dbg !92
  %2845 = insertelement <16 x float> %2844, float %1837, i64 5, !dbg !92
  %2846 = insertelement <16 x float> %2845, float %1838, i64 6, !dbg !92
  %2847 = insertelement <16 x float> %2846, float %1839, i64 7, !dbg !92
  %2848 = insertelement <16 x float> %2847, float %1840, i64 8, !dbg !92
  %2849 = insertelement <16 x float> %2848, float %1841, i64 9, !dbg !92
  %2850 = insertelement <16 x float> %2849, float %1842, i64 10, !dbg !92
  %2851 = insertelement <16 x float> %2850, float %1843, i64 11, !dbg !92
  %2852 = insertelement <16 x float> %2851, float %1844, i64 12, !dbg !92
  %2853 = insertelement <16 x float> %2852, float %1845, i64 13, !dbg !92
  %2854 = insertelement <16 x float> %2853, float %1846, i64 14, !dbg !92
  %2855 = insertelement <16 x float> %2854, float %1847, i64 15, !dbg !92
  %2856 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2800, <8 x bfloat> %2786, <16 x float> %2855, i32 0, i32 0, i32 0), !dbg !92
  %2857 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2801, <8 x bfloat> %2789, <16 x float> %2856, i32 0, i32 0, i32 0), !dbg !92
  %2858 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2802, <8 x bfloat> %2792, <16 x float> %2857, i32 0, i32 0, i32 0), !dbg !92
  %2859 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %2803, <8 x bfloat> %2795, <16 x float> %2858, i32 0, i32 0, i32 0), !dbg !92
  %2860 = extractelement <16 x float> %2859, i64 0, !dbg !92
  %2861 = extractelement <16 x float> %2859, i64 1, !dbg !92
  %2862 = extractelement <16 x float> %2859, i64 2, !dbg !92
  %2863 = extractelement <16 x float> %2859, i64 3, !dbg !92
  %2864 = extractelement <16 x float> %2859, i64 4, !dbg !92
  %2865 = extractelement <16 x float> %2859, i64 5, !dbg !92
  %2866 = extractelement <16 x float> %2859, i64 6, !dbg !92
  %2867 = extractelement <16 x float> %2859, i64 7, !dbg !92
  %2868 = extractelement <16 x float> %2859, i64 8, !dbg !92
  %2869 = extractelement <16 x float> %2859, i64 9, !dbg !92
  %2870 = extractelement <16 x float> %2859, i64 10, !dbg !92
  %2871 = extractelement <16 x float> %2859, i64 11, !dbg !92
  %2872 = extractelement <16 x float> %2859, i64 12, !dbg !92
  %2873 = extractelement <16 x float> %2859, i64 13, !dbg !92
  %2874 = extractelement <16 x float> %2859, i64 14, !dbg !92
  %2875 = extractelement <16 x float> %2859, i64 15, !dbg !92
  br label %2876, !dbg !92

2876:                                             ; preds = %2725, %2260
  %2877 = phi float [ %2824, %2725 ], [ %1816, %2260 ], !dbg !13
  %2878 = phi float [ %2825, %2725 ], [ %1817, %2260 ], !dbg !13
  %2879 = phi float [ %2826, %2725 ], [ %1818, %2260 ], !dbg !13
  %2880 = phi float [ %2827, %2725 ], [ %1819, %2260 ], !dbg !13
  %2881 = phi float [ %2828, %2725 ], [ %1820, %2260 ], !dbg !13
  %2882 = phi float [ %2829, %2725 ], [ %1821, %2260 ], !dbg !13
  %2883 = phi float [ %2830, %2725 ], [ %1822, %2260 ], !dbg !13
  %2884 = phi float [ %2831, %2725 ], [ %1823, %2260 ], !dbg !13
  %2885 = phi float [ %2832, %2725 ], [ %1824, %2260 ], !dbg !13
  %2886 = phi float [ %2833, %2725 ], [ %1825, %2260 ], !dbg !13
  %2887 = phi float [ %2834, %2725 ], [ %1826, %2260 ], !dbg !13
  %2888 = phi float [ %2835, %2725 ], [ %1827, %2260 ], !dbg !13
  %2889 = phi float [ %2836, %2725 ], [ %1828, %2260 ], !dbg !13
  %2890 = phi float [ %2837, %2725 ], [ %1829, %2260 ], !dbg !13
  %2891 = phi float [ %2838, %2725 ], [ %1830, %2260 ], !dbg !13
  %2892 = phi float [ %2839, %2725 ], [ %1831, %2260 ], !dbg !13
  %2893 = phi float [ %2860, %2725 ], [ %1832, %2260 ], !dbg !13
  %2894 = phi float [ %2861, %2725 ], [ %1833, %2260 ], !dbg !13
  %2895 = phi float [ %2862, %2725 ], [ %1834, %2260 ], !dbg !13
  %2896 = phi float [ %2863, %2725 ], [ %1835, %2260 ], !dbg !13
  %2897 = phi float [ %2864, %2725 ], [ %1836, %2260 ], !dbg !13
  %2898 = phi float [ %2865, %2725 ], [ %1837, %2260 ], !dbg !13
  %2899 = phi float [ %2866, %2725 ], [ %1838, %2260 ], !dbg !13
  %2900 = phi float [ %2867, %2725 ], [ %1839, %2260 ], !dbg !13
  %2901 = phi float [ %2868, %2725 ], [ %1840, %2260 ], !dbg !13
  %2902 = phi float [ %2869, %2725 ], [ %1841, %2260 ], !dbg !13
  %2903 = phi float [ %2870, %2725 ], [ %1842, %2260 ], !dbg !13
  %2904 = phi float [ %2871, %2725 ], [ %1843, %2260 ], !dbg !13
  %2905 = phi float [ %2872, %2725 ], [ %1844, %2260 ], !dbg !13
  %2906 = phi float [ %2873, %2725 ], [ %1845, %2260 ], !dbg !13
  %2907 = phi float [ %2874, %2725 ], [ %1846, %2260 ], !dbg !13
  %2908 = phi float [ %2875, %2725 ], [ %1847, %2260 ], !dbg !13
  %2909 = fmul <2 x float> %2602, %2602, !dbg !102
  %2910 = fmul <2 x float> %2608, %2608, !dbg !102
  %2911 = fmul <2 x float> %2614, %2614, !dbg !102
  %2912 = fmul <2 x float> %2620, %2620, !dbg !102
  %2913 = fmul <2 x float> %2626, %2626, !dbg !102
  %2914 = fmul <2 x float> %2632, %2632, !dbg !102
  %2915 = fmul <2 x float> %2638, %2638, !dbg !102
  %2916 = fmul <2 x float> %2644, %2644, !dbg !102
  %2917 = fmul <2 x float> %2650, %2650, !dbg !102
  %2918 = fmul <2 x float> %2656, %2656, !dbg !102
  %2919 = fmul <2 x float> %2662, %2662, !dbg !102
  %2920 = fmul <2 x float> %2668, %2668, !dbg !102
  %2921 = fmul <2 x float> %2674, %2674, !dbg !102
  %2922 = fmul <2 x float> %2680, %2680, !dbg !102
  %2923 = fmul <2 x float> %2686, %2686, !dbg !102
  %2924 = fmul <2 x float> %2692, %2692, !dbg !102
  %2925 = fmul <2 x float> %2128, splat (float 0x3FBB6676C0000000), !dbg !105
  %2926 = fmul <2 x float> %2127, splat (float 0x3FBB6676C0000000), !dbg !105
  %2927 = fmul <2 x float> %2126, splat (float 0x3FBB6676C0000000), !dbg !105
  %2928 = fmul <2 x float> %2125, splat (float 0x3FBB6676C0000000), !dbg !105
  %2929 = fmul <2 x float> %2124, splat (float 0x3FBB6676C0000000), !dbg !105
  %2930 = fmul <2 x float> %2123, splat (float 0x3FBB6676C0000000), !dbg !105
  %2931 = fmul <2 x float> %2122, splat (float 0x3FBB6676C0000000), !dbg !105
  %2932 = fmul <2 x float> %2121, splat (float 0x3FBB6676C0000000), !dbg !105
  %2933 = fmul <2 x float> %2120, splat (float 0x3FBB6676C0000000), !dbg !105
  %2934 = fmul <2 x float> %2119, splat (float 0x3FBB6676C0000000), !dbg !105
  %2935 = fmul <2 x float> %2118, splat (float 0x3FBB6676C0000000), !dbg !105
  %2936 = fmul <2 x float> %2117, splat (float 0x3FBB6676C0000000), !dbg !105
  %2937 = fmul <2 x float> %2116, splat (float 0x3FBB6676C0000000), !dbg !105
  %2938 = fmul <2 x float> %2115, splat (float 0x3FBB6676C0000000), !dbg !105
  %2939 = fmul <2 x float> %2114, splat (float 0x3FBB6676C0000000), !dbg !105
  %2940 = fmul <2 x float> %2113, splat (float 0x3FBB6676C0000000), !dbg !105
  %2941 = fmul <2 x float> %2709, splat (float 5.000000e-01), !dbg !109
  %2942 = fmul <2 x float> %2710, splat (float 5.000000e-01), !dbg !109
  %2943 = fmul <2 x float> %2711, splat (float 5.000000e-01), !dbg !109
  %2944 = fmul <2 x float> %2712, splat (float 5.000000e-01), !dbg !109
  %2945 = fmul <2 x float> %2713, splat (float 5.000000e-01), !dbg !109
  %2946 = fmul <2 x float> %2714, splat (float 5.000000e-01), !dbg !109
  %2947 = fmul <2 x float> %2715, splat (float 5.000000e-01), !dbg !109
  %2948 = fmul <2 x float> %2716, splat (float 5.000000e-01), !dbg !109
  %2949 = fmul <2 x float> %2717, splat (float 5.000000e-01), !dbg !109
  %2950 = fmul <2 x float> %2718, splat (float 5.000000e-01), !dbg !109
  %2951 = fmul <2 x float> %2719, splat (float 5.000000e-01), !dbg !109
  %2952 = fmul <2 x float> %2720, splat (float 5.000000e-01), !dbg !109
  %2953 = fmul <2 x float> %2721, splat (float 5.000000e-01), !dbg !109
  %2954 = fmul <2 x float> %2722, splat (float 5.000000e-01), !dbg !109
  %2955 = fmul <2 x float> %2723, splat (float 5.000000e-01), !dbg !109
  %2956 = fmul <2 x float> %2724, splat (float 5.000000e-01), !dbg !109
  %2957 = fsub <2 x float> splat (float 1.000000e+00), %2909, !dbg !103
  %2958 = fmul <2 x float> %2693, %2957, !dbg !104
  %2959 = fmul <2 x float> %2128, %2925, !dbg !106
  %2960 = fadd <2 x float> %2959, splat (float 0x3FE9884540000000), !dbg !107
  %2961 = fmul <2 x float> %2960, %2958, !dbg !108
  %2962 = fadd <2 x float> %2941, %2961, !dbg !110
  %2963 = insertelement <2 x float> poison, float %20, i64 0, !dbg !75
  %2964 = shufflevector <2 x float> %2963, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !75
  %2965 = fmul <2 x float> %2964, %2962, !dbg !75
  %2966 = fmul <2 x float> %2965, %2276, !dbg !111
  %2967 = fsub <2 x float> splat (float 1.000000e+00), %2910, !dbg !103
  %2968 = fmul <2 x float> %2694, %2967, !dbg !104
  %2969 = fmul <2 x float> %2127, %2926, !dbg !106
  %2970 = fadd <2 x float> %2969, splat (float 0x3FE9884540000000), !dbg !107
  %2971 = fmul <2 x float> %2970, %2968, !dbg !108
  %2972 = fadd <2 x float> %2942, %2971, !dbg !110
  %2973 = fmul <2 x float> %2964, %2972, !dbg !75
  %2974 = fmul <2 x float> %2973, %2275, !dbg !111
  %2975 = fsub <2 x float> splat (float 1.000000e+00), %2911, !dbg !103
  %2976 = fmul <2 x float> %2695, %2975, !dbg !104
  %2977 = fmul <2 x float> %2126, %2927, !dbg !106
  %2978 = fadd <2 x float> %2977, splat (float 0x3FE9884540000000), !dbg !107
  %2979 = fmul <2 x float> %2978, %2976, !dbg !108
  %2980 = fadd <2 x float> %2943, %2979, !dbg !110
  %2981 = fmul <2 x float> %2964, %2980, !dbg !75
  %2982 = fmul <2 x float> %2981, %2274, !dbg !111
  %2983 = fsub <2 x float> splat (float 1.000000e+00), %2912, !dbg !103
  %2984 = fmul <2 x float> %2696, %2983, !dbg !104
  %2985 = fmul <2 x float> %2125, %2928, !dbg !106
  %2986 = fadd <2 x float> %2985, splat (float 0x3FE9884540000000), !dbg !107
  %2987 = fmul <2 x float> %2986, %2984, !dbg !108
  %2988 = fadd <2 x float> %2944, %2987, !dbg !110
  %2989 = fmul <2 x float> %2964, %2988, !dbg !75
  %2990 = fmul <2 x float> %2989, %2273, !dbg !111
  %2991 = fsub <2 x float> splat (float 1.000000e+00), %2913, !dbg !103
  %2992 = fmul <2 x float> %2697, %2991, !dbg !104
  %2993 = fmul <2 x float> %2124, %2929, !dbg !106
  %2994 = fadd <2 x float> %2993, splat (float 0x3FE9884540000000), !dbg !107
  %2995 = fmul <2 x float> %2994, %2992, !dbg !108
  %2996 = fadd <2 x float> %2945, %2995, !dbg !110
  %2997 = fmul <2 x float> %2964, %2996, !dbg !75
  %2998 = fmul <2 x float> %2997, %2272, !dbg !111
  %2999 = fsub <2 x float> splat (float 1.000000e+00), %2914, !dbg !103
  %3000 = fmul <2 x float> %2698, %2999, !dbg !104
  %3001 = fmul <2 x float> %2123, %2930, !dbg !106
  %3002 = fadd <2 x float> %3001, splat (float 0x3FE9884540000000), !dbg !107
  %3003 = fmul <2 x float> %3002, %3000, !dbg !108
  %3004 = fadd <2 x float> %2946, %3003, !dbg !110
  %3005 = fmul <2 x float> %2964, %3004, !dbg !75
  %3006 = fmul <2 x float> %3005, %2271, !dbg !111
  %3007 = fsub <2 x float> splat (float 1.000000e+00), %2915, !dbg !103
  %3008 = fmul <2 x float> %2699, %3007, !dbg !104
  %3009 = fmul <2 x float> %2122, %2931, !dbg !106
  %3010 = fadd <2 x float> %3009, splat (float 0x3FE9884540000000), !dbg !107
  %3011 = fmul <2 x float> %3010, %3008, !dbg !108
  %3012 = fadd <2 x float> %2947, %3011, !dbg !110
  %3013 = fmul <2 x float> %2964, %3012, !dbg !75
  %3014 = fmul <2 x float> %3013, %2270, !dbg !111
  %3015 = fsub <2 x float> splat (float 1.000000e+00), %2916, !dbg !103
  %3016 = fmul <2 x float> %2700, %3015, !dbg !104
  %3017 = fmul <2 x float> %2121, %2932, !dbg !106
  %3018 = fadd <2 x float> %3017, splat (float 0x3FE9884540000000), !dbg !107
  %3019 = fmul <2 x float> %3018, %3016, !dbg !108
  %3020 = fadd <2 x float> %2948, %3019, !dbg !110
  %3021 = fmul <2 x float> %2964, %3020, !dbg !75
  %3022 = fmul <2 x float> %3021, %2269, !dbg !111
  %3023 = fsub <2 x float> splat (float 1.000000e+00), %2917, !dbg !103
  %3024 = fmul <2 x float> %2701, %3023, !dbg !104
  %3025 = fmul <2 x float> %2120, %2933, !dbg !106
  %3026 = fadd <2 x float> %3025, splat (float 0x3FE9884540000000), !dbg !107
  %3027 = fmul <2 x float> %3026, %3024, !dbg !108
  %3028 = fadd <2 x float> %2949, %3027, !dbg !110
  %3029 = fmul <2 x float> %2964, %3028, !dbg !75
  %3030 = fmul <2 x float> %3029, %2268, !dbg !111
  %3031 = fsub <2 x float> splat (float 1.000000e+00), %2918, !dbg !103
  %3032 = fmul <2 x float> %2702, %3031, !dbg !104
  %3033 = fmul <2 x float> %2119, %2934, !dbg !106
  %3034 = fadd <2 x float> %3033, splat (float 0x3FE9884540000000), !dbg !107
  %3035 = fmul <2 x float> %3034, %3032, !dbg !108
  %3036 = fadd <2 x float> %2950, %3035, !dbg !110
  %3037 = fmul <2 x float> %2964, %3036, !dbg !75
  %3038 = fmul <2 x float> %3037, %2267, !dbg !111
  %3039 = fsub <2 x float> splat (float 1.000000e+00), %2919, !dbg !103
  %3040 = fmul <2 x float> %2703, %3039, !dbg !104
  %3041 = fmul <2 x float> %2118, %2935, !dbg !106
  %3042 = fadd <2 x float> %3041, splat (float 0x3FE9884540000000), !dbg !107
  %3043 = fmul <2 x float> %3042, %3040, !dbg !108
  %3044 = fadd <2 x float> %2951, %3043, !dbg !110
  %3045 = fmul <2 x float> %2964, %3044, !dbg !75
  %3046 = fmul <2 x float> %3045, %2266, !dbg !111
  %3047 = fsub <2 x float> splat (float 1.000000e+00), %2920, !dbg !103
  %3048 = fmul <2 x float> %2704, %3047, !dbg !104
  %3049 = fmul <2 x float> %2117, %2936, !dbg !106
  %3050 = fadd <2 x float> %3049, splat (float 0x3FE9884540000000), !dbg !107
  %3051 = fmul <2 x float> %3050, %3048, !dbg !108
  %3052 = fadd <2 x float> %2952, %3051, !dbg !110
  %3053 = fmul <2 x float> %2964, %3052, !dbg !75
  %3054 = fmul <2 x float> %3053, %2265, !dbg !111
  %3055 = fsub <2 x float> splat (float 1.000000e+00), %2921, !dbg !103
  %3056 = fmul <2 x float> %2705, %3055, !dbg !104
  %3057 = fmul <2 x float> %2116, %2937, !dbg !106
  %3058 = fadd <2 x float> %3057, splat (float 0x3FE9884540000000), !dbg !107
  %3059 = fmul <2 x float> %3058, %3056, !dbg !108
  %3060 = fadd <2 x float> %2953, %3059, !dbg !110
  %3061 = fmul <2 x float> %2964, %3060, !dbg !75
  %3062 = fmul <2 x float> %3061, %2264, !dbg !111
  %3063 = fsub <2 x float> splat (float 1.000000e+00), %2922, !dbg !103
  %3064 = fmul <2 x float> %2706, %3063, !dbg !104
  %3065 = fmul <2 x float> %2115, %2938, !dbg !106
  %3066 = fadd <2 x float> %3065, splat (float 0x3FE9884540000000), !dbg !107
  %3067 = fmul <2 x float> %3066, %3064, !dbg !108
  %3068 = fadd <2 x float> %2954, %3067, !dbg !110
  %3069 = fmul <2 x float> %2964, %3068, !dbg !75
  %3070 = fmul <2 x float> %3069, %2263, !dbg !111
  %3071 = fsub <2 x float> splat (float 1.000000e+00), %2923, !dbg !103
  %3072 = fmul <2 x float> %2707, %3071, !dbg !104
  %3073 = fmul <2 x float> %2114, %2939, !dbg !106
  %3074 = fadd <2 x float> %3073, splat (float 0x3FE9884540000000), !dbg !107
  %3075 = fmul <2 x float> %3074, %3072, !dbg !108
  %3076 = fadd <2 x float> %2955, %3075, !dbg !110
  %3077 = fmul <2 x float> %2964, %3076, !dbg !75
  %3078 = fmul <2 x float> %3077, %2262, !dbg !111
  %3079 = fsub <2 x float> splat (float 1.000000e+00), %2924, !dbg !103
  %3080 = fmul <2 x float> %2708, %3079, !dbg !104
  %3081 = fmul <2 x float> %2113, %2940, !dbg !106
  %3082 = fadd <2 x float> %3081, splat (float 0x3FE9884540000000), !dbg !107
  %3083 = fmul <2 x float> %3082, %3080, !dbg !108
  %3084 = fadd <2 x float> %2956, %3083, !dbg !110
  %3085 = fmul <2 x float> %2964, %3084, !dbg !75
  %3086 = fmul <2 x float> %3085, %2261, !dbg !111
  %3087 = fptrunc <2 x float> %2966 to <2 x bfloat>, !dbg !112
  %3088 = fptrunc <2 x float> %2974 to <2 x bfloat>, !dbg !112
  %3089 = fptrunc <2 x float> %2982 to <2 x bfloat>, !dbg !112
  %3090 = fptrunc <2 x float> %2990 to <2 x bfloat>, !dbg !112
  %3091 = fptrunc <2 x float> %2998 to <2 x bfloat>, !dbg !112
  %3092 = fptrunc <2 x float> %3006 to <2 x bfloat>, !dbg !112
  %3093 = fptrunc <2 x float> %3014 to <2 x bfloat>, !dbg !112
  %3094 = fptrunc <2 x float> %3022 to <2 x bfloat>, !dbg !112
  %3095 = fptrunc <2 x float> %3030 to <2 x bfloat>, !dbg !112
  %3096 = fptrunc <2 x float> %3038 to <2 x bfloat>, !dbg !112
  %3097 = fptrunc <2 x float> %3046 to <2 x bfloat>, !dbg !112
  %3098 = fptrunc <2 x float> %3054 to <2 x bfloat>, !dbg !112
  %3099 = fptrunc <2 x float> %3062 to <2 x bfloat>, !dbg !112
  %3100 = fptrunc <2 x float> %3070 to <2 x bfloat>, !dbg !112
  %3101 = fptrunc <2 x float> %3078 to <2 x bfloat>, !dbg !112
  %3102 = fptrunc <2 x float> %3086 to <2 x bfloat>, !dbg !112
  %3103 = bitcast <2 x bfloat> %3087 to i32, !dbg !112
  %3104 = bitcast <2 x bfloat> %3088 to i32, !dbg !112
  %3105 = bitcast <2 x bfloat> %3089 to i32, !dbg !112
  %3106 = bitcast <2 x bfloat> %3090 to i32, !dbg !112
  %3107 = bitcast <2 x bfloat> %3091 to i32, !dbg !112
  %3108 = bitcast <2 x bfloat> %3092 to i32, !dbg !112
  %3109 = bitcast <2 x bfloat> %3093 to i32, !dbg !112
  %3110 = bitcast <2 x bfloat> %3094 to i32, !dbg !112
  %3111 = bitcast <2 x bfloat> %3095 to i32, !dbg !112
  %3112 = bitcast <2 x bfloat> %3096 to i32, !dbg !112
  %3113 = bitcast <2 x bfloat> %3097 to i32, !dbg !112
  %3114 = bitcast <2 x bfloat> %3098 to i32, !dbg !112
  %3115 = bitcast <2 x bfloat> %3099 to i32, !dbg !112
  %3116 = bitcast <2 x bfloat> %3100 to i32, !dbg !112
  %3117 = bitcast <2 x bfloat> %3101 to i32, !dbg !112
  %3118 = bitcast <2 x bfloat> %3102 to i32, !dbg !112
  %3119 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3103, i32 %3105, i1 false, i1 false), !dbg !112
  %3120 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3104, i32 %3106, i1 false, i1 false), !dbg !112
  %3121 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3107, i32 %3109, i1 false, i1 false), !dbg !112
  %3122 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3108, i32 %3110, i1 false, i1 false), !dbg !112
  %3123 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3111, i32 %3113, i1 false, i1 false), !dbg !112
  %3124 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3112, i32 %3114, i1 false, i1 false), !dbg !112
  %3125 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3115, i32 %3117, i1 false, i1 false), !dbg !112
  %3126 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3116, i32 %3118, i1 false, i1 false), !dbg !112
  br i1 %228, label %3127, label %._crit_edge257, !dbg !71

3127:                                             ; preds = %2876
  %3128 = extractvalue { i32, i32 } %3126, 1, !dbg !112
  %3129 = bitcast i32 %3128 to <2 x bfloat>, !dbg !112
  %3130 = shufflevector <2 x bfloat> %3129, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3131 = extractvalue { i32, i32 } %3125, 1, !dbg !112
  %3132 = bitcast i32 %3131 to <2 x bfloat>, !dbg !112
  %3133 = shufflevector <2 x bfloat> %3132, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3134 = extractvalue { i32, i32 } %3126, 0, !dbg !112
  %3135 = bitcast i32 %3134 to <2 x bfloat>, !dbg !112
  %3136 = extractvalue { i32, i32 } %3125, 0, !dbg !112
  %3137 = bitcast i32 %3136 to <2 x bfloat>, !dbg !112
  %3138 = extractvalue { i32, i32 } %3124, 1, !dbg !112
  %3139 = bitcast i32 %3138 to <2 x bfloat>, !dbg !112
  %3140 = shufflevector <2 x bfloat> %3139, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3141 = extractvalue { i32, i32 } %3123, 1, !dbg !112
  %3142 = bitcast i32 %3141 to <2 x bfloat>, !dbg !112
  %3143 = shufflevector <2 x bfloat> %3142, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3144 = extractvalue { i32, i32 } %3124, 0, !dbg !112
  %3145 = bitcast i32 %3144 to <2 x bfloat>, !dbg !112
  %3146 = extractvalue { i32, i32 } %3123, 0, !dbg !112
  %3147 = bitcast i32 %3146 to <2 x bfloat>, !dbg !112
  %3148 = extractvalue { i32, i32 } %3122, 1, !dbg !112
  %3149 = bitcast i32 %3148 to <2 x bfloat>, !dbg !112
  %3150 = shufflevector <2 x bfloat> %3149, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3151 = extractvalue { i32, i32 } %3121, 1, !dbg !112
  %3152 = bitcast i32 %3151 to <2 x bfloat>, !dbg !112
  %3153 = shufflevector <2 x bfloat> %3152, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3154 = extractvalue { i32, i32 } %3122, 0, !dbg !112
  %3155 = bitcast i32 %3154 to <2 x bfloat>, !dbg !112
  %3156 = extractvalue { i32, i32 } %3121, 0, !dbg !112
  %3157 = bitcast i32 %3156 to <2 x bfloat>, !dbg !112
  %3158 = extractvalue { i32, i32 } %3120, 1, !dbg !112
  %3159 = bitcast i32 %3158 to <2 x bfloat>, !dbg !112
  %3160 = shufflevector <2 x bfloat> %3159, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3161 = extractvalue { i32, i32 } %3119, 1, !dbg !112
  %3162 = bitcast i32 %3161 to <2 x bfloat>, !dbg !112
  %3163 = shufflevector <2 x bfloat> %3162, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3164 = extractvalue { i32, i32 } %3120, 0, !dbg !112
  %3165 = bitcast i32 %3164 to <2 x bfloat>, !dbg !112
  %3166 = extractvalue { i32, i32 } %3119, 0, !dbg !112
  %3167 = bitcast i32 %3166 to <2 x bfloat>, !dbg !112
  %3168 = shufflevector <2 x bfloat> %3167, <2 x bfloat> %3165, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %3169 = shufflevector <8 x bfloat> %3168, <8 x bfloat> %3163, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !71
  %3170 = shufflevector <8 x bfloat> %3169, <8 x bfloat> %3160, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !71
  %3171 = shufflevector <2 x bfloat> %3157, <2 x bfloat> %3155, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %3172 = shufflevector <8 x bfloat> %3171, <8 x bfloat> %3153, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !71
  %3173 = shufflevector <8 x bfloat> %3172, <8 x bfloat> %3150, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !71
  %3174 = shufflevector <2 x bfloat> %3147, <2 x bfloat> %3145, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %3175 = shufflevector <8 x bfloat> %3174, <8 x bfloat> %3143, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !71
  %3176 = shufflevector <8 x bfloat> %3175, <8 x bfloat> %3140, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !71
  %3177 = shufflevector <2 x bfloat> %3137, <2 x bfloat> %3135, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !71
  %3178 = shufflevector <8 x bfloat> %3177, <8 x bfloat> %3133, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !71
  %3179 = shufflevector <8 x bfloat> %3178, <8 x bfloat> %3130, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !71
  %3180 = insertelement <8 x bfloat> poison, bfloat %1876, i64 0, !dbg !71
  %3181 = insertelement <8 x bfloat> %3180, bfloat %1879, i64 1, !dbg !71
  %3182 = insertelement <8 x bfloat> %3181, bfloat %1900, i64 2, !dbg !71
  %3183 = insertelement <8 x bfloat> %3182, bfloat %1903, i64 3, !dbg !71
  %3184 = insertelement <8 x bfloat> %3183, bfloat %1924, i64 4, !dbg !71
  %3185 = insertelement <8 x bfloat> %3184, bfloat %1927, i64 5, !dbg !71
  %3186 = insertelement <8 x bfloat> %3185, bfloat %1948, i64 6, !dbg !71
  %3187 = insertelement <8 x bfloat> %3186, bfloat %1951, i64 7, !dbg !71
  %3188 = insertelement <8 x bfloat> poison, bfloat %1882, i64 0, !dbg !71
  %3189 = insertelement <8 x bfloat> %3188, bfloat %1885, i64 1, !dbg !71
  %3190 = insertelement <8 x bfloat> %3189, bfloat %1906, i64 2, !dbg !71
  %3191 = insertelement <8 x bfloat> %3190, bfloat %1909, i64 3, !dbg !71
  %3192 = insertelement <8 x bfloat> %3191, bfloat %1930, i64 4, !dbg !71
  %3193 = insertelement <8 x bfloat> %3192, bfloat %1933, i64 5, !dbg !71
  %3194 = insertelement <8 x bfloat> %3193, bfloat %1954, i64 6, !dbg !71
  %3195 = insertelement <8 x bfloat> %3194, bfloat %1957, i64 7, !dbg !71
  %3196 = insertelement <8 x bfloat> poison, bfloat %1888, i64 0, !dbg !71
  %3197 = insertelement <8 x bfloat> %3196, bfloat %1891, i64 1, !dbg !71
  %3198 = insertelement <8 x bfloat> %3197, bfloat %1912, i64 2, !dbg !71
  %3199 = insertelement <8 x bfloat> %3198, bfloat %1915, i64 3, !dbg !71
  %3200 = insertelement <8 x bfloat> %3199, bfloat %1936, i64 4, !dbg !71
  %3201 = insertelement <8 x bfloat> %3200, bfloat %1939, i64 5, !dbg !71
  %3202 = insertelement <8 x bfloat> %3201, bfloat %1960, i64 6, !dbg !71
  %3203 = insertelement <8 x bfloat> %3202, bfloat %1963, i64 7, !dbg !71
  %3204 = insertelement <8 x bfloat> poison, bfloat %1894, i64 0, !dbg !71
  %3205 = insertelement <8 x bfloat> %3204, bfloat %1897, i64 1, !dbg !71
  %3206 = insertelement <8 x bfloat> %3205, bfloat %1918, i64 2, !dbg !71
  %3207 = insertelement <8 x bfloat> %3206, bfloat %1921, i64 3, !dbg !71
  %3208 = insertelement <8 x bfloat> %3207, bfloat %1942, i64 4, !dbg !71
  %3209 = insertelement <8 x bfloat> %3208, bfloat %1945, i64 5, !dbg !71
  %3210 = insertelement <8 x bfloat> %3209, bfloat %1966, i64 6, !dbg !71
  %3211 = insertelement <8 x bfloat> %3210, bfloat %1969, i64 7, !dbg !71
  %3212 = insertelement <8 x bfloat> poison, bfloat %1972, i64 0, !dbg !71
  %3213 = insertelement <8 x bfloat> %3212, bfloat %1975, i64 1, !dbg !71
  %3214 = insertelement <8 x bfloat> %3213, bfloat %1996, i64 2, !dbg !71
  %3215 = insertelement <8 x bfloat> %3214, bfloat %1999, i64 3, !dbg !71
  %3216 = insertelement <8 x bfloat> %3215, bfloat %2020, i64 4, !dbg !71
  %3217 = insertelement <8 x bfloat> %3216, bfloat %2023, i64 5, !dbg !71
  %3218 = insertelement <8 x bfloat> %3217, bfloat %2044, i64 6, !dbg !71
  %3219 = insertelement <8 x bfloat> %3218, bfloat %2047, i64 7, !dbg !71
  %3220 = insertelement <8 x bfloat> poison, bfloat %1978, i64 0, !dbg !71
  %3221 = insertelement <8 x bfloat> %3220, bfloat %1981, i64 1, !dbg !71
  %3222 = insertelement <8 x bfloat> %3221, bfloat %2002, i64 2, !dbg !71
  %3223 = insertelement <8 x bfloat> %3222, bfloat %2005, i64 3, !dbg !71
  %3224 = insertelement <8 x bfloat> %3223, bfloat %2026, i64 4, !dbg !71
  %3225 = insertelement <8 x bfloat> %3224, bfloat %2029, i64 5, !dbg !71
  %3226 = insertelement <8 x bfloat> %3225, bfloat %2050, i64 6, !dbg !71
  %3227 = insertelement <8 x bfloat> %3226, bfloat %2053, i64 7, !dbg !71
  %3228 = insertelement <8 x bfloat> poison, bfloat %1984, i64 0, !dbg !71
  %3229 = insertelement <8 x bfloat> %3228, bfloat %1987, i64 1, !dbg !71
  %3230 = insertelement <8 x bfloat> %3229, bfloat %2008, i64 2, !dbg !71
  %3231 = insertelement <8 x bfloat> %3230, bfloat %2011, i64 3, !dbg !71
  %3232 = insertelement <8 x bfloat> %3231, bfloat %2032, i64 4, !dbg !71
  %3233 = insertelement <8 x bfloat> %3232, bfloat %2035, i64 5, !dbg !71
  %3234 = insertelement <8 x bfloat> %3233, bfloat %2056, i64 6, !dbg !71
  %3235 = insertelement <8 x bfloat> %3234, bfloat %2059, i64 7, !dbg !71
  %3236 = insertelement <8 x bfloat> poison, bfloat %1990, i64 0, !dbg !71
  %3237 = insertelement <8 x bfloat> %3236, bfloat %1993, i64 1, !dbg !71
  %3238 = insertelement <8 x bfloat> %3237, bfloat %2014, i64 2, !dbg !71
  %3239 = insertelement <8 x bfloat> %3238, bfloat %2017, i64 3, !dbg !71
  %3240 = insertelement <8 x bfloat> %3239, bfloat %2038, i64 4, !dbg !71
  %3241 = insertelement <8 x bfloat> %3240, bfloat %2041, i64 5, !dbg !71
  %3242 = insertelement <8 x bfloat> %3241, bfloat %2062, i64 6, !dbg !71
  %3243 = insertelement <8 x bfloat> %3242, bfloat %2065, i64 7, !dbg !71
  %3244 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %1784, i64 0, !dbg !71
  %3245 = insertelement <16 x float> %3244, float %1785, i64 1, !dbg !71
  %3246 = insertelement <16 x float> %3245, float %1786, i64 2, !dbg !71
  %3247 = insertelement <16 x float> %3246, float %1787, i64 3, !dbg !71
  %3248 = insertelement <16 x float> %3247, float %1788, i64 4, !dbg !71
  %3249 = insertelement <16 x float> %3248, float %1789, i64 5, !dbg !71
  %3250 = insertelement <16 x float> %3249, float %1790, i64 6, !dbg !71
  %3251 = insertelement <16 x float> %3250, float %1791, i64 7, !dbg !71
  %3252 = insertelement <16 x float> %3251, float %1792, i64 8, !dbg !71
  %3253 = insertelement <16 x float> %3252, float %1793, i64 9, !dbg !71
  %3254 = insertelement <16 x float> %3253, float %1794, i64 10, !dbg !71
  %3255 = insertelement <16 x float> %3254, float %1795, i64 11, !dbg !71
  %3256 = insertelement <16 x float> %3255, float %1796, i64 12, !dbg !71
  %3257 = insertelement <16 x float> %3256, float %1797, i64 13, !dbg !71
  %3258 = insertelement <16 x float> %3257, float %1798, i64 14, !dbg !71
  %3259 = insertelement <16 x float> %3258, float %1799, i64 15, !dbg !71
  %3260 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %3187, <8 x bfloat> %3170, <16 x float> %3259, i32 0, i32 0, i32 0), !dbg !71
  %3261 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %3195, <8 x bfloat> %3173, <16 x float> %3260, i32 0, i32 0, i32 0), !dbg !71
  %3262 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %3203, <8 x bfloat> %3176, <16 x float> %3261, i32 0, i32 0, i32 0), !dbg !71
  %3263 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %3211, <8 x bfloat> %3179, <16 x float> %3262, i32 0, i32 0, i32 0), !dbg !71
  %3264 = extractelement <16 x float> %3263, i64 0, !dbg !71
  %3265 = extractelement <16 x float> %3263, i64 1, !dbg !71
  %3266 = extractelement <16 x float> %3263, i64 2, !dbg !71
  %3267 = extractelement <16 x float> %3263, i64 3, !dbg !71
  %3268 = extractelement <16 x float> %3263, i64 4, !dbg !71
  %3269 = extractelement <16 x float> %3263, i64 5, !dbg !71
  %3270 = extractelement <16 x float> %3263, i64 6, !dbg !71
  %3271 = extractelement <16 x float> %3263, i64 7, !dbg !71
  %3272 = extractelement <16 x float> %3263, i64 8, !dbg !71
  %3273 = extractelement <16 x float> %3263, i64 9, !dbg !71
  %3274 = extractelement <16 x float> %3263, i64 10, !dbg !71
  %3275 = extractelement <16 x float> %3263, i64 11, !dbg !71
  %3276 = extractelement <16 x float> %3263, i64 12, !dbg !71
  %3277 = extractelement <16 x float> %3263, i64 13, !dbg !71
  %3278 = extractelement <16 x float> %3263, i64 14, !dbg !71
  %3279 = extractelement <16 x float> %3263, i64 15, !dbg !71
  %3280 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %1800, i64 0, !dbg !71
  %3281 = insertelement <16 x float> %3280, float %1801, i64 1, !dbg !71
  %3282 = insertelement <16 x float> %3281, float %1802, i64 2, !dbg !71
  %3283 = insertelement <16 x float> %3282, float %1803, i64 3, !dbg !71
  %3284 = insertelement <16 x float> %3283, float %1804, i64 4, !dbg !71
  %3285 = insertelement <16 x float> %3284, float %1805, i64 5, !dbg !71
  %3286 = insertelement <16 x float> %3285, float %1806, i64 6, !dbg !71
  %3287 = insertelement <16 x float> %3286, float %1807, i64 7, !dbg !71
  %3288 = insertelement <16 x float> %3287, float %1808, i64 8, !dbg !71
  %3289 = insertelement <16 x float> %3288, float %1809, i64 9, !dbg !71
  %3290 = insertelement <16 x float> %3289, float %1810, i64 10, !dbg !71
  %3291 = insertelement <16 x float> %3290, float %1811, i64 11, !dbg !71
  %3292 = insertelement <16 x float> %3291, float %1812, i64 12, !dbg !71
  %3293 = insertelement <16 x float> %3292, float %1813, i64 13, !dbg !71
  %3294 = insertelement <16 x float> %3293, float %1814, i64 14, !dbg !71
  %3295 = insertelement <16 x float> %3294, float %1815, i64 15, !dbg !71
  %3296 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %3219, <8 x bfloat> %3170, <16 x float> %3295, i32 0, i32 0, i32 0), !dbg !71
  %3297 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %3227, <8 x bfloat> %3173, <16 x float> %3296, i32 0, i32 0, i32 0), !dbg !71
  %3298 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %3235, <8 x bfloat> %3176, <16 x float> %3297, i32 0, i32 0, i32 0), !dbg !71
  %3299 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %3243, <8 x bfloat> %3179, <16 x float> %3298, i32 0, i32 0, i32 0), !dbg !71
  %3300 = extractelement <16 x float> %3299, i64 0, !dbg !71
  %3301 = extractelement <16 x float> %3299, i64 1, !dbg !71
  %3302 = extractelement <16 x float> %3299, i64 2, !dbg !71
  %3303 = extractelement <16 x float> %3299, i64 3, !dbg !71
  %3304 = extractelement <16 x float> %3299, i64 4, !dbg !71
  %3305 = extractelement <16 x float> %3299, i64 5, !dbg !71
  %3306 = extractelement <16 x float> %3299, i64 6, !dbg !71
  %3307 = extractelement <16 x float> %3299, i64 7, !dbg !71
  %3308 = extractelement <16 x float> %3299, i64 8, !dbg !71
  %3309 = extractelement <16 x float> %3299, i64 9, !dbg !71
  %3310 = extractelement <16 x float> %3299, i64 10, !dbg !71
  %3311 = extractelement <16 x float> %3299, i64 11, !dbg !71
  %3312 = extractelement <16 x float> %3299, i64 12, !dbg !71
  %3313 = extractelement <16 x float> %3299, i64 13, !dbg !71
  %3314 = extractelement <16 x float> %3299, i64 14, !dbg !71
  %3315 = extractelement <16 x float> %3299, i64 15, !dbg !71
  br label %._crit_edge257, !dbg !71

._crit_edge257:                                   ; preds = %2876, %3127
  %3316 = phi float [ %2908, %3127 ], [ %1847, %2876 ], !dbg !67
  %3317 = phi float [ %2907, %3127 ], [ %1846, %2876 ], !dbg !67
  %3318 = phi float [ %2906, %3127 ], [ %1845, %2876 ], !dbg !67
  %3319 = phi float [ %2905, %3127 ], [ %1844, %2876 ], !dbg !67
  %3320 = phi float [ %2904, %3127 ], [ %1843, %2876 ], !dbg !67
  %3321 = phi float [ %2903, %3127 ], [ %1842, %2876 ], !dbg !67
  %3322 = phi float [ %2902, %3127 ], [ %1841, %2876 ], !dbg !67
  %3323 = phi float [ %2901, %3127 ], [ %1840, %2876 ], !dbg !67
  %3324 = phi float [ %2900, %3127 ], [ %1839, %2876 ], !dbg !67
  %3325 = phi float [ %2899, %3127 ], [ %1838, %2876 ], !dbg !67
  %3326 = phi float [ %2898, %3127 ], [ %1837, %2876 ], !dbg !67
  %3327 = phi float [ %2897, %3127 ], [ %1836, %2876 ], !dbg !67
  %3328 = phi float [ %2896, %3127 ], [ %1835, %2876 ], !dbg !67
  %3329 = phi float [ %2895, %3127 ], [ %1834, %2876 ], !dbg !67
  %3330 = phi float [ %2894, %3127 ], [ %1833, %2876 ], !dbg !67
  %3331 = phi float [ %2893, %3127 ], [ %1832, %2876 ], !dbg !67
  %3332 = phi float [ %2892, %3127 ], [ %1831, %2876 ], !dbg !67
  %3333 = phi float [ %2891, %3127 ], [ %1830, %2876 ], !dbg !67
  %3334 = phi float [ %2890, %3127 ], [ %1829, %2876 ], !dbg !67
  %3335 = phi float [ %2889, %3127 ], [ %1828, %2876 ], !dbg !67
  %3336 = phi float [ %2888, %3127 ], [ %1827, %2876 ], !dbg !67
  %3337 = phi float [ %2887, %3127 ], [ %1826, %2876 ], !dbg !67
  %3338 = phi float [ %2886, %3127 ], [ %1825, %2876 ], !dbg !67
  %3339 = phi float [ %2885, %3127 ], [ %1824, %2876 ], !dbg !67
  %3340 = phi float [ %2884, %3127 ], [ %1823, %2876 ], !dbg !67
  %3341 = phi float [ %2883, %3127 ], [ %1822, %2876 ], !dbg !67
  %3342 = phi float [ %2882, %3127 ], [ %1821, %2876 ], !dbg !67
  %3343 = phi float [ %2881, %3127 ], [ %1820, %2876 ], !dbg !67
  %3344 = phi float [ %2880, %3127 ], [ %1819, %2876 ], !dbg !67
  %3345 = phi float [ %2879, %3127 ], [ %1818, %2876 ], !dbg !67
  %3346 = phi float [ %2878, %3127 ], [ %1817, %2876 ], !dbg !67
  %3347 = phi float [ %2877, %3127 ], [ %1816, %2876 ], !dbg !67
  %3348 = phi float [ %3315, %3127 ], [ %1815, %2876 ], !dbg !67
  %3349 = phi float [ %3314, %3127 ], [ %1814, %2876 ], !dbg !67
  %3350 = phi float [ %3313, %3127 ], [ %1813, %2876 ], !dbg !67
  %3351 = phi float [ %3312, %3127 ], [ %1812, %2876 ], !dbg !67
  %3352 = phi float [ %3311, %3127 ], [ %1811, %2876 ], !dbg !67
  %3353 = phi float [ %3310, %3127 ], [ %1810, %2876 ], !dbg !67
  %3354 = phi float [ %3309, %3127 ], [ %1809, %2876 ], !dbg !67
  %3355 = phi float [ %3308, %3127 ], [ %1808, %2876 ], !dbg !67
  %3356 = phi float [ %3307, %3127 ], [ %1807, %2876 ], !dbg !67
  %3357 = phi float [ %3306, %3127 ], [ %1806, %2876 ], !dbg !67
  %3358 = phi float [ %3305, %3127 ], [ %1805, %2876 ], !dbg !67
  %3359 = phi float [ %3304, %3127 ], [ %1804, %2876 ], !dbg !67
  %3360 = phi float [ %3303, %3127 ], [ %1803, %2876 ], !dbg !67
  %3361 = phi float [ %3302, %3127 ], [ %1802, %2876 ], !dbg !67
  %3362 = phi float [ %3301, %3127 ], [ %1801, %2876 ], !dbg !67
  %3363 = phi float [ %3300, %3127 ], [ %1800, %2876 ], !dbg !67
  %3364 = phi float [ %3279, %3127 ], [ %1799, %2876 ], !dbg !67
  %3365 = phi float [ %3278, %3127 ], [ %1798, %2876 ], !dbg !67
  %3366 = phi float [ %3277, %3127 ], [ %1797, %2876 ], !dbg !67
  %3367 = phi float [ %3276, %3127 ], [ %1796, %2876 ], !dbg !67
  %3368 = phi float [ %3275, %3127 ], [ %1795, %2876 ], !dbg !67
  %3369 = phi float [ %3274, %3127 ], [ %1794, %2876 ], !dbg !67
  %3370 = phi float [ %3273, %3127 ], [ %1793, %2876 ], !dbg !67
  %3371 = phi float [ %3272, %3127 ], [ %1792, %2876 ], !dbg !67
  %3372 = phi float [ %3271, %3127 ], [ %1791, %2876 ], !dbg !67
  %3373 = phi float [ %3270, %3127 ], [ %1790, %2876 ], !dbg !67
  %3374 = phi float [ %3269, %3127 ], [ %1789, %2876 ], !dbg !67
  %3375 = phi float [ %3268, %3127 ], [ %1788, %2876 ], !dbg !67
  %3376 = phi float [ %3267, %3127 ], [ %1787, %2876 ], !dbg !67
  %3377 = phi float [ %3266, %3127 ], [ %1786, %2876 ], !dbg !67
  %3378 = phi float [ %3265, %3127 ], [ %1785, %2876 ], !dbg !67
  %3379 = phi float [ %3264, %3127 ], [ %1784, %2876 ], !dbg !67
  %3380 = mul i32 %11, %93, !dbg !113
  %3381 = getelementptr bfloat, ptr addrspace(1) %87, i64 %119, !dbg !113
  %3382 = add i32 %3380, %103, !dbg !114
  %3383 = add i32 %104, %3380, !dbg !114
  %3384 = add i32 %105, %3380, !dbg !114
  %3385 = add i32 %106, %3380, !dbg !114
  %3386 = insertelement <2 x float> poison, float %3347, i64 0, !dbg !115
  %3387 = insertelement <2 x float> %3386, float %3346, i64 1, !dbg !115
  %3388 = fptrunc <2 x float> %3387 to <2 x bfloat>, !dbg !115
  %3389 = insertelement <2 x float> poison, float %3345, i64 0, !dbg !115
  %3390 = insertelement <2 x float> %3389, float %3344, i64 1, !dbg !115
  %3391 = fptrunc <2 x float> %3390 to <2 x bfloat>, !dbg !115
  %3392 = insertelement <2 x float> poison, float %3343, i64 0, !dbg !115
  %3393 = insertelement <2 x float> %3392, float %3342, i64 1, !dbg !115
  %3394 = fptrunc <2 x float> %3393 to <2 x bfloat>, !dbg !115
  %3395 = insertelement <2 x float> poison, float %3341, i64 0, !dbg !115
  %3396 = insertelement <2 x float> %3395, float %3340, i64 1, !dbg !115
  %3397 = fptrunc <2 x float> %3396 to <2 x bfloat>, !dbg !115
  %3398 = insertelement <2 x float> poison, float %3339, i64 0, !dbg !115
  %3399 = insertelement <2 x float> %3398, float %3338, i64 1, !dbg !115
  %3400 = fptrunc <2 x float> %3399 to <2 x bfloat>, !dbg !115
  %3401 = insertelement <2 x float> poison, float %3337, i64 0, !dbg !115
  %3402 = insertelement <2 x float> %3401, float %3336, i64 1, !dbg !115
  %3403 = fptrunc <2 x float> %3402 to <2 x bfloat>, !dbg !115
  %3404 = insertelement <2 x float> poison, float %3335, i64 0, !dbg !115
  %3405 = insertelement <2 x float> %3404, float %3334, i64 1, !dbg !115
  %3406 = fptrunc <2 x float> %3405 to <2 x bfloat>, !dbg !115
  %3407 = insertelement <2 x float> poison, float %3333, i64 0, !dbg !115
  %3408 = insertelement <2 x float> %3407, float %3332, i64 1, !dbg !115
  %3409 = fptrunc <2 x float> %3408 to <2 x bfloat>, !dbg !115
  %3410 = insertelement <2 x float> poison, float %3331, i64 0, !dbg !115
  %3411 = insertelement <2 x float> %3410, float %3330, i64 1, !dbg !115
  %3412 = fptrunc <2 x float> %3411 to <2 x bfloat>, !dbg !115
  %3413 = insertelement <2 x float> poison, float %3329, i64 0, !dbg !115
  %3414 = insertelement <2 x float> %3413, float %3328, i64 1, !dbg !115
  %3415 = fptrunc <2 x float> %3414 to <2 x bfloat>, !dbg !115
  %3416 = insertelement <2 x float> poison, float %3327, i64 0, !dbg !115
  %3417 = insertelement <2 x float> %3416, float %3326, i64 1, !dbg !115
  %3418 = fptrunc <2 x float> %3417 to <2 x bfloat>, !dbg !115
  %3419 = insertelement <2 x float> poison, float %3325, i64 0, !dbg !115
  %3420 = insertelement <2 x float> %3419, float %3324, i64 1, !dbg !115
  %3421 = fptrunc <2 x float> %3420 to <2 x bfloat>, !dbg !115
  %3422 = insertelement <2 x float> poison, float %3323, i64 0, !dbg !115
  %3423 = insertelement <2 x float> %3422, float %3322, i64 1, !dbg !115
  %3424 = fptrunc <2 x float> %3423 to <2 x bfloat>, !dbg !115
  %3425 = insertelement <2 x float> poison, float %3321, i64 0, !dbg !115
  %3426 = insertelement <2 x float> %3425, float %3320, i64 1, !dbg !115
  %3427 = fptrunc <2 x float> %3426 to <2 x bfloat>, !dbg !115
  %3428 = insertelement <2 x float> poison, float %3319, i64 0, !dbg !115
  %3429 = insertelement <2 x float> %3428, float %3318, i64 1, !dbg !115
  %3430 = fptrunc <2 x float> %3429 to <2 x bfloat>, !dbg !115
  %3431 = insertelement <2 x float> poison, float %3317, i64 0, !dbg !115
  %3432 = insertelement <2 x float> %3431, float %3316, i64 1, !dbg !115
  %3433 = fptrunc <2 x float> %3432 to <2 x bfloat>, !dbg !115
  %3434 = bitcast <2 x bfloat> %3388 to i32, !dbg !115
  %3435 = bitcast <2 x bfloat> %3391 to i32, !dbg !115
  %3436 = bitcast <2 x bfloat> %3394 to i32, !dbg !115
  %3437 = bitcast <2 x bfloat> %3397 to i32, !dbg !115
  %3438 = bitcast <2 x bfloat> %3400 to i32, !dbg !115
  %3439 = bitcast <2 x bfloat> %3403 to i32, !dbg !115
  %3440 = bitcast <2 x bfloat> %3406 to i32, !dbg !115
  %3441 = bitcast <2 x bfloat> %3409 to i32, !dbg !115
  %3442 = bitcast <2 x bfloat> %3412 to i32, !dbg !115
  %3443 = bitcast <2 x bfloat> %3415 to i32, !dbg !115
  %3444 = bitcast <2 x bfloat> %3418 to i32, !dbg !115
  %3445 = bitcast <2 x bfloat> %3421 to i32, !dbg !115
  %3446 = bitcast <2 x bfloat> %3424 to i32, !dbg !115
  %3447 = bitcast <2 x bfloat> %3427 to i32, !dbg !115
  %3448 = bitcast <2 x bfloat> %3430 to i32, !dbg !115
  %3449 = bitcast <2 x bfloat> %3433 to i32, !dbg !115
  %3450 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3434, i32 %3436, i1 false, i1 false), !dbg !115
  %3451 = extractvalue { i32, i32 } %3450, 0, !dbg !115
  %3452 = extractvalue { i32, i32 } %3450, 1, !dbg !115
  %3453 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3435, i32 %3437, i1 false, i1 false), !dbg !115
  %3454 = extractvalue { i32, i32 } %3453, 0, !dbg !115
  %3455 = extractvalue { i32, i32 } %3453, 1, !dbg !115
  %3456 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3438, i32 %3440, i1 false, i1 false), !dbg !115
  %3457 = extractvalue { i32, i32 } %3456, 0, !dbg !115
  %3458 = extractvalue { i32, i32 } %3456, 1, !dbg !115
  %3459 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3439, i32 %3441, i1 false, i1 false), !dbg !115
  %3460 = extractvalue { i32, i32 } %3459, 0, !dbg !115
  %3461 = extractvalue { i32, i32 } %3459, 1, !dbg !115
  %3462 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3442, i32 %3444, i1 false, i1 false), !dbg !115
  %3463 = extractvalue { i32, i32 } %3462, 0, !dbg !115
  %3464 = extractvalue { i32, i32 } %3462, 1, !dbg !115
  %3465 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3443, i32 %3445, i1 false, i1 false), !dbg !115
  %3466 = extractvalue { i32, i32 } %3465, 0, !dbg !115
  %3467 = extractvalue { i32, i32 } %3465, 1, !dbg !115
  %3468 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3446, i32 %3448, i1 false, i1 false), !dbg !115
  %3469 = extractvalue { i32, i32 } %3468, 0, !dbg !115
  %3470 = extractvalue { i32, i32 } %3468, 1, !dbg !115
  %3471 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3447, i32 %3449, i1 false, i1 false), !dbg !115
  %3472 = extractvalue { i32, i32 } %3471, 0, !dbg !115
  %3473 = extractvalue { i32, i32 } %3471, 1, !dbg !115
  %3474 = bitcast i32 %3451 to <2 x bfloat>, !dbg !115
  %3475 = bitcast i32 %3454 to <2 x bfloat>, !dbg !115
  %3476 = bitcast i32 %3452 to <2 x bfloat>, !dbg !115
  %3477 = shufflevector <2 x bfloat> %3476, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3478 = bitcast i32 %3455 to <2 x bfloat>, !dbg !115
  %3479 = shufflevector <2 x bfloat> %3478, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3480 = bitcast i32 %3457 to <2 x bfloat>, !dbg !115
  %3481 = bitcast i32 %3460 to <2 x bfloat>, !dbg !115
  %3482 = bitcast i32 %3458 to <2 x bfloat>, !dbg !115
  %3483 = shufflevector <2 x bfloat> %3482, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3484 = bitcast i32 %3461 to <2 x bfloat>, !dbg !115
  %3485 = shufflevector <2 x bfloat> %3484, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3486 = bitcast i32 %3463 to <2 x bfloat>, !dbg !115
  %3487 = bitcast i32 %3466 to <2 x bfloat>, !dbg !115
  %3488 = bitcast i32 %3464 to <2 x bfloat>, !dbg !115
  %3489 = shufflevector <2 x bfloat> %3488, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3490 = bitcast i32 %3467 to <2 x bfloat>, !dbg !115
  %3491 = shufflevector <2 x bfloat> %3490, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3492 = bitcast i32 %3469 to <2 x bfloat>, !dbg !115
  %3493 = bitcast i32 %3472 to <2 x bfloat>, !dbg !115
  %3494 = bitcast i32 %3470 to <2 x bfloat>, !dbg !115
  %3495 = shufflevector <2 x bfloat> %3494, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3496 = bitcast i32 %3473 to <2 x bfloat>, !dbg !115
  %3497 = shufflevector <2 x bfloat> %3496, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3498 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3381, i16 %127, i32 2147483646, i32 159744), !dbg !115
  %3499 = shufflevector <2 x bfloat> %3474, <2 x bfloat> %3475, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !115
  %3500 = shufflevector <8 x bfloat> %3499, <8 x bfloat> %3477, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !115
  %3501 = shufflevector <8 x bfloat> %3500, <8 x bfloat> %3479, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !115
  %3502 = bitcast <8 x bfloat> %3501 to <4 x i32>, !dbg !115
  %3503 = shl i32 %3382, 1, !dbg !115
  %3504 = select i1 %109, i32 %3503, i32 -2147483648, !dbg !115
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %3502, ptr addrspace(8) %3498, i32 %3504, i32 0, i32 0), !dbg !115
  %3505 = shufflevector <2 x bfloat> %3480, <2 x bfloat> %3481, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !115
  %3506 = shufflevector <8 x bfloat> %3505, <8 x bfloat> %3483, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !115
  %3507 = shufflevector <8 x bfloat> %3506, <8 x bfloat> %3485, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !115
  %3508 = bitcast <8 x bfloat> %3507 to <4 x i32>, !dbg !115
  %3509 = shl i32 %3383, 1, !dbg !115
  %3510 = select i1 %109, i32 %3509, i32 -2147483648, !dbg !115
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %3508, ptr addrspace(8) %3498, i32 %3510, i32 0, i32 0), !dbg !115
  %3511 = shufflevector <2 x bfloat> %3486, <2 x bfloat> %3487, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !115
  %3512 = shufflevector <8 x bfloat> %3511, <8 x bfloat> %3489, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !115
  %3513 = shufflevector <8 x bfloat> %3512, <8 x bfloat> %3491, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !115
  %3514 = bitcast <8 x bfloat> %3513 to <4 x i32>, !dbg !115
  %3515 = shl i32 %3384, 1, !dbg !115
  %3516 = select i1 %109, i32 %3515, i32 -2147483648, !dbg !115
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %3514, ptr addrspace(8) %3498, i32 %3516, i32 0, i32 0), !dbg !115
  %3517 = shufflevector <2 x bfloat> %3492, <2 x bfloat> %3493, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !115
  %3518 = shufflevector <8 x bfloat> %3517, <8 x bfloat> %3495, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !115
  %3519 = shufflevector <8 x bfloat> %3518, <8 x bfloat> %3497, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !115
  %3520 = bitcast <8 x bfloat> %3519 to <4 x i32>, !dbg !115
  %3521 = shl i32 %3385, 1, !dbg !115
  %3522 = select i1 %109, i32 %3521, i32 -2147483648, !dbg !115
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %3520, ptr addrspace(8) %3498, i32 %3522, i32 0, i32 0), !dbg !115
  %3523 = getelementptr bfloat, ptr addrspace(1) %86, i64 %119, !dbg !116
  %3524 = insertelement <2 x float> poison, float %3379, i64 0, !dbg !117
  %3525 = insertelement <2 x float> %3524, float %3378, i64 1, !dbg !117
  %3526 = fptrunc <2 x float> %3525 to <2 x bfloat>, !dbg !117
  %3527 = insertelement <2 x float> poison, float %3377, i64 0, !dbg !117
  %3528 = insertelement <2 x float> %3527, float %3376, i64 1, !dbg !117
  %3529 = fptrunc <2 x float> %3528 to <2 x bfloat>, !dbg !117
  %3530 = insertelement <2 x float> poison, float %3375, i64 0, !dbg !117
  %3531 = insertelement <2 x float> %3530, float %3374, i64 1, !dbg !117
  %3532 = fptrunc <2 x float> %3531 to <2 x bfloat>, !dbg !117
  %3533 = insertelement <2 x float> poison, float %3373, i64 0, !dbg !117
  %3534 = insertelement <2 x float> %3533, float %3372, i64 1, !dbg !117
  %3535 = fptrunc <2 x float> %3534 to <2 x bfloat>, !dbg !117
  %3536 = insertelement <2 x float> poison, float %3371, i64 0, !dbg !117
  %3537 = insertelement <2 x float> %3536, float %3370, i64 1, !dbg !117
  %3538 = fptrunc <2 x float> %3537 to <2 x bfloat>, !dbg !117
  %3539 = insertelement <2 x float> poison, float %3369, i64 0, !dbg !117
  %3540 = insertelement <2 x float> %3539, float %3368, i64 1, !dbg !117
  %3541 = fptrunc <2 x float> %3540 to <2 x bfloat>, !dbg !117
  %3542 = insertelement <2 x float> poison, float %3367, i64 0, !dbg !117
  %3543 = insertelement <2 x float> %3542, float %3366, i64 1, !dbg !117
  %3544 = fptrunc <2 x float> %3543 to <2 x bfloat>, !dbg !117
  %3545 = insertelement <2 x float> poison, float %3365, i64 0, !dbg !117
  %3546 = insertelement <2 x float> %3545, float %3364, i64 1, !dbg !117
  %3547 = fptrunc <2 x float> %3546 to <2 x bfloat>, !dbg !117
  %3548 = insertelement <2 x float> poison, float %3363, i64 0, !dbg !117
  %3549 = insertelement <2 x float> %3548, float %3362, i64 1, !dbg !117
  %3550 = fptrunc <2 x float> %3549 to <2 x bfloat>, !dbg !117
  %3551 = insertelement <2 x float> poison, float %3361, i64 0, !dbg !117
  %3552 = insertelement <2 x float> %3551, float %3360, i64 1, !dbg !117
  %3553 = fptrunc <2 x float> %3552 to <2 x bfloat>, !dbg !117
  %3554 = insertelement <2 x float> poison, float %3359, i64 0, !dbg !117
  %3555 = insertelement <2 x float> %3554, float %3358, i64 1, !dbg !117
  %3556 = fptrunc <2 x float> %3555 to <2 x bfloat>, !dbg !117
  %3557 = insertelement <2 x float> poison, float %3357, i64 0, !dbg !117
  %3558 = insertelement <2 x float> %3557, float %3356, i64 1, !dbg !117
  %3559 = fptrunc <2 x float> %3558 to <2 x bfloat>, !dbg !117
  %3560 = insertelement <2 x float> poison, float %3355, i64 0, !dbg !117
  %3561 = insertelement <2 x float> %3560, float %3354, i64 1, !dbg !117
  %3562 = fptrunc <2 x float> %3561 to <2 x bfloat>, !dbg !117
  %3563 = insertelement <2 x float> poison, float %3353, i64 0, !dbg !117
  %3564 = insertelement <2 x float> %3563, float %3352, i64 1, !dbg !117
  %3565 = fptrunc <2 x float> %3564 to <2 x bfloat>, !dbg !117
  %3566 = insertelement <2 x float> poison, float %3351, i64 0, !dbg !117
  %3567 = insertelement <2 x float> %3566, float %3350, i64 1, !dbg !117
  %3568 = fptrunc <2 x float> %3567 to <2 x bfloat>, !dbg !117
  %3569 = insertelement <2 x float> poison, float %3349, i64 0, !dbg !117
  %3570 = insertelement <2 x float> %3569, float %3348, i64 1, !dbg !117
  %3571 = fptrunc <2 x float> %3570 to <2 x bfloat>, !dbg !117
  %3572 = bitcast <2 x bfloat> %3526 to i32, !dbg !117
  %3573 = bitcast <2 x bfloat> %3529 to i32, !dbg !117
  %3574 = bitcast <2 x bfloat> %3532 to i32, !dbg !117
  %3575 = bitcast <2 x bfloat> %3535 to i32, !dbg !117
  %3576 = bitcast <2 x bfloat> %3538 to i32, !dbg !117
  %3577 = bitcast <2 x bfloat> %3541 to i32, !dbg !117
  %3578 = bitcast <2 x bfloat> %3544 to i32, !dbg !117
  %3579 = bitcast <2 x bfloat> %3547 to i32, !dbg !117
  %3580 = bitcast <2 x bfloat> %3550 to i32, !dbg !117
  %3581 = bitcast <2 x bfloat> %3553 to i32, !dbg !117
  %3582 = bitcast <2 x bfloat> %3556 to i32, !dbg !117
  %3583 = bitcast <2 x bfloat> %3559 to i32, !dbg !117
  %3584 = bitcast <2 x bfloat> %3562 to i32, !dbg !117
  %3585 = bitcast <2 x bfloat> %3565 to i32, !dbg !117
  %3586 = bitcast <2 x bfloat> %3568 to i32, !dbg !117
  %3587 = bitcast <2 x bfloat> %3571 to i32, !dbg !117
  %3588 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3572, i32 %3574, i1 false, i1 false), !dbg !117
  %3589 = extractvalue { i32, i32 } %3588, 0, !dbg !117
  %3590 = extractvalue { i32, i32 } %3588, 1, !dbg !117
  %3591 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3573, i32 %3575, i1 false, i1 false), !dbg !117
  %3592 = extractvalue { i32, i32 } %3591, 0, !dbg !117
  %3593 = extractvalue { i32, i32 } %3591, 1, !dbg !117
  %3594 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3576, i32 %3578, i1 false, i1 false), !dbg !117
  %3595 = extractvalue { i32, i32 } %3594, 0, !dbg !117
  %3596 = extractvalue { i32, i32 } %3594, 1, !dbg !117
  %3597 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3577, i32 %3579, i1 false, i1 false), !dbg !117
  %3598 = extractvalue { i32, i32 } %3597, 0, !dbg !117
  %3599 = extractvalue { i32, i32 } %3597, 1, !dbg !117
  %3600 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3580, i32 %3582, i1 false, i1 false), !dbg !117
  %3601 = extractvalue { i32, i32 } %3600, 0, !dbg !117
  %3602 = extractvalue { i32, i32 } %3600, 1, !dbg !117
  %3603 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3581, i32 %3583, i1 false, i1 false), !dbg !117
  %3604 = extractvalue { i32, i32 } %3603, 0, !dbg !117
  %3605 = extractvalue { i32, i32 } %3603, 1, !dbg !117
  %3606 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3584, i32 %3586, i1 false, i1 false), !dbg !117
  %3607 = extractvalue { i32, i32 } %3606, 0, !dbg !117
  %3608 = extractvalue { i32, i32 } %3606, 1, !dbg !117
  %3609 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %3585, i32 %3587, i1 false, i1 false), !dbg !117
  %3610 = extractvalue { i32, i32 } %3609, 0, !dbg !117
  %3611 = extractvalue { i32, i32 } %3609, 1, !dbg !117
  %3612 = bitcast i32 %3589 to <2 x bfloat>, !dbg !117
  %3613 = bitcast i32 %3592 to <2 x bfloat>, !dbg !117
  %3614 = bitcast i32 %3590 to <2 x bfloat>, !dbg !117
  %3615 = shufflevector <2 x bfloat> %3614, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3616 = bitcast i32 %3593 to <2 x bfloat>, !dbg !117
  %3617 = shufflevector <2 x bfloat> %3616, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3618 = bitcast i32 %3595 to <2 x bfloat>, !dbg !117
  %3619 = bitcast i32 %3598 to <2 x bfloat>, !dbg !117
  %3620 = bitcast i32 %3596 to <2 x bfloat>, !dbg !117
  %3621 = shufflevector <2 x bfloat> %3620, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3622 = bitcast i32 %3599 to <2 x bfloat>, !dbg !117
  %3623 = shufflevector <2 x bfloat> %3622, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3624 = bitcast i32 %3601 to <2 x bfloat>, !dbg !117
  %3625 = bitcast i32 %3604 to <2 x bfloat>, !dbg !117
  %3626 = bitcast i32 %3602 to <2 x bfloat>, !dbg !117
  %3627 = shufflevector <2 x bfloat> %3626, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3628 = bitcast i32 %3605 to <2 x bfloat>, !dbg !117
  %3629 = shufflevector <2 x bfloat> %3628, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3630 = bitcast i32 %3607 to <2 x bfloat>, !dbg !117
  %3631 = bitcast i32 %3610 to <2 x bfloat>, !dbg !117
  %3632 = bitcast i32 %3608 to <2 x bfloat>, !dbg !117
  %3633 = shufflevector <2 x bfloat> %3632, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3634 = bitcast i32 %3611 to <2 x bfloat>, !dbg !117
  %3635 = shufflevector <2 x bfloat> %3634, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3636 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3523, i16 %127, i32 2147483646, i32 159744), !dbg !117
  %3637 = shufflevector <2 x bfloat> %3612, <2 x bfloat> %3613, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !117
  %3638 = shufflevector <8 x bfloat> %3637, <8 x bfloat> %3615, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !117
  %3639 = shufflevector <8 x bfloat> %3638, <8 x bfloat> %3617, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !117
  %3640 = bitcast <8 x bfloat> %3639 to <4 x i32>, !dbg !117
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %3640, ptr addrspace(8) %3636, i32 %3504, i32 0, i32 0), !dbg !117
  %3641 = shufflevector <2 x bfloat> %3618, <2 x bfloat> %3619, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !117
  %3642 = shufflevector <8 x bfloat> %3641, <8 x bfloat> %3621, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !117
  %3643 = shufflevector <8 x bfloat> %3642, <8 x bfloat> %3623, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !117
  %3644 = bitcast <8 x bfloat> %3643 to <4 x i32>, !dbg !117
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %3644, ptr addrspace(8) %3636, i32 %3510, i32 0, i32 0), !dbg !117
  %3645 = shufflevector <2 x bfloat> %3624, <2 x bfloat> %3625, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !117
  %3646 = shufflevector <8 x bfloat> %3645, <8 x bfloat> %3627, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !117
  %3647 = shufflevector <8 x bfloat> %3646, <8 x bfloat> %3629, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !117
  %3648 = bitcast <8 x bfloat> %3647 to <4 x i32>, !dbg !117
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %3648, ptr addrspace(8) %3636, i32 %3516, i32 0, i32 0), !dbg !117
  %3649 = shufflevector <2 x bfloat> %3630, <2 x bfloat> %3631, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !117
  %3650 = shufflevector <8 x bfloat> %3649, <8 x bfloat> %3633, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !117
  %3651 = shufflevector <8 x bfloat> %3650, <8 x bfloat> %3635, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !117
  %3652 = bitcast <8 x bfloat> %3651 to <4 x i32>, !dbg !117
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %3652, ptr addrspace(8) %3636, i32 %3522, i32 0, i32 0), !dbg !117
  br label %3653, !dbg !50

3653:                                             ; preds = %._crit_edge257, %80
  %3654 = icmp slt i32 %42, %34, !dbg !118
  br i1 %3654, label %3655, label %6404, !dbg !119

3655:                                             ; preds = %3653
  %3656 = and i32 %43, 31, !dbg !120
  %3657 = and i32 %43, 192, !dbg !120
  %3658 = lshr exact i32 %3657, 1, !dbg !120
  %3659 = or disjoint i32 %3658, %3656, !dbg !120
  %3660 = or disjoint i32 %46, 64, !dbg !120
  %3661 = or i32 %45, 96, !dbg !120
  %3662 = or disjoint i32 %42, %3659, !dbg !121
  %3663 = or disjoint i32 %42, %46, !dbg !121
  %3664 = or disjoint i32 %42, %47, !dbg !121
  %3665 = or disjoint i32 %42, %3660, !dbg !121
  %3666 = or disjoint i32 %42, %3661, !dbg !121
  %3667 = and i32 %43, 32, !dbg !122
  %3668 = icmp eq i32 %3667, 0, !dbg !122
  %3669 = lshr exact i32 %3667, 2, !dbg !122
  %3670 = or disjoint i32 %3669, 16, !dbg !122
  %3671 = or disjoint i32 %3669, 32, !dbg !122
  %3672 = or disjoint i32 %3669, 48, !dbg !122
  %3673 = shl nuw nsw i32 %43, 3, !dbg !122
  %3674 = and i32 %3673, 56, !dbg !122
  %3675 = icmp slt i32 %3662, %34, !dbg !123
  %3676 = icmp slt i32 %3663, %34, !dbg !123
  %3677 = icmp slt i32 %3664, %34, !dbg !123
  %3678 = icmp slt i32 %3665, %34, !dbg !123
  %3679 = icmp slt i32 %3666, %34, !dbg !123
  %3680 = mul i32 %42, %10, !dbg !124
  %3681 = mul i32 %10, %46, !dbg !124
  %3682 = mul i32 %10, %47, !dbg !124
  %3683 = mul i32 %10, %3660, !dbg !124
  %3684 = mul i32 %10, %3661, !dbg !124
  %3685 = sext i32 %3680 to i64, !dbg !124
  %3686 = getelementptr bfloat, ptr addrspace(1) %81, i64 %3685, !dbg !124
  %3687 = add i32 %3681, %3674, !dbg !125
  %3688 = add i32 %3682, %3674, !dbg !125
  %3689 = add i32 %3683, %3674, !dbg !125
  %3690 = add i32 %3684, %3674, !dbg !125
  %3691 = trunc i32 %10 to i16, !dbg !126
  %3692 = and i16 %3691, 16383, !dbg !126
  %3693 = or disjoint i16 %3692, 16384, !dbg !126
  %3694 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3686, i16 %3693, i32 2147483646, i32 159744), !dbg !126
  %3695 = shl i32 %3687, 1, !dbg !126
  %3696 = select i1 %3676, i32 %3695, i32 -2147483648, !dbg !126
  %3697 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3694, i32 %3696, i32 0, i32 0), !dbg !126
  %3698 = shl i32 %3688, 1, !dbg !126
  %3699 = select i1 %3677, i32 %3698, i32 -2147483648, !dbg !126
  %3700 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3694, i32 %3699, i32 0, i32 0), !dbg !126
  %3701 = shl i32 %3689, 1, !dbg !126
  %3702 = select i1 %3678, i32 %3701, i32 -2147483648, !dbg !126
  %3703 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3694, i32 %3702, i32 0, i32 0), !dbg !126
  %3704 = shl i32 %3690, 1, !dbg !126
  %3705 = select i1 %3679, i32 %3704, i32 -2147483648, !dbg !126
  %3706 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3694, i32 %3705, i32 0, i32 0), !dbg !126
  fence syncscope("workgroup") release, !dbg !126
  tail call void @llvm.amdgcn.s.barrier(), !dbg !126
  fence syncscope("workgroup") acquire, !dbg !126
  %3707 = shl nuw nsw i32 %44, 4, !dbg !126
  %3708 = and i32 %43, 112, !dbg !126
  %3709 = xor i32 %3707, %3708, !dbg !126
  %3710 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3709, !dbg !126
  store <4 x i32> %3697, ptr addrspace(3) %3710, align 16, !dbg !126
  %3711 = or disjoint i32 %3709, 4096, !dbg !126
  %3712 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3711, !dbg !126
  store <4 x i32> %3700, ptr addrspace(3) %3712, align 16, !dbg !126
  %3713 = getelementptr inbounds nuw i8, ptr addrspace(3) %3710, i32 8192, !dbg !126
  store <4 x i32> %3703, ptr addrspace(3) %3713, align 16, !dbg !126
  %3714 = getelementptr inbounds nuw i8, ptr addrspace(3) %3710, i32 12288, !dbg !126
  store <4 x i32> %3706, ptr addrspace(3) %3714, align 16, !dbg !126
  fence syncscope("workgroup") release, !dbg !126
  tail call void @llvm.amdgcn.s.barrier(), !dbg !126
  fence syncscope("workgroup") acquire, !dbg !126
  %3715 = shl nuw nsw i32 %3656, 7, !dbg !126
  %3716 = shl nuw nsw i32 %3657, 6, !dbg !126
  %3717 = and i32 %3673, 112, !dbg !126
  %3718 = lshr exact i32 %3667, 1, !dbg !126
  %3719 = xor i32 %3717, %3718, !dbg !126
  %3720 = or disjoint i32 %3719, %3716, !dbg !126
  %3721 = or disjoint i32 %3720, %3715, !dbg !126
  %3722 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3721, !dbg !126
  %3723 = load <8 x bfloat>, ptr addrspace(3) %3722, align 16, !dbg !126
  %3724 = xor i32 %3721, 32, !dbg !126
  %3725 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3724, !dbg !126
  %3726 = load <8 x bfloat>, ptr addrspace(3) %3725, align 16, !dbg !126
  %3727 = xor i32 %3721, 64, !dbg !126
  %3728 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3727, !dbg !126
  %3729 = load <8 x bfloat>, ptr addrspace(3) %3728, align 16, !dbg !126
  %3730 = xor i32 %3721, 96, !dbg !126
  %3731 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3730, !dbg !126
  %3732 = load <8 x bfloat>, ptr addrspace(3) %3731, align 16, !dbg !126
  %3733 = mul i32 %42, %14, !dbg !127
  %3734 = mul i32 %14, %46, !dbg !127
  %3735 = mul i32 %14, %47, !dbg !127
  %3736 = mul i32 %14, %3660, !dbg !127
  %3737 = mul i32 %14, %3661, !dbg !127
  %3738 = sext i32 %3733 to i64, !dbg !127
  %3739 = getelementptr bfloat, ptr addrspace(1) %84, i64 %3738, !dbg !127
  %3740 = add i32 %3734, %3674, !dbg !128
  %3741 = add i32 %3735, %3674, !dbg !128
  %3742 = add i32 %3736, %3674, !dbg !128
  %3743 = add i32 %3737, %3674, !dbg !128
  %3744 = trunc i32 %14 to i16, !dbg !129
  %3745 = and i16 %3744, 16383, !dbg !129
  %3746 = or disjoint i16 %3745, 16384, !dbg !129
  %3747 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3739, i16 %3746, i32 2147483646, i32 159744), !dbg !129
  %3748 = shl i32 %3740, 1, !dbg !129
  %3749 = select i1 %3676, i32 %3748, i32 -2147483648, !dbg !129
  %3750 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3747, i32 %3749, i32 0, i32 0), !dbg !129
  %3751 = shl i32 %3741, 1, !dbg !129
  %3752 = select i1 %3677, i32 %3751, i32 -2147483648, !dbg !129
  %3753 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3747, i32 %3752, i32 0, i32 0), !dbg !129
  %3754 = shl i32 %3742, 1, !dbg !129
  %3755 = select i1 %3678, i32 %3754, i32 -2147483648, !dbg !129
  %3756 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3747, i32 %3755, i32 0, i32 0), !dbg !129
  %3757 = shl i32 %3743, 1, !dbg !129
  %3758 = select i1 %3679, i32 %3757, i32 -2147483648, !dbg !129
  %3759 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3747, i32 %3758, i32 0, i32 0), !dbg !129
  fence syncscope("workgroup") release, !dbg !129
  tail call void @llvm.amdgcn.s.barrier(), !dbg !129
  fence syncscope("workgroup") acquire, !dbg !129
  store <4 x i32> %3750, ptr addrspace(3) %3710, align 16, !dbg !129
  store <4 x i32> %3753, ptr addrspace(3) %3712, align 16, !dbg !129
  store <4 x i32> %3756, ptr addrspace(3) %3713, align 16, !dbg !129
  store <4 x i32> %3759, ptr addrspace(3) %3714, align 16, !dbg !129
  fence syncscope("workgroup") release, !dbg !129
  tail call void @llvm.amdgcn.s.barrier(), !dbg !129
  fence syncscope("workgroup") acquire, !dbg !129
  %3760 = load <8 x bfloat>, ptr addrspace(3) %3722, align 16, !dbg !129
  %3761 = load <8 x bfloat>, ptr addrspace(3) %3725, align 16, !dbg !129
  %3762 = load <8 x bfloat>, ptr addrspace(3) %3728, align 16, !dbg !129
  %3763 = load <8 x bfloat>, ptr addrspace(3) %3731, align 16, !dbg !129
  %3764 = add i32 %41, 63, !dbg !60
  %3765 = mul i32 %11, %46, !dbg !130
  %3766 = mul i32 %11, %47, !dbg !130
  %3767 = add i32 %3765, %3674, !dbg !131
  %3768 = add i32 %3766, %3674, !dbg !131
  %3769 = icmp sgt i32 %3764, 63, !dbg !132
  %3770 = icmp slt i32 %46, %41, !dbg !133
  %3771 = icmp slt i32 %47, %41, !dbg !133
  %3772 = and i1 %3770, %3769, !dbg !132
  %3773 = and i1 %3771, %3769, !dbg !132
  %3774 = trunc i32 %11 to i16, !dbg !134
  %3775 = and i16 %3774, 16383, !dbg !134
  %3776 = or disjoint i16 %3775, 16384, !dbg !134
  %3777 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %82, i16 %3776, i32 2147483646, i32 159744), !dbg !134
  %3778 = shl i32 %3767, 1, !dbg !134
  %3779 = select i1 %3772, i32 %3778, i32 -2147483648, !dbg !134
  %3780 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3777, i32 %3779, i32 0, i32 0), !dbg !134
  %3781 = bitcast <4 x i32> %3780 to <8 x bfloat>, !dbg !134
  %3782 = shl i32 %3768, 1, !dbg !134
  %3783 = select i1 %3773, i32 %3782, i32 -2147483648, !dbg !134
  %3784 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3777, i32 %3783, i32 0, i32 0), !dbg !134
  %3785 = bitcast <4 x i32> %3784 to <8 x bfloat>, !dbg !134
  %3786 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %83, i16 %3776, i32 2147483646, i32 159744), !dbg !135
  %3787 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3786, i32 %3779, i32 0, i32 0), !dbg !135
  %3788 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3786, i32 %3783, i32 0, i32 0), !dbg !135
  fence syncscope("workgroup") release, !dbg !135
  tail call void @llvm.amdgcn.s.barrier(), !dbg !135
  fence syncscope("workgroup") acquire, !dbg !135
  store <4 x i32> %3787, ptr addrspace(3) %3710, align 16, !dbg !135
  store <4 x i32> %3788, ptr addrspace(3) %3712, align 16, !dbg !135
  %3789 = icmp sgt i32 %3764, 127, !dbg !132
  br i1 %3789, label %.lr.ph184, label %.._crit_edge185_crit_edge, !dbg !132

.._crit_edge185_crit_edge:                        ; preds = %3655
  %.pre340 = shl nuw nsw i32 %3656, 1, !dbg !136
  %.pre342 = select i1 %3668, i32 0, i32 1088, !dbg !136
  %.pre344 = or disjoint i32 %.pre342, %.pre340, !dbg !136
  %.pre346 = xor i32 %.pre344, 272, !dbg !136
  %.pre348 = xor i32 %.pre344, 544, !dbg !136
  %.pre350 = xor i32 %.pre344, 816, !dbg !136
  %.pre352 = xor i32 %.pre344, 64, !dbg !136
  %.pre354 = xor i32 %.pre344, 336, !dbg !136
  %.pre356 = xor i32 %.pre344, 608, !dbg !136
  %.pre358 = xor i32 %.pre344, 880, !dbg !136
  %.pre360 = or disjoint i32 %3715, %3717, !dbg !134
  %.pre362 = xor i32 %.pre360, %3718, !dbg !134
  %.pre364 = or disjoint i32 %.pre362, 4096, !dbg !134
  %.pre366 = xor i32 %.pre362, 32, !dbg !134
  %.pre368 = or disjoint i32 %.pre366, 4096, !dbg !134
  %.pre370 = xor i32 %.pre362, 64, !dbg !134
  %.pre372 = or disjoint i32 %.pre370, 4096, !dbg !134
  %.pre374 = xor i32 %.pre362, 96, !dbg !134
  %.pre376 = or disjoint i32 %.pre374, 4096, !dbg !134
  %3790 = shufflevector <8 x bfloat> %3781, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %3791 = shufflevector <8 x bfloat> %3781, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %3792 = shufflevector <8 x bfloat> %3781, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %3793 = shufflevector <8 x bfloat> %3781, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %3794 = shufflevector <8 x bfloat> %3785, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %3795 = shufflevector <8 x bfloat> %3785, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %3796 = shufflevector <8 x bfloat> %3785, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %3797 = shufflevector <8 x bfloat> %3785, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  br label %._crit_edge185, !dbg !132

.lr.ph184:                                        ; preds = %3655
  %3798 = lshr i32 %3764, 6, !dbg !72
  %3799 = shl i32 %11, 6, !dbg !137
  %3800 = sext i32 %3799 to i64
  %3801 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3709
  %3802 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3711
  %3803 = shl nuw nsw i32 %3656, 1
  %3804 = select i1 %3668, i32 0, i32 1088
  %3805 = or disjoint i32 %3804, %3803
  %3806 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3805
  %3807 = getelementptr inbounds nuw i8, ptr addrspace(3) %3806, i32 128
  %3808 = getelementptr inbounds nuw i8, ptr addrspace(3) %3806, i32 2048
  %3809 = getelementptr inbounds nuw i8, ptr addrspace(3) %3806, i32 2176
  %3810 = getelementptr inbounds nuw i8, ptr addrspace(3) %3806, i32 4096
  %3811 = getelementptr inbounds nuw i8, ptr addrspace(3) %3806, i32 4224
  %3812 = getelementptr inbounds nuw i8, ptr addrspace(3) %3806, i32 6144
  %3813 = getelementptr inbounds nuw i8, ptr addrspace(3) %3806, i32 6272
  %3814 = xor i32 %3805, 272
  %3815 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3814
  %3816 = getelementptr inbounds nuw i8, ptr addrspace(3) %3815, i32 128
  %3817 = getelementptr inbounds nuw i8, ptr addrspace(3) %3815, i32 2048
  %3818 = getelementptr inbounds nuw i8, ptr addrspace(3) %3815, i32 2176
  %3819 = getelementptr inbounds nuw i8, ptr addrspace(3) %3815, i32 4096
  %3820 = getelementptr inbounds nuw i8, ptr addrspace(3) %3815, i32 4224
  %3821 = getelementptr inbounds nuw i8, ptr addrspace(3) %3815, i32 6144
  %3822 = getelementptr inbounds nuw i8, ptr addrspace(3) %3815, i32 6272
  %3823 = xor i32 %3805, 544
  %3824 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3823
  %3825 = getelementptr inbounds nuw i8, ptr addrspace(3) %3824, i32 128
  %3826 = getelementptr inbounds nuw i8, ptr addrspace(3) %3824, i32 2048
  %3827 = getelementptr inbounds nuw i8, ptr addrspace(3) %3824, i32 2176
  %3828 = getelementptr inbounds nuw i8, ptr addrspace(3) %3824, i32 4096
  %3829 = getelementptr inbounds nuw i8, ptr addrspace(3) %3824, i32 4224
  %3830 = getelementptr inbounds nuw i8, ptr addrspace(3) %3824, i32 6144
  %3831 = getelementptr inbounds nuw i8, ptr addrspace(3) %3824, i32 6272
  %3832 = xor i32 %3805, 816
  %3833 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3832
  %3834 = getelementptr inbounds nuw i8, ptr addrspace(3) %3833, i32 128
  %3835 = getelementptr inbounds nuw i8, ptr addrspace(3) %3833, i32 2048
  %3836 = getelementptr inbounds nuw i8, ptr addrspace(3) %3833, i32 2176
  %3837 = getelementptr inbounds nuw i8, ptr addrspace(3) %3833, i32 4096
  %3838 = getelementptr inbounds nuw i8, ptr addrspace(3) %3833, i32 4224
  %3839 = getelementptr inbounds nuw i8, ptr addrspace(3) %3833, i32 6144
  %3840 = getelementptr inbounds nuw i8, ptr addrspace(3) %3833, i32 6272
  %3841 = xor i32 %3805, 64
  %3842 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3841
  %3843 = getelementptr inbounds nuw i8, ptr addrspace(3) %3842, i32 128
  %3844 = getelementptr inbounds nuw i8, ptr addrspace(3) %3842, i32 2048
  %3845 = getelementptr inbounds nuw i8, ptr addrspace(3) %3842, i32 2176
  %3846 = getelementptr inbounds nuw i8, ptr addrspace(3) %3842, i32 4096
  %3847 = getelementptr inbounds nuw i8, ptr addrspace(3) %3842, i32 4224
  %3848 = getelementptr inbounds nuw i8, ptr addrspace(3) %3842, i32 6144
  %3849 = getelementptr inbounds nuw i8, ptr addrspace(3) %3842, i32 6272
  %3850 = xor i32 %3805, 336
  %3851 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3850
  %3852 = getelementptr inbounds nuw i8, ptr addrspace(3) %3851, i32 128
  %3853 = getelementptr inbounds nuw i8, ptr addrspace(3) %3851, i32 2048
  %3854 = getelementptr inbounds nuw i8, ptr addrspace(3) %3851, i32 2176
  %3855 = getelementptr inbounds nuw i8, ptr addrspace(3) %3851, i32 4096
  %3856 = getelementptr inbounds nuw i8, ptr addrspace(3) %3851, i32 4224
  %3857 = getelementptr inbounds nuw i8, ptr addrspace(3) %3851, i32 6144
  %3858 = getelementptr inbounds nuw i8, ptr addrspace(3) %3851, i32 6272
  %3859 = xor i32 %3805, 608
  %3860 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3859
  %3861 = getelementptr inbounds nuw i8, ptr addrspace(3) %3860, i32 128
  %3862 = getelementptr inbounds nuw i8, ptr addrspace(3) %3860, i32 2048
  %3863 = getelementptr inbounds nuw i8, ptr addrspace(3) %3860, i32 2176
  %3864 = getelementptr inbounds nuw i8, ptr addrspace(3) %3860, i32 4096
  %3865 = getelementptr inbounds nuw i8, ptr addrspace(3) %3860, i32 4224
  %3866 = getelementptr inbounds nuw i8, ptr addrspace(3) %3860, i32 6144
  %3867 = getelementptr inbounds nuw i8, ptr addrspace(3) %3860, i32 6272
  %3868 = xor i32 %3805, 880
  %3869 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3868
  %3870 = getelementptr inbounds nuw i8, ptr addrspace(3) %3869, i32 128
  %3871 = getelementptr inbounds nuw i8, ptr addrspace(3) %3869, i32 2048
  %3872 = getelementptr inbounds nuw i8, ptr addrspace(3) %3869, i32 2176
  %3873 = getelementptr inbounds nuw i8, ptr addrspace(3) %3869, i32 4096
  %3874 = getelementptr inbounds nuw i8, ptr addrspace(3) %3869, i32 4224
  %3875 = getelementptr inbounds nuw i8, ptr addrspace(3) %3869, i32 6144
  %3876 = getelementptr inbounds nuw i8, ptr addrspace(3) %3869, i32 6272
  %3877 = or disjoint i32 %3715, %3717
  %3878 = xor i32 %3877, %3718
  %3879 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3878
  %3880 = or disjoint i32 %3878, 4096
  %3881 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3880
  %3882 = xor i32 %3878, 32
  %3883 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3882
  %3884 = or disjoint i32 %3882, 4096
  %3885 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3884
  %3886 = xor i32 %3878, 64
  %3887 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3886
  %3888 = or disjoint i32 %3886, 4096
  %3889 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3888
  %3890 = xor i32 %3878, 96
  %3891 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3890
  %3892 = or disjoint i32 %3890, 4096
  %3893 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3892
  %3894 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3878
  %3895 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3880
  %3896 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3882
  %3897 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3884
  %3898 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3886
  %3899 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3888
  %3900 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3890
  %3901 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %3892
  %3902 = add nsw i32 %3798, -2
  %3903 = shufflevector <8 x bfloat> %3781, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %3904 = shufflevector <8 x bfloat> %3781, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %3905 = shufflevector <8 x bfloat> %3781, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %3906 = shufflevector <8 x bfloat> %3781, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %3907 = shufflevector <8 x bfloat> %3785, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %3908 = shufflevector <8 x bfloat> %3785, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %3909 = shufflevector <8 x bfloat> %3785, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %3910 = shufflevector <8 x bfloat> %3785, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %3911 = insertelement <2 x float> poison, float %20, i64 0, !dbg !138
  %3912 = shufflevector <2 x float> %3911, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !138
  br label %3913, !dbg !132

3913:                                             ; preds = %.lr.ph184, %3913
  %3914 = phi ptr addrspace(1) [ %83, %.lr.ph184 ], [ %3960, %3913 ]
  %3915 = phi ptr addrspace(1) [ %82, %.lr.ph184 ], [ %3959, %3913 ]
  %3916 = phi i32 [ 0, %.lr.ph184 ], [ %3958, %3913 ]
  %3917 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4953, %3913 ]
  %3918 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4954, %3913 ]
  %3919 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4955, %3913 ]
  %3920 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4956, %3913 ]
  %3921 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4957, %3913 ]
  %3922 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4958, %3913 ]
  %3923 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4959, %3913 ]
  %3924 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4960, %3913 ]
  %3925 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4961, %3913 ]
  %3926 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4962, %3913 ]
  %3927 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4963, %3913 ]
  %3928 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4964, %3913 ]
  %3929 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4965, %3913 ]
  %3930 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4966, %3913 ]
  %3931 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4967, %3913 ]
  %3932 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4968, %3913 ]
  %3933 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4989, %3913 ]
  %3934 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4990, %3913 ]
  %3935 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4991, %3913 ]
  %3936 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4992, %3913 ]
  %3937 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4993, %3913 ]
  %3938 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4994, %3913 ]
  %3939 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4995, %3913 ]
  %3940 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4996, %3913 ]
  %3941 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4997, %3913 ]
  %3942 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4998, %3913 ]
  %3943 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %4999, %3913 ]
  %3944 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %5000, %3913 ]
  %3945 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %5001, %3913 ]
  %3946 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %5002, %3913 ]
  %3947 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %5003, %3913 ]
  %3948 = phi float [ 0.000000e+00, %.lr.ph184 ], [ %5004, %3913 ]
  %3949 = phi i32 [ 0, %.lr.ph184 ], [ %5005, %3913 ]
  %3950 = phi <2 x bfloat> [ %3903, %.lr.ph184 ], [ %5006, %3913 ]
  %3951 = phi <2 x bfloat> [ %3904, %.lr.ph184 ], [ %5007, %3913 ]
  %3952 = phi <2 x bfloat> [ %3905, %.lr.ph184 ], [ %5008, %3913 ]
  %3953 = phi <2 x bfloat> [ %3906, %.lr.ph184 ], [ %5009, %3913 ]
  %3954 = phi <2 x bfloat> [ %3907, %.lr.ph184 ], [ %5010, %3913 ]
  %3955 = phi <2 x bfloat> [ %3908, %.lr.ph184 ], [ %5011, %3913 ]
  %3956 = phi <2 x bfloat> [ %3909, %.lr.ph184 ], [ %5012, %3913 ]
  %3957 = phi <2 x bfloat> [ %3910, %.lr.ph184 ], [ %5013, %3913 ]
  %3958 = add nuw nsw i32 %3916, 64, !dbg !139
  %3959 = getelementptr bfloat, ptr addrspace(1) %3915, i64 %3800, !dbg !140
  %3960 = getelementptr bfloat, ptr addrspace(1) %3914, i64 %3800, !dbg !141
  %3961 = or disjoint i32 %3958, %46, !dbg !142
  %3962 = or disjoint i32 %3958, %47, !dbg !142
  %3963 = icmp slt i32 %3961, %41, !dbg !133
  %3964 = icmp slt i32 %3962, %41, !dbg !133
  %3965 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3959, i16 %3776, i32 2147483646, i32 159744), !dbg !134
  %3966 = select i1 %3963, i32 %3778, i32 -2147483648, !dbg !134
  %3967 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3965, i32 %3966, i32 0, i32 0), !dbg !134
  %3968 = bitcast <4 x i32> %3967 to <8 x bfloat>, !dbg !134
  %3969 = select i1 %3964, i32 %3782, i32 -2147483648, !dbg !134
  %3970 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %3965, i32 %3969, i32 0, i32 0), !dbg !134
  %3971 = bitcast <4 x i32> %3970 to <8 x bfloat>, !dbg !134
  %3972 = shufflevector <2 x bfloat> %3950, <2 x bfloat> %3951, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %3973 = shufflevector <2 x bfloat> %3952, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %3974 = shufflevector <8 x bfloat> %3972, <8 x bfloat> %3973, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !134
  %3975 = shufflevector <2 x bfloat> %3953, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %3976 = shufflevector <8 x bfloat> %3974, <8 x bfloat> %3975, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !134
  store <8 x bfloat> %3976, ptr addrspace(3) %3801, align 16, !dbg !134
  %3977 = shufflevector <2 x bfloat> %3954, <2 x bfloat> %3955, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %3978 = shufflevector <2 x bfloat> %3956, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %3979 = shufflevector <8 x bfloat> %3977, <8 x bfloat> %3978, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !134
  %3980 = shufflevector <2 x bfloat> %3957, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %3981 = shufflevector <8 x bfloat> %3979, <8 x bfloat> %3980, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !134
  store <8 x bfloat> %3981, ptr addrspace(3) %3802, align 16, !dbg !134
  fence syncscope("workgroup") release, !dbg !136
  tail call void @llvm.amdgcn.s.barrier(), !dbg !136
  fence syncscope("workgroup") acquire, !dbg !136
  %3982 = load <1 x bfloat>, ptr addrspace(3) %3806, align 2, !dbg !136
  %3983 = load <1 x bfloat>, ptr addrspace(3) %3807, align 2, !dbg !136
  %3984 = load <1 x bfloat>, ptr addrspace(3) %3808, align 2, !dbg !136
  %3985 = load <1 x bfloat>, ptr addrspace(3) %3809, align 2, !dbg !136
  %3986 = load <1 x bfloat>, ptr addrspace(3) %3810, align 2, !dbg !136
  %3987 = load <1 x bfloat>, ptr addrspace(3) %3811, align 2, !dbg !136
  %3988 = load <1 x bfloat>, ptr addrspace(3) %3812, align 2, !dbg !136
  %3989 = load <1 x bfloat>, ptr addrspace(3) %3813, align 2, !dbg !136
  %3990 = load <1 x bfloat>, ptr addrspace(3) %3815, align 2, !dbg !136
  %3991 = shufflevector <1 x bfloat> %3990, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3992 = load <1 x bfloat>, ptr addrspace(3) %3816, align 2, !dbg !136
  %3993 = shufflevector <1 x bfloat> %3992, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3994 = load <1 x bfloat>, ptr addrspace(3) %3817, align 2, !dbg !136
  %3995 = shufflevector <1 x bfloat> %3994, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3996 = load <1 x bfloat>, ptr addrspace(3) %3818, align 2, !dbg !136
  %3997 = shufflevector <1 x bfloat> %3996, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %3998 = load <1 x bfloat>, ptr addrspace(3) %3819, align 2, !dbg !136
  %3999 = shufflevector <1 x bfloat> %3998, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4000 = load <1 x bfloat>, ptr addrspace(3) %3820, align 2, !dbg !136
  %4001 = shufflevector <1 x bfloat> %4000, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4002 = load <1 x bfloat>, ptr addrspace(3) %3821, align 2, !dbg !136
  %4003 = shufflevector <1 x bfloat> %4002, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4004 = load <1 x bfloat>, ptr addrspace(3) %3822, align 2, !dbg !136
  %4005 = shufflevector <1 x bfloat> %4004, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4006 = load <1 x bfloat>, ptr addrspace(3) %3824, align 2, !dbg !136
  %4007 = shufflevector <1 x bfloat> %4006, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4008 = load <1 x bfloat>, ptr addrspace(3) %3825, align 2, !dbg !136
  %4009 = shufflevector <1 x bfloat> %4008, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4010 = load <1 x bfloat>, ptr addrspace(3) %3826, align 2, !dbg !136
  %4011 = shufflevector <1 x bfloat> %4010, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4012 = load <1 x bfloat>, ptr addrspace(3) %3827, align 2, !dbg !136
  %4013 = shufflevector <1 x bfloat> %4012, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4014 = load <1 x bfloat>, ptr addrspace(3) %3828, align 2, !dbg !136
  %4015 = shufflevector <1 x bfloat> %4014, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4016 = load <1 x bfloat>, ptr addrspace(3) %3829, align 2, !dbg !136
  %4017 = shufflevector <1 x bfloat> %4016, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4018 = load <1 x bfloat>, ptr addrspace(3) %3830, align 2, !dbg !136
  %4019 = shufflevector <1 x bfloat> %4018, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4020 = load <1 x bfloat>, ptr addrspace(3) %3831, align 2, !dbg !136
  %4021 = shufflevector <1 x bfloat> %4020, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4022 = load <1 x bfloat>, ptr addrspace(3) %3833, align 2, !dbg !136
  %4023 = shufflevector <1 x bfloat> %4022, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4024 = load <1 x bfloat>, ptr addrspace(3) %3834, align 2, !dbg !136
  %4025 = shufflevector <1 x bfloat> %4024, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4026 = load <1 x bfloat>, ptr addrspace(3) %3835, align 2, !dbg !136
  %4027 = shufflevector <1 x bfloat> %4026, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4028 = load <1 x bfloat>, ptr addrspace(3) %3836, align 2, !dbg !136
  %4029 = shufflevector <1 x bfloat> %4028, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4030 = load <1 x bfloat>, ptr addrspace(3) %3837, align 2, !dbg !136
  %4031 = shufflevector <1 x bfloat> %4030, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4032 = load <1 x bfloat>, ptr addrspace(3) %3838, align 2, !dbg !136
  %4033 = shufflevector <1 x bfloat> %4032, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4034 = load <1 x bfloat>, ptr addrspace(3) %3839, align 2, !dbg !136
  %4035 = shufflevector <1 x bfloat> %4034, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4036 = load <1 x bfloat>, ptr addrspace(3) %3840, align 2, !dbg !136
  %4037 = shufflevector <1 x bfloat> %4036, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4038 = load <1 x bfloat>, ptr addrspace(3) %3842, align 2, !dbg !136
  %4039 = load <1 x bfloat>, ptr addrspace(3) %3843, align 2, !dbg !136
  %4040 = load <1 x bfloat>, ptr addrspace(3) %3844, align 2, !dbg !136
  %4041 = load <1 x bfloat>, ptr addrspace(3) %3845, align 2, !dbg !136
  %4042 = load <1 x bfloat>, ptr addrspace(3) %3846, align 2, !dbg !136
  %4043 = load <1 x bfloat>, ptr addrspace(3) %3847, align 2, !dbg !136
  %4044 = load <1 x bfloat>, ptr addrspace(3) %3848, align 2, !dbg !136
  %4045 = load <1 x bfloat>, ptr addrspace(3) %3849, align 2, !dbg !136
  %4046 = load <1 x bfloat>, ptr addrspace(3) %3851, align 2, !dbg !136
  %4047 = shufflevector <1 x bfloat> %4046, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4048 = load <1 x bfloat>, ptr addrspace(3) %3852, align 2, !dbg !136
  %4049 = shufflevector <1 x bfloat> %4048, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4050 = load <1 x bfloat>, ptr addrspace(3) %3853, align 2, !dbg !136
  %4051 = shufflevector <1 x bfloat> %4050, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4052 = load <1 x bfloat>, ptr addrspace(3) %3854, align 2, !dbg !136
  %4053 = shufflevector <1 x bfloat> %4052, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4054 = load <1 x bfloat>, ptr addrspace(3) %3855, align 2, !dbg !136
  %4055 = shufflevector <1 x bfloat> %4054, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4056 = load <1 x bfloat>, ptr addrspace(3) %3856, align 2, !dbg !136
  %4057 = shufflevector <1 x bfloat> %4056, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4058 = load <1 x bfloat>, ptr addrspace(3) %3857, align 2, !dbg !136
  %4059 = shufflevector <1 x bfloat> %4058, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4060 = load <1 x bfloat>, ptr addrspace(3) %3858, align 2, !dbg !136
  %4061 = shufflevector <1 x bfloat> %4060, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4062 = load <1 x bfloat>, ptr addrspace(3) %3860, align 2, !dbg !136
  %4063 = shufflevector <1 x bfloat> %4062, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4064 = load <1 x bfloat>, ptr addrspace(3) %3861, align 2, !dbg !136
  %4065 = shufflevector <1 x bfloat> %4064, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4066 = load <1 x bfloat>, ptr addrspace(3) %3862, align 2, !dbg !136
  %4067 = shufflevector <1 x bfloat> %4066, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4068 = load <1 x bfloat>, ptr addrspace(3) %3863, align 2, !dbg !136
  %4069 = shufflevector <1 x bfloat> %4068, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4070 = load <1 x bfloat>, ptr addrspace(3) %3864, align 2, !dbg !136
  %4071 = shufflevector <1 x bfloat> %4070, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4072 = load <1 x bfloat>, ptr addrspace(3) %3865, align 2, !dbg !136
  %4073 = shufflevector <1 x bfloat> %4072, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4074 = load <1 x bfloat>, ptr addrspace(3) %3866, align 2, !dbg !136
  %4075 = shufflevector <1 x bfloat> %4074, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4076 = load <1 x bfloat>, ptr addrspace(3) %3867, align 2, !dbg !136
  %4077 = shufflevector <1 x bfloat> %4076, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4078 = load <1 x bfloat>, ptr addrspace(3) %3869, align 2, !dbg !136
  %4079 = shufflevector <1 x bfloat> %4078, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4080 = load <1 x bfloat>, ptr addrspace(3) %3870, align 2, !dbg !136
  %4081 = shufflevector <1 x bfloat> %4080, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4082 = load <1 x bfloat>, ptr addrspace(3) %3871, align 2, !dbg !136
  %4083 = shufflevector <1 x bfloat> %4082, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4084 = load <1 x bfloat>, ptr addrspace(3) %3872, align 2, !dbg !136
  %4085 = shufflevector <1 x bfloat> %4084, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4086 = load <1 x bfloat>, ptr addrspace(3) %3873, align 2, !dbg !136
  %4087 = shufflevector <1 x bfloat> %4086, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4088 = load <1 x bfloat>, ptr addrspace(3) %3874, align 2, !dbg !136
  %4089 = shufflevector <1 x bfloat> %4088, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4090 = load <1 x bfloat>, ptr addrspace(3) %3875, align 2, !dbg !136
  %4091 = shufflevector <1 x bfloat> %4090, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4092 = load <1 x bfloat>, ptr addrspace(3) %3876, align 2, !dbg !136
  %4093 = shufflevector <1 x bfloat> %4092, <1 x bfloat> poison, <8 x i32> <i32 0, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4094 = load <8 x bfloat>, ptr addrspace(3) %3879, align 16, !dbg !134
  %4095 = load <8 x bfloat>, ptr addrspace(3) %3881, align 16, !dbg !134
  %4096 = load <8 x bfloat>, ptr addrspace(3) %3883, align 16, !dbg !134
  %4097 = load <8 x bfloat>, ptr addrspace(3) %3885, align 16, !dbg !134
  %4098 = load <8 x bfloat>, ptr addrspace(3) %3887, align 16, !dbg !134
  %4099 = load <8 x bfloat>, ptr addrspace(3) %3889, align 16, !dbg !134
  %4100 = load <8 x bfloat>, ptr addrspace(3) %3891, align 16, !dbg !134
  %4101 = load <8 x bfloat>, ptr addrspace(3) %3893, align 16, !dbg !134
  %4102 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %3960, i16 %3776, i32 2147483646, i32 159744), !dbg !135
  %4103 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %4102, i32 %3966, i32 0, i32 0), !dbg !135
  %4104 = tail call <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) %4102, i32 %3969, i32 0, i32 0), !dbg !135
  %4105 = load <8 x bfloat>, ptr addrspace(3) %3894, align 16, !dbg !135
  %4106 = load <8 x bfloat>, ptr addrspace(3) %3895, align 16, !dbg !135
  %4107 = load <8 x bfloat>, ptr addrspace(3) %3896, align 16, !dbg !135
  %4108 = load <8 x bfloat>, ptr addrspace(3) %3897, align 16, !dbg !135
  %4109 = load <8 x bfloat>, ptr addrspace(3) %3898, align 16, !dbg !135
  %4110 = load <8 x bfloat>, ptr addrspace(3) %3899, align 16, !dbg !135
  %4111 = load <8 x bfloat>, ptr addrspace(3) %3900, align 16, !dbg !135
  %4112 = load <8 x bfloat>, ptr addrspace(3) %3901, align 16, !dbg !135
  %4113 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4094, <8 x bfloat> %3723, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !143
  %4114 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4096, <8 x bfloat> %3726, <16 x float> %4113, i32 0, i32 0, i32 0), !dbg !143
  %4115 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4098, <8 x bfloat> %3729, <16 x float> %4114, i32 0, i32 0, i32 0), !dbg !143
  %4116 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4100, <8 x bfloat> %3732, <16 x float> %4115, i32 0, i32 0, i32 0), !dbg !143
  %4117 = extractelement <16 x float> %4116, i64 0, !dbg !143
  %4118 = extractelement <16 x float> %4116, i64 1, !dbg !143
  %4119 = extractelement <16 x float> %4116, i64 2, !dbg !143
  %4120 = extractelement <16 x float> %4116, i64 3, !dbg !143
  %4121 = extractelement <16 x float> %4116, i64 4, !dbg !143
  %4122 = extractelement <16 x float> %4116, i64 5, !dbg !143
  %4123 = extractelement <16 x float> %4116, i64 6, !dbg !143
  %4124 = extractelement <16 x float> %4116, i64 7, !dbg !143
  %4125 = extractelement <16 x float> %4116, i64 8, !dbg !143
  %4126 = extractelement <16 x float> %4116, i64 9, !dbg !143
  %4127 = extractelement <16 x float> %4116, i64 10, !dbg !143
  %4128 = extractelement <16 x float> %4116, i64 11, !dbg !143
  %4129 = extractelement <16 x float> %4116, i64 12, !dbg !143
  %4130 = extractelement <16 x float> %4116, i64 13, !dbg !143
  %4131 = extractelement <16 x float> %4116, i64 14, !dbg !143
  %4132 = extractelement <16 x float> %4116, i64 15, !dbg !143
  %4133 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4095, <8 x bfloat> %3723, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !143
  %4134 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4097, <8 x bfloat> %3726, <16 x float> %4133, i32 0, i32 0, i32 0), !dbg !143
  %4135 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4099, <8 x bfloat> %3729, <16 x float> %4134, i32 0, i32 0, i32 0), !dbg !143
  %4136 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4101, <8 x bfloat> %3732, <16 x float> %4135, i32 0, i32 0, i32 0), !dbg !143
  %4137 = extractelement <16 x float> %4136, i64 0, !dbg !143
  %4138 = extractelement <16 x float> %4136, i64 1, !dbg !143
  %4139 = extractelement <16 x float> %4136, i64 2, !dbg !143
  %4140 = extractelement <16 x float> %4136, i64 3, !dbg !143
  %4141 = extractelement <16 x float> %4136, i64 4, !dbg !143
  %4142 = extractelement <16 x float> %4136, i64 5, !dbg !143
  %4143 = extractelement <16 x float> %4136, i64 6, !dbg !143
  %4144 = extractelement <16 x float> %4136, i64 7, !dbg !143
  %4145 = extractelement <16 x float> %4136, i64 8, !dbg !143
  %4146 = extractelement <16 x float> %4136, i64 9, !dbg !143
  %4147 = extractelement <16 x float> %4136, i64 10, !dbg !143
  %4148 = extractelement <16 x float> %4136, i64 11, !dbg !143
  %4149 = extractelement <16 x float> %4136, i64 12, !dbg !143
  %4150 = extractelement <16 x float> %4136, i64 13, !dbg !143
  %4151 = extractelement <16 x float> %4136, i64 14, !dbg !143
  %4152 = extractelement <16 x float> %4136, i64 15, !dbg !143
  %4153 = fmul float %4117, 0x3FE9884540000000, !dbg !144
  %4154 = fmul float %4118, 0x3FE9884540000000, !dbg !144
  %4155 = fmul float %4119, 0x3FE9884540000000, !dbg !144
  %4156 = fmul float %4120, 0x3FE9884540000000, !dbg !144
  %4157 = fmul float %4121, 0x3FE9884540000000, !dbg !144
  %4158 = fmul float %4122, 0x3FE9884540000000, !dbg !144
  %4159 = fmul float %4123, 0x3FE9884540000000, !dbg !144
  %4160 = fmul float %4124, 0x3FE9884540000000, !dbg !144
  %4161 = fmul float %4125, 0x3FE9884540000000, !dbg !144
  %4162 = fmul float %4126, 0x3FE9884540000000, !dbg !144
  %4163 = fmul float %4127, 0x3FE9884540000000, !dbg !144
  %4164 = fmul float %4128, 0x3FE9884540000000, !dbg !144
  %4165 = fmul float %4129, 0x3FE9884540000000, !dbg !144
  %4166 = fmul float %4130, 0x3FE9884540000000, !dbg !144
  %4167 = fmul float %4131, 0x3FE9884540000000, !dbg !144
  %4168 = fmul float %4132, 0x3FE9884540000000, !dbg !144
  %4169 = fmul float %4137, 0x3FE9884540000000, !dbg !144
  %4170 = fmul float %4138, 0x3FE9884540000000, !dbg !144
  %4171 = fmul float %4139, 0x3FE9884540000000, !dbg !144
  %4172 = fmul float %4140, 0x3FE9884540000000, !dbg !144
  %4173 = fmul float %4141, 0x3FE9884540000000, !dbg !144
  %4174 = fmul float %4142, 0x3FE9884540000000, !dbg !144
  %4175 = fmul float %4143, 0x3FE9884540000000, !dbg !144
  %4176 = fmul float %4144, 0x3FE9884540000000, !dbg !144
  %4177 = fmul float %4145, 0x3FE9884540000000, !dbg !144
  %4178 = fmul float %4146, 0x3FE9884540000000, !dbg !144
  %4179 = fmul float %4147, 0x3FE9884540000000, !dbg !144
  %4180 = fmul float %4148, 0x3FE9884540000000, !dbg !144
  %4181 = fmul float %4149, 0x3FE9884540000000, !dbg !144
  %4182 = fmul float %4150, 0x3FE9884540000000, !dbg !144
  %4183 = fmul float %4151, 0x3FE9884540000000, !dbg !144
  %4184 = fmul float %4152, 0x3FE9884540000000, !dbg !144
  %4185 = fmul float %4117, 0x3FA6E4E260000000, !dbg !145
  %4186 = fmul float %4118, 0x3FA6E4E260000000, !dbg !145
  %4187 = fmul float %4119, 0x3FA6E4E260000000, !dbg !145
  %4188 = fmul float %4120, 0x3FA6E4E260000000, !dbg !145
  %4189 = fmul float %4121, 0x3FA6E4E260000000, !dbg !145
  %4190 = fmul float %4122, 0x3FA6E4E260000000, !dbg !145
  %4191 = fmul float %4123, 0x3FA6E4E260000000, !dbg !145
  %4192 = fmul float %4124, 0x3FA6E4E260000000, !dbg !145
  %4193 = fmul float %4125, 0x3FA6E4E260000000, !dbg !145
  %4194 = fmul float %4126, 0x3FA6E4E260000000, !dbg !145
  %4195 = fmul float %4127, 0x3FA6E4E260000000, !dbg !145
  %4196 = fmul float %4128, 0x3FA6E4E260000000, !dbg !145
  %4197 = fmul float %4129, 0x3FA6E4E260000000, !dbg !145
  %4198 = fmul float %4130, 0x3FA6E4E260000000, !dbg !145
  %4199 = fmul float %4131, 0x3FA6E4E260000000, !dbg !145
  %4200 = fmul float %4132, 0x3FA6E4E260000000, !dbg !145
  %4201 = fmul float %4137, 0x3FA6E4E260000000, !dbg !145
  %4202 = fmul float %4138, 0x3FA6E4E260000000, !dbg !145
  %4203 = fmul float %4139, 0x3FA6E4E260000000, !dbg !145
  %4204 = fmul float %4140, 0x3FA6E4E260000000, !dbg !145
  %4205 = fmul float %4141, 0x3FA6E4E260000000, !dbg !145
  %4206 = fmul float %4142, 0x3FA6E4E260000000, !dbg !145
  %4207 = fmul float %4143, 0x3FA6E4E260000000, !dbg !145
  %4208 = fmul float %4144, 0x3FA6E4E260000000, !dbg !145
  %4209 = fmul float %4145, 0x3FA6E4E260000000, !dbg !145
  %4210 = fmul float %4146, 0x3FA6E4E260000000, !dbg !145
  %4211 = fmul float %4147, 0x3FA6E4E260000000, !dbg !145
  %4212 = fmul float %4148, 0x3FA6E4E260000000, !dbg !145
  %4213 = fmul float %4149, 0x3FA6E4E260000000, !dbg !145
  %4214 = fmul float %4150, 0x3FA6E4E260000000, !dbg !145
  %4215 = fmul float %4151, 0x3FA6E4E260000000, !dbg !145
  %4216 = fmul float %4152, 0x3FA6E4E260000000, !dbg !145
  %4217 = fmul float %4117, %4185, !dbg !146
  %4218 = fmul float %4118, %4186, !dbg !146
  %4219 = fmul float %4119, %4187, !dbg !146
  %4220 = fmul float %4120, %4188, !dbg !146
  %4221 = fmul float %4121, %4189, !dbg !146
  %4222 = fmul float %4122, %4190, !dbg !146
  %4223 = fmul float %4123, %4191, !dbg !146
  %4224 = fmul float %4124, %4192, !dbg !146
  %4225 = fmul float %4125, %4193, !dbg !146
  %4226 = fmul float %4126, %4194, !dbg !146
  %4227 = fmul float %4127, %4195, !dbg !146
  %4228 = fmul float %4128, %4196, !dbg !146
  %4229 = fmul float %4129, %4197, !dbg !146
  %4230 = fmul float %4130, %4198, !dbg !146
  %4231 = fmul float %4131, %4199, !dbg !146
  %4232 = fmul float %4132, %4200, !dbg !146
  %4233 = fmul float %4137, %4201, !dbg !146
  %4234 = fmul float %4138, %4202, !dbg !146
  %4235 = fmul float %4139, %4203, !dbg !146
  %4236 = fmul float %4140, %4204, !dbg !146
  %4237 = fmul float %4141, %4205, !dbg !146
  %4238 = fmul float %4142, %4206, !dbg !146
  %4239 = fmul float %4143, %4207, !dbg !146
  %4240 = fmul float %4144, %4208, !dbg !146
  %4241 = fmul float %4145, %4209, !dbg !146
  %4242 = fmul float %4146, %4210, !dbg !146
  %4243 = fmul float %4147, %4211, !dbg !146
  %4244 = fmul float %4148, %4212, !dbg !146
  %4245 = fmul float %4149, %4213, !dbg !146
  %4246 = fmul float %4150, %4214, !dbg !146
  %4247 = fmul float %4151, %4215, !dbg !146
  %4248 = fmul float %4152, %4216, !dbg !146
  %4249 = fadd float %4217, 1.000000e+00, !dbg !147
  %4250 = fadd float %4218, 1.000000e+00, !dbg !147
  %4251 = fadd float %4219, 1.000000e+00, !dbg !147
  %4252 = fadd float %4220, 1.000000e+00, !dbg !147
  %4253 = fadd float %4221, 1.000000e+00, !dbg !147
  %4254 = fadd float %4222, 1.000000e+00, !dbg !147
  %4255 = fadd float %4223, 1.000000e+00, !dbg !147
  %4256 = fadd float %4224, 1.000000e+00, !dbg !147
  %4257 = fadd float %4225, 1.000000e+00, !dbg !147
  %4258 = fadd float %4226, 1.000000e+00, !dbg !147
  %4259 = fadd float %4227, 1.000000e+00, !dbg !147
  %4260 = fadd float %4228, 1.000000e+00, !dbg !147
  %4261 = fadd float %4229, 1.000000e+00, !dbg !147
  %4262 = fadd float %4230, 1.000000e+00, !dbg !147
  %4263 = fadd float %4231, 1.000000e+00, !dbg !147
  %4264 = fadd float %4232, 1.000000e+00, !dbg !147
  %4265 = fadd float %4233, 1.000000e+00, !dbg !147
  %4266 = fadd float %4234, 1.000000e+00, !dbg !147
  %4267 = fadd float %4235, 1.000000e+00, !dbg !147
  %4268 = fadd float %4236, 1.000000e+00, !dbg !147
  %4269 = fadd float %4237, 1.000000e+00, !dbg !147
  %4270 = fadd float %4238, 1.000000e+00, !dbg !147
  %4271 = fadd float %4239, 1.000000e+00, !dbg !147
  %4272 = fadd float %4240, 1.000000e+00, !dbg !147
  %4273 = fadd float %4241, 1.000000e+00, !dbg !147
  %4274 = fadd float %4242, 1.000000e+00, !dbg !147
  %4275 = fadd float %4243, 1.000000e+00, !dbg !147
  %4276 = fadd float %4244, 1.000000e+00, !dbg !147
  %4277 = fadd float %4245, 1.000000e+00, !dbg !147
  %4278 = fadd float %4246, 1.000000e+00, !dbg !147
  %4279 = fadd float %4247, 1.000000e+00, !dbg !147
  %4280 = fadd float %4248, 1.000000e+00, !dbg !147
  %4281 = fmul float %4153, %4249, !dbg !148
  %4282 = fmul float %4154, %4250, !dbg !148
  %4283 = fmul float %4155, %4251, !dbg !148
  %4284 = fmul float %4156, %4252, !dbg !148
  %4285 = fmul float %4157, %4253, !dbg !148
  %4286 = fmul float %4158, %4254, !dbg !148
  %4287 = fmul float %4159, %4255, !dbg !148
  %4288 = fmul float %4160, %4256, !dbg !148
  %4289 = fmul float %4161, %4257, !dbg !148
  %4290 = fmul float %4162, %4258, !dbg !148
  %4291 = fmul float %4163, %4259, !dbg !148
  %4292 = fmul float %4164, %4260, !dbg !148
  %4293 = fmul float %4165, %4261, !dbg !148
  %4294 = fmul float %4166, %4262, !dbg !148
  %4295 = fmul float %4167, %4263, !dbg !148
  %4296 = fmul float %4168, %4264, !dbg !148
  %4297 = fmul float %4169, %4265, !dbg !148
  %4298 = fmul float %4170, %4266, !dbg !148
  %4299 = fmul float %4171, %4267, !dbg !148
  %4300 = fmul float %4172, %4268, !dbg !148
  %4301 = fmul float %4173, %4269, !dbg !148
  %4302 = fmul float %4174, %4270, !dbg !148
  %4303 = fmul float %4175, %4271, !dbg !148
  %4304 = fmul float %4176, %4272, !dbg !148
  %4305 = fmul float %4177, %4273, !dbg !148
  %4306 = fmul float %4178, %4274, !dbg !148
  %4307 = fmul float %4179, %4275, !dbg !148
  %4308 = fmul float %4180, %4276, !dbg !148
  %4309 = fmul float %4181, %4277, !dbg !148
  %4310 = fmul float %4182, %4278, !dbg !148
  %4311 = fmul float %4183, %4279, !dbg !148
  %4312 = fmul float %4184, %4280, !dbg !148
  %4313 = fmul float %4281, 2.000000e+00, !dbg !87
  %4314 = fmul float %4282, 2.000000e+00, !dbg !87
  %4315 = fmul float %4283, 2.000000e+00, !dbg !87
  %4316 = fmul float %4284, 2.000000e+00, !dbg !87
  %4317 = fmul float %4285, 2.000000e+00, !dbg !87
  %4318 = fmul float %4286, 2.000000e+00, !dbg !87
  %4319 = fmul float %4287, 2.000000e+00, !dbg !87
  %4320 = fmul float %4288, 2.000000e+00, !dbg !87
  %4321 = fmul float %4289, 2.000000e+00, !dbg !87
  %4322 = fmul float %4290, 2.000000e+00, !dbg !87
  %4323 = fmul float %4291, 2.000000e+00, !dbg !87
  %4324 = fmul float %4292, 2.000000e+00, !dbg !87
  %4325 = fmul float %4293, 2.000000e+00, !dbg !87
  %4326 = fmul float %4294, 2.000000e+00, !dbg !87
  %4327 = fmul float %4295, 2.000000e+00, !dbg !87
  %4328 = fmul float %4296, 2.000000e+00, !dbg !87
  %4329 = fmul float %4297, 2.000000e+00, !dbg !87
  %4330 = fmul float %4298, 2.000000e+00, !dbg !87
  %4331 = fmul float %4299, 2.000000e+00, !dbg !87
  %4332 = fmul float %4300, 2.000000e+00, !dbg !87
  %4333 = fmul float %4301, 2.000000e+00, !dbg !87
  %4334 = fmul float %4302, 2.000000e+00, !dbg !87
  %4335 = fmul float %4303, 2.000000e+00, !dbg !87
  %4336 = fmul float %4304, 2.000000e+00, !dbg !87
  %4337 = fmul float %4305, 2.000000e+00, !dbg !87
  %4338 = fmul float %4306, 2.000000e+00, !dbg !87
  %4339 = fmul float %4307, 2.000000e+00, !dbg !87
  %4340 = fmul float %4308, 2.000000e+00, !dbg !87
  %4341 = fmul float %4309, 2.000000e+00, !dbg !87
  %4342 = fmul float %4310, 2.000000e+00, !dbg !87
  %4343 = fmul float %4311, 2.000000e+00, !dbg !87
  %4344 = fmul float %4312, 2.000000e+00, !dbg !87
  %4345 = fsub float 0.000000e+00, %4313, !dbg !90
  %4346 = fsub float 0.000000e+00, %4314, !dbg !90
  %4347 = fsub float 0.000000e+00, %4315, !dbg !90
  %4348 = fsub float 0.000000e+00, %4316, !dbg !90
  %4349 = fsub float 0.000000e+00, %4317, !dbg !90
  %4350 = fsub float 0.000000e+00, %4318, !dbg !90
  %4351 = fsub float 0.000000e+00, %4319, !dbg !90
  %4352 = fsub float 0.000000e+00, %4320, !dbg !90
  %4353 = fsub float 0.000000e+00, %4321, !dbg !90
  %4354 = fsub float 0.000000e+00, %4322, !dbg !90
  %4355 = fsub float 0.000000e+00, %4323, !dbg !90
  %4356 = fsub float 0.000000e+00, %4324, !dbg !90
  %4357 = fsub float 0.000000e+00, %4325, !dbg !90
  %4358 = fsub float 0.000000e+00, %4326, !dbg !90
  %4359 = fsub float 0.000000e+00, %4327, !dbg !90
  %4360 = fsub float 0.000000e+00, %4328, !dbg !90
  %4361 = fsub float 0.000000e+00, %4329, !dbg !90
  %4362 = fsub float 0.000000e+00, %4330, !dbg !90
  %4363 = fsub float 0.000000e+00, %4331, !dbg !90
  %4364 = fsub float 0.000000e+00, %4332, !dbg !90
  %4365 = fsub float 0.000000e+00, %4333, !dbg !90
  %4366 = fsub float 0.000000e+00, %4334, !dbg !90
  %4367 = fsub float 0.000000e+00, %4335, !dbg !90
  %4368 = fsub float 0.000000e+00, %4336, !dbg !90
  %4369 = fsub float 0.000000e+00, %4337, !dbg !90
  %4370 = fsub float 0.000000e+00, %4338, !dbg !90
  %4371 = fsub float 0.000000e+00, %4339, !dbg !90
  %4372 = fsub float 0.000000e+00, %4340, !dbg !90
  %4373 = fsub float 0.000000e+00, %4341, !dbg !90
  %4374 = fsub float 0.000000e+00, %4342, !dbg !90
  %4375 = fsub float 0.000000e+00, %4343, !dbg !90
  %4376 = fsub float 0.000000e+00, %4344, !dbg !90
  %4377 = fmul float %4345, 0x3FF7154760000000, !dbg !91
  %4378 = tail call float @llvm.exp2.f32(float %4377), !dbg !91
  %4379 = fmul float %4346, 0x3FF7154760000000, !dbg !91
  %4380 = tail call float @llvm.exp2.f32(float %4379), !dbg !91
  %4381 = fmul float %4347, 0x3FF7154760000000, !dbg !91
  %4382 = tail call float @llvm.exp2.f32(float %4381), !dbg !91
  %4383 = fmul float %4348, 0x3FF7154760000000, !dbg !91
  %4384 = tail call float @llvm.exp2.f32(float %4383), !dbg !91
  %4385 = fmul float %4349, 0x3FF7154760000000, !dbg !91
  %4386 = tail call float @llvm.exp2.f32(float %4385), !dbg !91
  %4387 = fmul float %4350, 0x3FF7154760000000, !dbg !91
  %4388 = tail call float @llvm.exp2.f32(float %4387), !dbg !91
  %4389 = fmul float %4351, 0x3FF7154760000000, !dbg !91
  %4390 = tail call float @llvm.exp2.f32(float %4389), !dbg !91
  %4391 = fmul float %4352, 0x3FF7154760000000, !dbg !91
  %4392 = tail call float @llvm.exp2.f32(float %4391), !dbg !91
  %4393 = fmul float %4353, 0x3FF7154760000000, !dbg !91
  %4394 = tail call float @llvm.exp2.f32(float %4393), !dbg !91
  %4395 = fmul float %4354, 0x3FF7154760000000, !dbg !91
  %4396 = tail call float @llvm.exp2.f32(float %4395), !dbg !91
  %4397 = fmul float %4355, 0x3FF7154760000000, !dbg !91
  %4398 = tail call float @llvm.exp2.f32(float %4397), !dbg !91
  %4399 = fmul float %4356, 0x3FF7154760000000, !dbg !91
  %4400 = tail call float @llvm.exp2.f32(float %4399), !dbg !91
  %4401 = fmul float %4357, 0x3FF7154760000000, !dbg !91
  %4402 = tail call float @llvm.exp2.f32(float %4401), !dbg !91
  %4403 = fmul float %4358, 0x3FF7154760000000, !dbg !91
  %4404 = tail call float @llvm.exp2.f32(float %4403), !dbg !91
  %4405 = fmul float %4359, 0x3FF7154760000000, !dbg !91
  %4406 = tail call float @llvm.exp2.f32(float %4405), !dbg !91
  %4407 = fmul float %4360, 0x3FF7154760000000, !dbg !91
  %4408 = tail call float @llvm.exp2.f32(float %4407), !dbg !91
  %4409 = fmul float %4361, 0x3FF7154760000000, !dbg !91
  %4410 = tail call float @llvm.exp2.f32(float %4409), !dbg !91
  %4411 = fmul float %4362, 0x3FF7154760000000, !dbg !91
  %4412 = tail call float @llvm.exp2.f32(float %4411), !dbg !91
  %4413 = fmul float %4363, 0x3FF7154760000000, !dbg !91
  %4414 = tail call float @llvm.exp2.f32(float %4413), !dbg !91
  %4415 = fmul float %4364, 0x3FF7154760000000, !dbg !91
  %4416 = tail call float @llvm.exp2.f32(float %4415), !dbg !91
  %4417 = fmul float %4365, 0x3FF7154760000000, !dbg !91
  %4418 = tail call float @llvm.exp2.f32(float %4417), !dbg !91
  %4419 = fmul float %4366, 0x3FF7154760000000, !dbg !91
  %4420 = tail call float @llvm.exp2.f32(float %4419), !dbg !91
  %4421 = fmul float %4367, 0x3FF7154760000000, !dbg !91
  %4422 = tail call float @llvm.exp2.f32(float %4421), !dbg !91
  %4423 = fmul float %4368, 0x3FF7154760000000, !dbg !91
  %4424 = tail call float @llvm.exp2.f32(float %4423), !dbg !91
  %4425 = fmul float %4369, 0x3FF7154760000000, !dbg !91
  %4426 = tail call float @llvm.exp2.f32(float %4425), !dbg !91
  %4427 = fmul float %4370, 0x3FF7154760000000, !dbg !91
  %4428 = tail call float @llvm.exp2.f32(float %4427), !dbg !91
  %4429 = fmul float %4371, 0x3FF7154760000000, !dbg !91
  %4430 = tail call float @llvm.exp2.f32(float %4429), !dbg !91
  %4431 = fmul float %4372, 0x3FF7154760000000, !dbg !91
  %4432 = tail call float @llvm.exp2.f32(float %4431), !dbg !91
  %4433 = fmul float %4373, 0x3FF7154760000000, !dbg !91
  %4434 = tail call float @llvm.exp2.f32(float %4433), !dbg !91
  %4435 = fmul float %4374, 0x3FF7154760000000, !dbg !91
  %4436 = tail call float @llvm.exp2.f32(float %4435), !dbg !91
  %4437 = fmul float %4375, 0x3FF7154760000000, !dbg !91
  %4438 = tail call float @llvm.exp2.f32(float %4437), !dbg !91
  %4439 = fmul float %4376, 0x3FF7154760000000, !dbg !91
  %4440 = tail call float @llvm.exp2.f32(float %4439), !dbg !91
  %4441 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4105, <8 x bfloat> %3760, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !149
  %4442 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4107, <8 x bfloat> %3761, <16 x float> %4441, i32 0, i32 0, i32 0), !dbg !149
  %4443 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4109, <8 x bfloat> %3762, <16 x float> %4442, i32 0, i32 0, i32 0), !dbg !149
  %4444 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4111, <8 x bfloat> %3763, <16 x float> %4443, i32 0, i32 0, i32 0), !dbg !149
  %4445 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4106, <8 x bfloat> %3760, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !149
  %4446 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4108, <8 x bfloat> %3761, <16 x float> %4445, i32 0, i32 0, i32 0), !dbg !149
  %4447 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4110, <8 x bfloat> %3762, <16 x float> %4446, i32 0, i32 0, i32 0), !dbg !149
  %4448 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4112, <8 x bfloat> %3763, <16 x float> %4447, i32 0, i32 0, i32 0), !dbg !149
  %4449 = insertelement <2 x float> poison, float %4378, i64 0, !dbg !93
  %4450 = insertelement <2 x float> %4449, float %4380, i64 1, !dbg !93
  %4451 = fadd <2 x float> %4450, splat (float 1.000000e+00), !dbg !93
  %4452 = fdiv <2 x float> splat (float 1.000000e+00), %4451, !dbg !94
  %4453 = fmul <2 x float> %4452, splat (float 2.000000e+00), !dbg !95
  %4454 = fadd <2 x float> %4453, splat (float -1.000000e+00), !dbg !96
  %4455 = shufflevector <16 x float> %4116, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !150
  %4456 = fmul <2 x float> %4455, splat (float 5.000000e-01), !dbg !150
  %4457 = fmul <2 x float> %4454, %4454, !dbg !151
  %4458 = fsub <2 x float> splat (float 1.000000e+00), %4457, !dbg !152
  %4459 = fmul <2 x float> %4455, splat (float 0x3FBB6676C0000000), !dbg !153
  %4460 = fmul <2 x float> %4455, %4459, !dbg !154
  %4461 = fadd <2 x float> %4460, splat (float 0x3FE9884540000000), !dbg !155
  %4462 = fmul <2 x float> %4461, %4458, !dbg !156
  %4463 = fmul <2 x float> %4456, %4462, !dbg !157
  %4464 = fadd <2 x float> %4454, splat (float 1.000000e+00), !dbg !158
  %4465 = fmul <2 x float> %4464, splat (float 5.000000e-01), !dbg !159
  %4466 = fadd <2 x float> %4465, %4463, !dbg !160
  %4467 = fmul <2 x float> %3912, %4466, !dbg !138
  %4468 = shufflevector <16 x float> %4444, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !161
  %4469 = fmul <2 x float> %4468, %4467, !dbg !161
  %4470 = insertelement <2 x float> poison, float %4382, i64 0, !dbg !93
  %4471 = insertelement <2 x float> %4470, float %4384, i64 1, !dbg !93
  %4472 = fadd <2 x float> %4471, splat (float 1.000000e+00), !dbg !93
  %4473 = fdiv <2 x float> splat (float 1.000000e+00), %4472, !dbg !94
  %4474 = fmul <2 x float> %4473, splat (float 2.000000e+00), !dbg !95
  %4475 = fadd <2 x float> %4474, splat (float -1.000000e+00), !dbg !96
  %4476 = shufflevector <16 x float> %4116, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !150
  %4477 = fmul <2 x float> %4476, splat (float 5.000000e-01), !dbg !150
  %4478 = fmul <2 x float> %4475, %4475, !dbg !151
  %4479 = fsub <2 x float> splat (float 1.000000e+00), %4478, !dbg !152
  %4480 = fmul <2 x float> %4476, splat (float 0x3FBB6676C0000000), !dbg !153
  %4481 = fmul <2 x float> %4476, %4480, !dbg !154
  %4482 = fadd <2 x float> %4481, splat (float 0x3FE9884540000000), !dbg !155
  %4483 = fmul <2 x float> %4482, %4479, !dbg !156
  %4484 = fmul <2 x float> %4477, %4483, !dbg !157
  %4485 = fadd <2 x float> %4475, splat (float 1.000000e+00), !dbg !158
  %4486 = fmul <2 x float> %4485, splat (float 5.000000e-01), !dbg !159
  %4487 = fadd <2 x float> %4486, %4484, !dbg !160
  %4488 = fmul <2 x float> %3912, %4487, !dbg !138
  %4489 = shufflevector <16 x float> %4444, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !161
  %4490 = fmul <2 x float> %4489, %4488, !dbg !161
  %4491 = insertelement <2 x float> poison, float %4386, i64 0, !dbg !93
  %4492 = insertelement <2 x float> %4491, float %4388, i64 1, !dbg !93
  %4493 = fadd <2 x float> %4492, splat (float 1.000000e+00), !dbg !93
  %4494 = fdiv <2 x float> splat (float 1.000000e+00), %4493, !dbg !94
  %4495 = fmul <2 x float> %4494, splat (float 2.000000e+00), !dbg !95
  %4496 = fadd <2 x float> %4495, splat (float -1.000000e+00), !dbg !96
  %4497 = shufflevector <16 x float> %4116, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !150
  %4498 = fmul <2 x float> %4497, splat (float 5.000000e-01), !dbg !150
  %4499 = fmul <2 x float> %4496, %4496, !dbg !151
  %4500 = fsub <2 x float> splat (float 1.000000e+00), %4499, !dbg !152
  %4501 = fmul <2 x float> %4497, splat (float 0x3FBB6676C0000000), !dbg !153
  %4502 = fmul <2 x float> %4497, %4501, !dbg !154
  %4503 = fadd <2 x float> %4502, splat (float 0x3FE9884540000000), !dbg !155
  %4504 = fmul <2 x float> %4503, %4500, !dbg !156
  %4505 = fmul <2 x float> %4498, %4504, !dbg !157
  %4506 = fadd <2 x float> %4496, splat (float 1.000000e+00), !dbg !158
  %4507 = fmul <2 x float> %4506, splat (float 5.000000e-01), !dbg !159
  %4508 = fadd <2 x float> %4507, %4505, !dbg !160
  %4509 = fmul <2 x float> %3912, %4508, !dbg !138
  %4510 = shufflevector <16 x float> %4444, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !161
  %4511 = fmul <2 x float> %4510, %4509, !dbg !161
  %4512 = insertelement <2 x float> poison, float %4390, i64 0, !dbg !93
  %4513 = insertelement <2 x float> %4512, float %4392, i64 1, !dbg !93
  %4514 = fadd <2 x float> %4513, splat (float 1.000000e+00), !dbg !93
  %4515 = fdiv <2 x float> splat (float 1.000000e+00), %4514, !dbg !94
  %4516 = fmul <2 x float> %4515, splat (float 2.000000e+00), !dbg !95
  %4517 = fadd <2 x float> %4516, splat (float -1.000000e+00), !dbg !96
  %4518 = shufflevector <16 x float> %4116, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !150
  %4519 = fmul <2 x float> %4518, splat (float 5.000000e-01), !dbg !150
  %4520 = fmul <2 x float> %4517, %4517, !dbg !151
  %4521 = fsub <2 x float> splat (float 1.000000e+00), %4520, !dbg !152
  %4522 = fmul <2 x float> %4518, splat (float 0x3FBB6676C0000000), !dbg !153
  %4523 = fmul <2 x float> %4518, %4522, !dbg !154
  %4524 = fadd <2 x float> %4523, splat (float 0x3FE9884540000000), !dbg !155
  %4525 = fmul <2 x float> %4524, %4521, !dbg !156
  %4526 = fmul <2 x float> %4519, %4525, !dbg !157
  %4527 = fadd <2 x float> %4517, splat (float 1.000000e+00), !dbg !158
  %4528 = fmul <2 x float> %4527, splat (float 5.000000e-01), !dbg !159
  %4529 = fadd <2 x float> %4528, %4526, !dbg !160
  %4530 = fmul <2 x float> %3912, %4529, !dbg !138
  %4531 = shufflevector <16 x float> %4444, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !161
  %4532 = fmul <2 x float> %4531, %4530, !dbg !161
  %4533 = insertelement <2 x float> poison, float %4394, i64 0, !dbg !93
  %4534 = insertelement <2 x float> %4533, float %4396, i64 1, !dbg !93
  %4535 = fadd <2 x float> %4534, splat (float 1.000000e+00), !dbg !93
  %4536 = fdiv <2 x float> splat (float 1.000000e+00), %4535, !dbg !94
  %4537 = fmul <2 x float> %4536, splat (float 2.000000e+00), !dbg !95
  %4538 = fadd <2 x float> %4537, splat (float -1.000000e+00), !dbg !96
  %4539 = shufflevector <16 x float> %4116, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !150
  %4540 = fmul <2 x float> %4539, splat (float 5.000000e-01), !dbg !150
  %4541 = fmul <2 x float> %4538, %4538, !dbg !151
  %4542 = fsub <2 x float> splat (float 1.000000e+00), %4541, !dbg !152
  %4543 = fmul <2 x float> %4539, splat (float 0x3FBB6676C0000000), !dbg !153
  %4544 = fmul <2 x float> %4539, %4543, !dbg !154
  %4545 = fadd <2 x float> %4544, splat (float 0x3FE9884540000000), !dbg !155
  %4546 = fmul <2 x float> %4545, %4542, !dbg !156
  %4547 = fmul <2 x float> %4540, %4546, !dbg !157
  %4548 = fadd <2 x float> %4538, splat (float 1.000000e+00), !dbg !158
  %4549 = fmul <2 x float> %4548, splat (float 5.000000e-01), !dbg !159
  %4550 = fadd <2 x float> %4549, %4547, !dbg !160
  %4551 = fmul <2 x float> %3912, %4550, !dbg !138
  %4552 = shufflevector <16 x float> %4444, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !161
  %4553 = fmul <2 x float> %4552, %4551, !dbg !161
  %4554 = insertelement <2 x float> poison, float %4398, i64 0, !dbg !93
  %4555 = insertelement <2 x float> %4554, float %4400, i64 1, !dbg !93
  %4556 = fadd <2 x float> %4555, splat (float 1.000000e+00), !dbg !93
  %4557 = fdiv <2 x float> splat (float 1.000000e+00), %4556, !dbg !94
  %4558 = fmul <2 x float> %4557, splat (float 2.000000e+00), !dbg !95
  %4559 = fadd <2 x float> %4558, splat (float -1.000000e+00), !dbg !96
  %4560 = shufflevector <16 x float> %4116, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !150
  %4561 = fmul <2 x float> %4560, splat (float 5.000000e-01), !dbg !150
  %4562 = fmul <2 x float> %4559, %4559, !dbg !151
  %4563 = fsub <2 x float> splat (float 1.000000e+00), %4562, !dbg !152
  %4564 = fmul <2 x float> %4560, splat (float 0x3FBB6676C0000000), !dbg !153
  %4565 = fmul <2 x float> %4560, %4564, !dbg !154
  %4566 = fadd <2 x float> %4565, splat (float 0x3FE9884540000000), !dbg !155
  %4567 = fmul <2 x float> %4566, %4563, !dbg !156
  %4568 = fmul <2 x float> %4561, %4567, !dbg !157
  %4569 = fadd <2 x float> %4559, splat (float 1.000000e+00), !dbg !158
  %4570 = fmul <2 x float> %4569, splat (float 5.000000e-01), !dbg !159
  %4571 = fadd <2 x float> %4570, %4568, !dbg !160
  %4572 = fmul <2 x float> %3912, %4571, !dbg !138
  %4573 = shufflevector <16 x float> %4444, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !161
  %4574 = fmul <2 x float> %4573, %4572, !dbg !161
  %4575 = insertelement <2 x float> poison, float %4402, i64 0, !dbg !93
  %4576 = insertelement <2 x float> %4575, float %4404, i64 1, !dbg !93
  %4577 = fadd <2 x float> %4576, splat (float 1.000000e+00), !dbg !93
  %4578 = fdiv <2 x float> splat (float 1.000000e+00), %4577, !dbg !94
  %4579 = fmul <2 x float> %4578, splat (float 2.000000e+00), !dbg !95
  %4580 = fadd <2 x float> %4579, splat (float -1.000000e+00), !dbg !96
  %4581 = shufflevector <16 x float> %4116, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !150
  %4582 = fmul <2 x float> %4581, splat (float 5.000000e-01), !dbg !150
  %4583 = fmul <2 x float> %4580, %4580, !dbg !151
  %4584 = fsub <2 x float> splat (float 1.000000e+00), %4583, !dbg !152
  %4585 = fmul <2 x float> %4581, splat (float 0x3FBB6676C0000000), !dbg !153
  %4586 = fmul <2 x float> %4581, %4585, !dbg !154
  %4587 = fadd <2 x float> %4586, splat (float 0x3FE9884540000000), !dbg !155
  %4588 = fmul <2 x float> %4587, %4584, !dbg !156
  %4589 = fmul <2 x float> %4582, %4588, !dbg !157
  %4590 = fadd <2 x float> %4580, splat (float 1.000000e+00), !dbg !158
  %4591 = fmul <2 x float> %4590, splat (float 5.000000e-01), !dbg !159
  %4592 = fadd <2 x float> %4591, %4589, !dbg !160
  %4593 = fmul <2 x float> %3912, %4592, !dbg !138
  %4594 = shufflevector <16 x float> %4444, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !161
  %4595 = fmul <2 x float> %4594, %4593, !dbg !161
  %4596 = insertelement <2 x float> poison, float %4406, i64 0, !dbg !93
  %4597 = insertelement <2 x float> %4596, float %4408, i64 1, !dbg !93
  %4598 = fadd <2 x float> %4597, splat (float 1.000000e+00), !dbg !93
  %4599 = fdiv <2 x float> splat (float 1.000000e+00), %4598, !dbg !94
  %4600 = fmul <2 x float> %4599, splat (float 2.000000e+00), !dbg !95
  %4601 = fadd <2 x float> %4600, splat (float -1.000000e+00), !dbg !96
  %4602 = shufflevector <16 x float> %4116, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !150
  %4603 = fmul <2 x float> %4602, splat (float 5.000000e-01), !dbg !150
  %4604 = fmul <2 x float> %4601, %4601, !dbg !151
  %4605 = fsub <2 x float> splat (float 1.000000e+00), %4604, !dbg !152
  %4606 = fmul <2 x float> %4602, splat (float 0x3FBB6676C0000000), !dbg !153
  %4607 = fmul <2 x float> %4602, %4606, !dbg !154
  %4608 = fadd <2 x float> %4607, splat (float 0x3FE9884540000000), !dbg !155
  %4609 = fmul <2 x float> %4608, %4605, !dbg !156
  %4610 = fmul <2 x float> %4603, %4609, !dbg !157
  %4611 = fadd <2 x float> %4601, splat (float 1.000000e+00), !dbg !158
  %4612 = fmul <2 x float> %4611, splat (float 5.000000e-01), !dbg !159
  %4613 = fadd <2 x float> %4612, %4610, !dbg !160
  %4614 = fmul <2 x float> %3912, %4613, !dbg !138
  %4615 = shufflevector <16 x float> %4444, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !161
  %4616 = fmul <2 x float> %4615, %4614, !dbg !161
  %4617 = insertelement <2 x float> poison, float %4410, i64 0, !dbg !93
  %4618 = insertelement <2 x float> %4617, float %4412, i64 1, !dbg !93
  %4619 = fadd <2 x float> %4618, splat (float 1.000000e+00), !dbg !93
  %4620 = fdiv <2 x float> splat (float 1.000000e+00), %4619, !dbg !94
  %4621 = fmul <2 x float> %4620, splat (float 2.000000e+00), !dbg !95
  %4622 = fadd <2 x float> %4621, splat (float -1.000000e+00), !dbg !96
  %4623 = shufflevector <16 x float> %4136, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !150
  %4624 = fmul <2 x float> %4623, splat (float 5.000000e-01), !dbg !150
  %4625 = fmul <2 x float> %4622, %4622, !dbg !151
  %4626 = fsub <2 x float> splat (float 1.000000e+00), %4625, !dbg !152
  %4627 = fmul <2 x float> %4623, splat (float 0x3FBB6676C0000000), !dbg !153
  %4628 = fmul <2 x float> %4623, %4627, !dbg !154
  %4629 = fadd <2 x float> %4628, splat (float 0x3FE9884540000000), !dbg !155
  %4630 = fmul <2 x float> %4629, %4626, !dbg !156
  %4631 = fmul <2 x float> %4624, %4630, !dbg !157
  %4632 = fadd <2 x float> %4622, splat (float 1.000000e+00), !dbg !158
  %4633 = fmul <2 x float> %4632, splat (float 5.000000e-01), !dbg !159
  %4634 = fadd <2 x float> %4633, %4631, !dbg !160
  %4635 = fmul <2 x float> %3912, %4634, !dbg !138
  %4636 = shufflevector <16 x float> %4448, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !161
  %4637 = fmul <2 x float> %4636, %4635, !dbg !161
  %4638 = insertelement <2 x float> poison, float %4414, i64 0, !dbg !93
  %4639 = insertelement <2 x float> %4638, float %4416, i64 1, !dbg !93
  %4640 = fadd <2 x float> %4639, splat (float 1.000000e+00), !dbg !93
  %4641 = fdiv <2 x float> splat (float 1.000000e+00), %4640, !dbg !94
  %4642 = fmul <2 x float> %4641, splat (float 2.000000e+00), !dbg !95
  %4643 = fadd <2 x float> %4642, splat (float -1.000000e+00), !dbg !96
  %4644 = shufflevector <16 x float> %4136, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !150
  %4645 = fmul <2 x float> %4644, splat (float 5.000000e-01), !dbg !150
  %4646 = fmul <2 x float> %4643, %4643, !dbg !151
  %4647 = fsub <2 x float> splat (float 1.000000e+00), %4646, !dbg !152
  %4648 = fmul <2 x float> %4644, splat (float 0x3FBB6676C0000000), !dbg !153
  %4649 = fmul <2 x float> %4644, %4648, !dbg !154
  %4650 = fadd <2 x float> %4649, splat (float 0x3FE9884540000000), !dbg !155
  %4651 = fmul <2 x float> %4650, %4647, !dbg !156
  %4652 = fmul <2 x float> %4645, %4651, !dbg !157
  %4653 = fadd <2 x float> %4643, splat (float 1.000000e+00), !dbg !158
  %4654 = fmul <2 x float> %4653, splat (float 5.000000e-01), !dbg !159
  %4655 = fadd <2 x float> %4654, %4652, !dbg !160
  %4656 = fmul <2 x float> %3912, %4655, !dbg !138
  %4657 = shufflevector <16 x float> %4448, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !161
  %4658 = fmul <2 x float> %4657, %4656, !dbg !161
  %4659 = insertelement <2 x float> poison, float %4418, i64 0, !dbg !93
  %4660 = insertelement <2 x float> %4659, float %4420, i64 1, !dbg !93
  %4661 = fadd <2 x float> %4660, splat (float 1.000000e+00), !dbg !93
  %4662 = fdiv <2 x float> splat (float 1.000000e+00), %4661, !dbg !94
  %4663 = fmul <2 x float> %4662, splat (float 2.000000e+00), !dbg !95
  %4664 = fadd <2 x float> %4663, splat (float -1.000000e+00), !dbg !96
  %4665 = shufflevector <16 x float> %4136, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !150
  %4666 = fmul <2 x float> %4665, splat (float 5.000000e-01), !dbg !150
  %4667 = fmul <2 x float> %4664, %4664, !dbg !151
  %4668 = fsub <2 x float> splat (float 1.000000e+00), %4667, !dbg !152
  %4669 = fmul <2 x float> %4665, splat (float 0x3FBB6676C0000000), !dbg !153
  %4670 = fmul <2 x float> %4665, %4669, !dbg !154
  %4671 = fadd <2 x float> %4670, splat (float 0x3FE9884540000000), !dbg !155
  %4672 = fmul <2 x float> %4671, %4668, !dbg !156
  %4673 = fmul <2 x float> %4666, %4672, !dbg !157
  %4674 = fadd <2 x float> %4664, splat (float 1.000000e+00), !dbg !158
  %4675 = fmul <2 x float> %4674, splat (float 5.000000e-01), !dbg !159
  %4676 = fadd <2 x float> %4675, %4673, !dbg !160
  %4677 = fmul <2 x float> %3912, %4676, !dbg !138
  %4678 = shufflevector <16 x float> %4448, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !161
  %4679 = fmul <2 x float> %4678, %4677, !dbg !161
  %4680 = insertelement <2 x float> poison, float %4422, i64 0, !dbg !93
  %4681 = insertelement <2 x float> %4680, float %4424, i64 1, !dbg !93
  %4682 = fadd <2 x float> %4681, splat (float 1.000000e+00), !dbg !93
  %4683 = fdiv <2 x float> splat (float 1.000000e+00), %4682, !dbg !94
  %4684 = fmul <2 x float> %4683, splat (float 2.000000e+00), !dbg !95
  %4685 = fadd <2 x float> %4684, splat (float -1.000000e+00), !dbg !96
  %4686 = shufflevector <16 x float> %4136, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !150
  %4687 = fmul <2 x float> %4686, splat (float 5.000000e-01), !dbg !150
  %4688 = fmul <2 x float> %4685, %4685, !dbg !151
  %4689 = fsub <2 x float> splat (float 1.000000e+00), %4688, !dbg !152
  %4690 = fmul <2 x float> %4686, splat (float 0x3FBB6676C0000000), !dbg !153
  %4691 = fmul <2 x float> %4686, %4690, !dbg !154
  %4692 = fadd <2 x float> %4691, splat (float 0x3FE9884540000000), !dbg !155
  %4693 = fmul <2 x float> %4692, %4689, !dbg !156
  %4694 = fmul <2 x float> %4687, %4693, !dbg !157
  %4695 = fadd <2 x float> %4685, splat (float 1.000000e+00), !dbg !158
  %4696 = fmul <2 x float> %4695, splat (float 5.000000e-01), !dbg !159
  %4697 = fadd <2 x float> %4696, %4694, !dbg !160
  %4698 = fmul <2 x float> %3912, %4697, !dbg !138
  %4699 = shufflevector <16 x float> %4448, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !161
  %4700 = fmul <2 x float> %4699, %4698, !dbg !161
  %4701 = insertelement <2 x float> poison, float %4426, i64 0, !dbg !93
  %4702 = insertelement <2 x float> %4701, float %4428, i64 1, !dbg !93
  %4703 = fadd <2 x float> %4702, splat (float 1.000000e+00), !dbg !93
  %4704 = fdiv <2 x float> splat (float 1.000000e+00), %4703, !dbg !94
  %4705 = fmul <2 x float> %4704, splat (float 2.000000e+00), !dbg !95
  %4706 = fadd <2 x float> %4705, splat (float -1.000000e+00), !dbg !96
  %4707 = shufflevector <16 x float> %4136, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !150
  %4708 = fmul <2 x float> %4707, splat (float 5.000000e-01), !dbg !150
  %4709 = fmul <2 x float> %4706, %4706, !dbg !151
  %4710 = fsub <2 x float> splat (float 1.000000e+00), %4709, !dbg !152
  %4711 = fmul <2 x float> %4707, splat (float 0x3FBB6676C0000000), !dbg !153
  %4712 = fmul <2 x float> %4707, %4711, !dbg !154
  %4713 = fadd <2 x float> %4712, splat (float 0x3FE9884540000000), !dbg !155
  %4714 = fmul <2 x float> %4713, %4710, !dbg !156
  %4715 = fmul <2 x float> %4708, %4714, !dbg !157
  %4716 = fadd <2 x float> %4706, splat (float 1.000000e+00), !dbg !158
  %4717 = fmul <2 x float> %4716, splat (float 5.000000e-01), !dbg !159
  %4718 = fadd <2 x float> %4717, %4715, !dbg !160
  %4719 = fmul <2 x float> %3912, %4718, !dbg !138
  %4720 = shufflevector <16 x float> %4448, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !161
  %4721 = fmul <2 x float> %4720, %4719, !dbg !161
  %4722 = insertelement <2 x float> poison, float %4430, i64 0, !dbg !93
  %4723 = insertelement <2 x float> %4722, float %4432, i64 1, !dbg !93
  %4724 = fadd <2 x float> %4723, splat (float 1.000000e+00), !dbg !93
  %4725 = fdiv <2 x float> splat (float 1.000000e+00), %4724, !dbg !94
  %4726 = fmul <2 x float> %4725, splat (float 2.000000e+00), !dbg !95
  %4727 = fadd <2 x float> %4726, splat (float -1.000000e+00), !dbg !96
  %4728 = shufflevector <16 x float> %4136, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !150
  %4729 = fmul <2 x float> %4728, splat (float 5.000000e-01), !dbg !150
  %4730 = fmul <2 x float> %4727, %4727, !dbg !151
  %4731 = fsub <2 x float> splat (float 1.000000e+00), %4730, !dbg !152
  %4732 = fmul <2 x float> %4728, splat (float 0x3FBB6676C0000000), !dbg !153
  %4733 = fmul <2 x float> %4728, %4732, !dbg !154
  %4734 = fadd <2 x float> %4733, splat (float 0x3FE9884540000000), !dbg !155
  %4735 = fmul <2 x float> %4734, %4731, !dbg !156
  %4736 = fmul <2 x float> %4729, %4735, !dbg !157
  %4737 = fadd <2 x float> %4727, splat (float 1.000000e+00), !dbg !158
  %4738 = fmul <2 x float> %4737, splat (float 5.000000e-01), !dbg !159
  %4739 = fadd <2 x float> %4738, %4736, !dbg !160
  %4740 = fmul <2 x float> %3912, %4739, !dbg !138
  %4741 = shufflevector <16 x float> %4448, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !161
  %4742 = fmul <2 x float> %4741, %4740, !dbg !161
  %4743 = insertelement <2 x float> poison, float %4434, i64 0, !dbg !93
  %4744 = insertelement <2 x float> %4743, float %4436, i64 1, !dbg !93
  %4745 = fadd <2 x float> %4744, splat (float 1.000000e+00), !dbg !93
  %4746 = fdiv <2 x float> splat (float 1.000000e+00), %4745, !dbg !94
  %4747 = fmul <2 x float> %4746, splat (float 2.000000e+00), !dbg !95
  %4748 = fadd <2 x float> %4747, splat (float -1.000000e+00), !dbg !96
  %4749 = shufflevector <16 x float> %4136, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !150
  %4750 = fmul <2 x float> %4749, splat (float 5.000000e-01), !dbg !150
  %4751 = fmul <2 x float> %4748, %4748, !dbg !151
  %4752 = fsub <2 x float> splat (float 1.000000e+00), %4751, !dbg !152
  %4753 = fmul <2 x float> %4749, splat (float 0x3FBB6676C0000000), !dbg !153
  %4754 = fmul <2 x float> %4749, %4753, !dbg !154
  %4755 = fadd <2 x float> %4754, splat (float 0x3FE9884540000000), !dbg !155
  %4756 = fmul <2 x float> %4755, %4752, !dbg !156
  %4757 = fmul <2 x float> %4750, %4756, !dbg !157
  %4758 = fadd <2 x float> %4748, splat (float 1.000000e+00), !dbg !158
  %4759 = fmul <2 x float> %4758, splat (float 5.000000e-01), !dbg !159
  %4760 = fadd <2 x float> %4759, %4757, !dbg !160
  %4761 = fmul <2 x float> %3912, %4760, !dbg !138
  %4762 = shufflevector <16 x float> %4448, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !161
  %4763 = fmul <2 x float> %4762, %4761, !dbg !161
  %4764 = insertelement <2 x float> poison, float %4438, i64 0, !dbg !93
  %4765 = insertelement <2 x float> %4764, float %4440, i64 1, !dbg !93
  %4766 = fadd <2 x float> %4765, splat (float 1.000000e+00), !dbg !93
  %4767 = fdiv <2 x float> splat (float 1.000000e+00), %4766, !dbg !94
  %4768 = fmul <2 x float> %4767, splat (float 2.000000e+00), !dbg !95
  %4769 = fadd <2 x float> %4768, splat (float -1.000000e+00), !dbg !96
  %4770 = shufflevector <16 x float> %4136, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !150
  %4771 = fmul <2 x float> %4770, splat (float 5.000000e-01), !dbg !150
  %4772 = fmul <2 x float> %4769, %4769, !dbg !151
  %4773 = fsub <2 x float> splat (float 1.000000e+00), %4772, !dbg !152
  %4774 = fmul <2 x float> %4770, splat (float 0x3FBB6676C0000000), !dbg !153
  %4775 = fmul <2 x float> %4770, %4774, !dbg !154
  %4776 = fadd <2 x float> %4775, splat (float 0x3FE9884540000000), !dbg !155
  %4777 = fmul <2 x float> %4776, %4773, !dbg !156
  %4778 = fmul <2 x float> %4771, %4777, !dbg !157
  %4779 = fadd <2 x float> %4769, splat (float 1.000000e+00), !dbg !158
  %4780 = fmul <2 x float> %4779, splat (float 5.000000e-01), !dbg !159
  %4781 = fadd <2 x float> %4780, %4778, !dbg !160
  %4782 = fmul <2 x float> %3912, %4781, !dbg !138
  %4783 = shufflevector <16 x float> %4448, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !161
  %4784 = fmul <2 x float> %4783, %4782, !dbg !161
  %4785 = fptrunc <2 x float> %4469 to <2 x bfloat>, !dbg !162
  %4786 = fptrunc <2 x float> %4490 to <2 x bfloat>, !dbg !162
  %4787 = fptrunc <2 x float> %4511 to <2 x bfloat>, !dbg !162
  %4788 = fptrunc <2 x float> %4532 to <2 x bfloat>, !dbg !162
  %4789 = fptrunc <2 x float> %4553 to <2 x bfloat>, !dbg !162
  %4790 = fptrunc <2 x float> %4574 to <2 x bfloat>, !dbg !162
  %4791 = fptrunc <2 x float> %4595 to <2 x bfloat>, !dbg !162
  %4792 = fptrunc <2 x float> %4616 to <2 x bfloat>, !dbg !162
  %4793 = fptrunc <2 x float> %4637 to <2 x bfloat>, !dbg !162
  %4794 = fptrunc <2 x float> %4658 to <2 x bfloat>, !dbg !162
  %4795 = fptrunc <2 x float> %4679 to <2 x bfloat>, !dbg !162
  %4796 = fptrunc <2 x float> %4700 to <2 x bfloat>, !dbg !162
  %4797 = fptrunc <2 x float> %4721 to <2 x bfloat>, !dbg !162
  %4798 = fptrunc <2 x float> %4742 to <2 x bfloat>, !dbg !162
  %4799 = fptrunc <2 x float> %4763 to <2 x bfloat>, !dbg !162
  %4800 = fptrunc <2 x float> %4784 to <2 x bfloat>, !dbg !162
  %4801 = bitcast <2 x bfloat> %4785 to i32, !dbg !162
  %4802 = bitcast <2 x bfloat> %4786 to i32, !dbg !162
  %4803 = bitcast <2 x bfloat> %4787 to i32, !dbg !162
  %4804 = bitcast <2 x bfloat> %4788 to i32, !dbg !162
  %4805 = bitcast <2 x bfloat> %4789 to i32, !dbg !162
  %4806 = bitcast <2 x bfloat> %4790 to i32, !dbg !162
  %4807 = bitcast <2 x bfloat> %4791 to i32, !dbg !162
  %4808 = bitcast <2 x bfloat> %4792 to i32, !dbg !162
  %4809 = bitcast <2 x bfloat> %4793 to i32, !dbg !162
  %4810 = bitcast <2 x bfloat> %4794 to i32, !dbg !162
  %4811 = bitcast <2 x bfloat> %4795 to i32, !dbg !162
  %4812 = bitcast <2 x bfloat> %4796 to i32, !dbg !162
  %4813 = bitcast <2 x bfloat> %4797 to i32, !dbg !162
  %4814 = bitcast <2 x bfloat> %4798 to i32, !dbg !162
  %4815 = bitcast <2 x bfloat> %4799 to i32, !dbg !162
  %4816 = bitcast <2 x bfloat> %4800 to i32, !dbg !162
  %4817 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %4801, i32 %4803, i1 false, i1 false), !dbg !162
  %4818 = extractvalue { i32, i32 } %4817, 0, !dbg !162
  %4819 = extractvalue { i32, i32 } %4817, 1, !dbg !162
  %4820 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %4802, i32 %4804, i1 false, i1 false), !dbg !162
  %4821 = extractvalue { i32, i32 } %4820, 0, !dbg !162
  %4822 = extractvalue { i32, i32 } %4820, 1, !dbg !162
  %4823 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %4805, i32 %4807, i1 false, i1 false), !dbg !162
  %4824 = extractvalue { i32, i32 } %4823, 0, !dbg !162
  %4825 = extractvalue { i32, i32 } %4823, 1, !dbg !162
  %4826 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %4806, i32 %4808, i1 false, i1 false), !dbg !162
  %4827 = extractvalue { i32, i32 } %4826, 0, !dbg !162
  %4828 = extractvalue { i32, i32 } %4826, 1, !dbg !162
  %4829 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %4809, i32 %4811, i1 false, i1 false), !dbg !162
  %4830 = extractvalue { i32, i32 } %4829, 0, !dbg !162
  %4831 = extractvalue { i32, i32 } %4829, 1, !dbg !162
  %4832 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %4810, i32 %4812, i1 false, i1 false), !dbg !162
  %4833 = extractvalue { i32, i32 } %4832, 0, !dbg !162
  %4834 = extractvalue { i32, i32 } %4832, 1, !dbg !162
  %4835 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %4813, i32 %4815, i1 false, i1 false), !dbg !162
  %4836 = extractvalue { i32, i32 } %4835, 0, !dbg !162
  %4837 = extractvalue { i32, i32 } %4835, 1, !dbg !162
  %4838 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %4814, i32 %4816, i1 false, i1 false), !dbg !162
  %4839 = extractvalue { i32, i32 } %4838, 0, !dbg !162
  %4840 = extractvalue { i32, i32 } %4838, 1, !dbg !162
  %4841 = bitcast i32 %4818 to <2 x bfloat>, !dbg !162
  %4842 = bitcast i32 %4821 to <2 x bfloat>, !dbg !162
  %4843 = bitcast i32 %4819 to <2 x bfloat>, !dbg !162
  %4844 = shufflevector <2 x bfloat> %4843, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4845 = bitcast i32 %4822 to <2 x bfloat>, !dbg !162
  %4846 = shufflevector <2 x bfloat> %4845, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4847 = bitcast i32 %4824 to <2 x bfloat>, !dbg !162
  %4848 = bitcast i32 %4827 to <2 x bfloat>, !dbg !162
  %4849 = bitcast i32 %4825 to <2 x bfloat>, !dbg !162
  %4850 = shufflevector <2 x bfloat> %4849, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4851 = bitcast i32 %4828 to <2 x bfloat>, !dbg !162
  %4852 = shufflevector <2 x bfloat> %4851, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4853 = bitcast i32 %4830 to <2 x bfloat>, !dbg !162
  %4854 = bitcast i32 %4833 to <2 x bfloat>, !dbg !162
  %4855 = bitcast i32 %4831 to <2 x bfloat>, !dbg !162
  %4856 = shufflevector <2 x bfloat> %4855, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4857 = bitcast i32 %4834 to <2 x bfloat>, !dbg !162
  %4858 = shufflevector <2 x bfloat> %4857, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4859 = bitcast i32 %4836 to <2 x bfloat>, !dbg !162
  %4860 = bitcast i32 %4839 to <2 x bfloat>, !dbg !162
  %4861 = bitcast i32 %4837 to <2 x bfloat>, !dbg !162
  %4862 = shufflevector <2 x bfloat> %4861, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4863 = bitcast i32 %4840 to <2 x bfloat>, !dbg !162
  %4864 = shufflevector <2 x bfloat> %4863, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %4865 = shufflevector <2 x bfloat> %4841, <2 x bfloat> %4842, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4866 = shufflevector <8 x bfloat> %4865, <8 x bfloat> %4844, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !136
  %4867 = shufflevector <8 x bfloat> %4866, <8 x bfloat> %4846, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !136
  %4868 = shufflevector <2 x bfloat> %4847, <2 x bfloat> %4848, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4869 = shufflevector <8 x bfloat> %4868, <8 x bfloat> %4850, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !136
  %4870 = shufflevector <8 x bfloat> %4869, <8 x bfloat> %4852, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !136
  %4871 = shufflevector <2 x bfloat> %4853, <2 x bfloat> %4854, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4872 = shufflevector <8 x bfloat> %4871, <8 x bfloat> %4856, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !136
  %4873 = shufflevector <8 x bfloat> %4872, <8 x bfloat> %4858, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !136
  %4874 = shufflevector <2 x bfloat> %4859, <2 x bfloat> %4860, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4875 = shufflevector <8 x bfloat> %4874, <8 x bfloat> %4862, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !136
  %4876 = shufflevector <8 x bfloat> %4875, <8 x bfloat> %4864, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !136
  %4877 = shufflevector <1 x bfloat> %3982, <1 x bfloat> %3983, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4878 = shufflevector <8 x bfloat> %4877, <8 x bfloat> %3991, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4879 = shufflevector <8 x bfloat> %4878, <8 x bfloat> %3993, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4880 = shufflevector <8 x bfloat> %4879, <8 x bfloat> %4007, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4881 = shufflevector <8 x bfloat> %4880, <8 x bfloat> %4009, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !136
  %4882 = shufflevector <8 x bfloat> %4881, <8 x bfloat> %4023, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !136
  %4883 = shufflevector <8 x bfloat> %4882, <8 x bfloat> %4025, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !136
  %4884 = shufflevector <1 x bfloat> %3984, <1 x bfloat> %3985, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4885 = shufflevector <8 x bfloat> %4884, <8 x bfloat> %3995, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4886 = shufflevector <8 x bfloat> %4885, <8 x bfloat> %3997, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4887 = shufflevector <8 x bfloat> %4886, <8 x bfloat> %4011, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4888 = shufflevector <8 x bfloat> %4887, <8 x bfloat> %4013, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !136
  %4889 = shufflevector <8 x bfloat> %4888, <8 x bfloat> %4027, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !136
  %4890 = shufflevector <8 x bfloat> %4889, <8 x bfloat> %4029, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !136
  %4891 = shufflevector <1 x bfloat> %3986, <1 x bfloat> %3987, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4892 = shufflevector <8 x bfloat> %4891, <8 x bfloat> %3999, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4893 = shufflevector <8 x bfloat> %4892, <8 x bfloat> %4001, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4894 = shufflevector <8 x bfloat> %4893, <8 x bfloat> %4015, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4895 = shufflevector <8 x bfloat> %4894, <8 x bfloat> %4017, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !136
  %4896 = shufflevector <8 x bfloat> %4895, <8 x bfloat> %4031, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !136
  %4897 = shufflevector <8 x bfloat> %4896, <8 x bfloat> %4033, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !136
  %4898 = shufflevector <1 x bfloat> %3988, <1 x bfloat> %3989, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4899 = shufflevector <8 x bfloat> %4898, <8 x bfloat> %4003, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4900 = shufflevector <8 x bfloat> %4899, <8 x bfloat> %4005, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4901 = shufflevector <8 x bfloat> %4900, <8 x bfloat> %4019, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4902 = shufflevector <8 x bfloat> %4901, <8 x bfloat> %4021, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !136
  %4903 = shufflevector <8 x bfloat> %4902, <8 x bfloat> %4035, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !136
  %4904 = shufflevector <8 x bfloat> %4903, <8 x bfloat> %4037, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !136
  %4905 = shufflevector <1 x bfloat> %4038, <1 x bfloat> %4039, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4906 = shufflevector <8 x bfloat> %4905, <8 x bfloat> %4047, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4907 = shufflevector <8 x bfloat> %4906, <8 x bfloat> %4049, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4908 = shufflevector <8 x bfloat> %4907, <8 x bfloat> %4063, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4909 = shufflevector <8 x bfloat> %4908, <8 x bfloat> %4065, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !136
  %4910 = shufflevector <8 x bfloat> %4909, <8 x bfloat> %4079, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !136
  %4911 = shufflevector <8 x bfloat> %4910, <8 x bfloat> %4081, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !136
  %4912 = shufflevector <1 x bfloat> %4040, <1 x bfloat> %4041, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4913 = shufflevector <8 x bfloat> %4912, <8 x bfloat> %4051, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4914 = shufflevector <8 x bfloat> %4913, <8 x bfloat> %4053, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4915 = shufflevector <8 x bfloat> %4914, <8 x bfloat> %4067, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4916 = shufflevector <8 x bfloat> %4915, <8 x bfloat> %4069, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !136
  %4917 = shufflevector <8 x bfloat> %4916, <8 x bfloat> %4083, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !136
  %4918 = shufflevector <8 x bfloat> %4917, <8 x bfloat> %4085, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !136
  %4919 = shufflevector <1 x bfloat> %4042, <1 x bfloat> %4043, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4920 = shufflevector <8 x bfloat> %4919, <8 x bfloat> %4055, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4921 = shufflevector <8 x bfloat> %4920, <8 x bfloat> %4057, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4922 = shufflevector <8 x bfloat> %4921, <8 x bfloat> %4071, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4923 = shufflevector <8 x bfloat> %4922, <8 x bfloat> %4073, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !136
  %4924 = shufflevector <8 x bfloat> %4923, <8 x bfloat> %4087, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !136
  %4925 = shufflevector <8 x bfloat> %4924, <8 x bfloat> %4089, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !136
  %4926 = shufflevector <1 x bfloat> %4044, <1 x bfloat> %4045, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4927 = shufflevector <8 x bfloat> %4926, <8 x bfloat> %4059, <8 x i32> <i32 0, i32 1, i32 8, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4928 = shufflevector <8 x bfloat> %4927, <8 x bfloat> %4061, <8 x i32> <i32 0, i32 1, i32 2, i32 8, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4929 = shufflevector <8 x bfloat> %4928, <8 x bfloat> %4075, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 poison, i32 poison, i32 poison>, !dbg !136
  %4930 = shufflevector <8 x bfloat> %4929, <8 x bfloat> %4077, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 8, i32 poison, i32 poison>, !dbg !136
  %4931 = shufflevector <8 x bfloat> %4930, <8 x bfloat> %4091, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 poison>, !dbg !136
  %4932 = shufflevector <8 x bfloat> %4931, <8 x bfloat> %4093, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 8>, !dbg !136
  %4933 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %3917, i64 0, !dbg !136
  %4934 = insertelement <16 x float> %4933, float %3918, i64 1, !dbg !136
  %4935 = insertelement <16 x float> %4934, float %3919, i64 2, !dbg !136
  %4936 = insertelement <16 x float> %4935, float %3920, i64 3, !dbg !136
  %4937 = insertelement <16 x float> %4936, float %3921, i64 4, !dbg !136
  %4938 = insertelement <16 x float> %4937, float %3922, i64 5, !dbg !136
  %4939 = insertelement <16 x float> %4938, float %3923, i64 6, !dbg !136
  %4940 = insertelement <16 x float> %4939, float %3924, i64 7, !dbg !136
  %4941 = insertelement <16 x float> %4940, float %3925, i64 8, !dbg !136
  %4942 = insertelement <16 x float> %4941, float %3926, i64 9, !dbg !136
  %4943 = insertelement <16 x float> %4942, float %3927, i64 10, !dbg !136
  %4944 = insertelement <16 x float> %4943, float %3928, i64 11, !dbg !136
  %4945 = insertelement <16 x float> %4944, float %3929, i64 12, !dbg !136
  %4946 = insertelement <16 x float> %4945, float %3930, i64 13, !dbg !136
  %4947 = insertelement <16 x float> %4946, float %3931, i64 14, !dbg !136
  %4948 = insertelement <16 x float> %4947, float %3932, i64 15, !dbg !136
  %4949 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4883, <8 x bfloat> %4867, <16 x float> %4948, i32 0, i32 0, i32 0), !dbg !136
  %4950 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4890, <8 x bfloat> %4870, <16 x float> %4949, i32 0, i32 0, i32 0), !dbg !136
  %4951 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4897, <8 x bfloat> %4873, <16 x float> %4950, i32 0, i32 0, i32 0), !dbg !136
  %4952 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4904, <8 x bfloat> %4876, <16 x float> %4951, i32 0, i32 0, i32 0), !dbg !136
  %4953 = extractelement <16 x float> %4952, i64 0, !dbg !136
  %4954 = extractelement <16 x float> %4952, i64 1, !dbg !136
  %4955 = extractelement <16 x float> %4952, i64 2, !dbg !136
  %4956 = extractelement <16 x float> %4952, i64 3, !dbg !136
  %4957 = extractelement <16 x float> %4952, i64 4, !dbg !136
  %4958 = extractelement <16 x float> %4952, i64 5, !dbg !136
  %4959 = extractelement <16 x float> %4952, i64 6, !dbg !136
  %4960 = extractelement <16 x float> %4952, i64 7, !dbg !136
  %4961 = extractelement <16 x float> %4952, i64 8, !dbg !136
  %4962 = extractelement <16 x float> %4952, i64 9, !dbg !136
  %4963 = extractelement <16 x float> %4952, i64 10, !dbg !136
  %4964 = extractelement <16 x float> %4952, i64 11, !dbg !136
  %4965 = extractelement <16 x float> %4952, i64 12, !dbg !136
  %4966 = extractelement <16 x float> %4952, i64 13, !dbg !136
  %4967 = extractelement <16 x float> %4952, i64 14, !dbg !136
  %4968 = extractelement <16 x float> %4952, i64 15, !dbg !136
  %4969 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %3933, i64 0, !dbg !136
  %4970 = insertelement <16 x float> %4969, float %3934, i64 1, !dbg !136
  %4971 = insertelement <16 x float> %4970, float %3935, i64 2, !dbg !136
  %4972 = insertelement <16 x float> %4971, float %3936, i64 3, !dbg !136
  %4973 = insertelement <16 x float> %4972, float %3937, i64 4, !dbg !136
  %4974 = insertelement <16 x float> %4973, float %3938, i64 5, !dbg !136
  %4975 = insertelement <16 x float> %4974, float %3939, i64 6, !dbg !136
  %4976 = insertelement <16 x float> %4975, float %3940, i64 7, !dbg !136
  %4977 = insertelement <16 x float> %4976, float %3941, i64 8, !dbg !136
  %4978 = insertelement <16 x float> %4977, float %3942, i64 9, !dbg !136
  %4979 = insertelement <16 x float> %4978, float %3943, i64 10, !dbg !136
  %4980 = insertelement <16 x float> %4979, float %3944, i64 11, !dbg !136
  %4981 = insertelement <16 x float> %4980, float %3945, i64 12, !dbg !136
  %4982 = insertelement <16 x float> %4981, float %3946, i64 13, !dbg !136
  %4983 = insertelement <16 x float> %4982, float %3947, i64 14, !dbg !136
  %4984 = insertelement <16 x float> %4983, float %3948, i64 15, !dbg !136
  %4985 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4911, <8 x bfloat> %4867, <16 x float> %4984, i32 0, i32 0, i32 0), !dbg !136
  %4986 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4918, <8 x bfloat> %4870, <16 x float> %4985, i32 0, i32 0, i32 0), !dbg !136
  %4987 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4925, <8 x bfloat> %4873, <16 x float> %4986, i32 0, i32 0, i32 0), !dbg !136
  %4988 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %4932, <8 x bfloat> %4876, <16 x float> %4987, i32 0, i32 0, i32 0), !dbg !136
  %4989 = extractelement <16 x float> %4988, i64 0, !dbg !136
  %4990 = extractelement <16 x float> %4988, i64 1, !dbg !136
  %4991 = extractelement <16 x float> %4988, i64 2, !dbg !136
  %4992 = extractelement <16 x float> %4988, i64 3, !dbg !136
  %4993 = extractelement <16 x float> %4988, i64 4, !dbg !136
  %4994 = extractelement <16 x float> %4988, i64 5, !dbg !136
  %4995 = extractelement <16 x float> %4988, i64 6, !dbg !136
  %4996 = extractelement <16 x float> %4988, i64 7, !dbg !136
  %4997 = extractelement <16 x float> %4988, i64 8, !dbg !136
  %4998 = extractelement <16 x float> %4988, i64 9, !dbg !136
  %4999 = extractelement <16 x float> %4988, i64 10, !dbg !136
  %5000 = extractelement <16 x float> %4988, i64 11, !dbg !136
  %5001 = extractelement <16 x float> %4988, i64 12, !dbg !136
  %5002 = extractelement <16 x float> %4988, i64 13, !dbg !136
  %5003 = extractelement <16 x float> %4988, i64 14, !dbg !136
  %5004 = extractelement <16 x float> %4988, i64 15, !dbg !136
  fence syncscope("workgroup") release, !dbg !135
  tail call void @llvm.amdgcn.s.barrier(), !dbg !135
  fence syncscope("workgroup") acquire, !dbg !135
  store <4 x i32> %4103, ptr addrspace(3) %3710, align 16, !dbg !135
  store <4 x i32> %4104, ptr addrspace(3) %3712, align 16, !dbg !135
  %5005 = add nuw nsw i32 %3949, 1, !dbg !132
  %exitcond255.not = icmp eq i32 %3949, %3902, !dbg !132
  %5006 = shufflevector <8 x bfloat> %3968, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %5007 = shufflevector <8 x bfloat> %3968, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %5008 = shufflevector <8 x bfloat> %3968, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %5009 = shufflevector <8 x bfloat> %3968, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  %5010 = shufflevector <8 x bfloat> %3971, <8 x bfloat> poison, <2 x i32> <i32 0, i32 1>
  %5011 = shufflevector <8 x bfloat> %3971, <8 x bfloat> poison, <2 x i32> <i32 2, i32 3>
  %5012 = shufflevector <8 x bfloat> %3971, <8 x bfloat> poison, <2 x i32> <i32 4, i32 5>
  %5013 = shufflevector <8 x bfloat> %3971, <8 x bfloat> poison, <2 x i32> <i32 6, i32 7>
  br i1 %exitcond255.not, label %._crit_edge185, label %3913, !dbg !132

._crit_edge185:                                   ; preds = %3913, %.._crit_edge185_crit_edge
  %.pre-phi377 = phi i32 [ %.pre376, %.._crit_edge185_crit_edge ], [ %3892, %3913 ], !dbg !134
  %.pre-phi375 = phi i32 [ %.pre374, %.._crit_edge185_crit_edge ], [ %3890, %3913 ], !dbg !134
  %.pre-phi373 = phi i32 [ %.pre372, %.._crit_edge185_crit_edge ], [ %3888, %3913 ], !dbg !134
  %.pre-phi371 = phi i32 [ %.pre370, %.._crit_edge185_crit_edge ], [ %3886, %3913 ], !dbg !134
  %.pre-phi369 = phi i32 [ %.pre368, %.._crit_edge185_crit_edge ], [ %3884, %3913 ], !dbg !134
  %.pre-phi367 = phi i32 [ %.pre366, %.._crit_edge185_crit_edge ], [ %3882, %3913 ], !dbg !134
  %.pre-phi365 = phi i32 [ %.pre364, %.._crit_edge185_crit_edge ], [ %3880, %3913 ], !dbg !134
  %.pre-phi363 = phi i32 [ %.pre362, %.._crit_edge185_crit_edge ], [ %3878, %3913 ], !dbg !134
  %.pre-phi359 = phi i32 [ %.pre358, %.._crit_edge185_crit_edge ], [ %3868, %3913 ], !dbg !136
  %.pre-phi357 = phi i32 [ %.pre356, %.._crit_edge185_crit_edge ], [ %3859, %3913 ], !dbg !136
  %.pre-phi355 = phi i32 [ %.pre354, %.._crit_edge185_crit_edge ], [ %3850, %3913 ], !dbg !136
  %.pre-phi353 = phi i32 [ %.pre352, %.._crit_edge185_crit_edge ], [ %3841, %3913 ], !dbg !136
  %.pre-phi351 = phi i32 [ %.pre350, %.._crit_edge185_crit_edge ], [ %3832, %3913 ], !dbg !136
  %.pre-phi349 = phi i32 [ %.pre348, %.._crit_edge185_crit_edge ], [ %3823, %3913 ], !dbg !136
  %.pre-phi347 = phi i32 [ %.pre346, %.._crit_edge185_crit_edge ], [ %3814, %3913 ], !dbg !136
  %.pre-phi345 = phi i32 [ %.pre344, %.._crit_edge185_crit_edge ], [ %3805, %3913 ], !dbg !136
  %5014 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4953, %3913 ]
  %5015 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4954, %3913 ]
  %5016 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4955, %3913 ]
  %5017 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4956, %3913 ]
  %5018 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4957, %3913 ]
  %5019 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4958, %3913 ]
  %5020 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4959, %3913 ]
  %5021 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4960, %3913 ]
  %5022 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4961, %3913 ]
  %5023 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4962, %3913 ]
  %5024 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4963, %3913 ]
  %5025 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4964, %3913 ]
  %5026 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4965, %3913 ]
  %5027 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4966, %3913 ]
  %5028 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4967, %3913 ]
  %5029 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4968, %3913 ]
  %5030 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4989, %3913 ]
  %5031 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4990, %3913 ]
  %5032 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4991, %3913 ]
  %5033 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4992, %3913 ]
  %5034 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4993, %3913 ]
  %5035 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4994, %3913 ]
  %5036 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4995, %3913 ]
  %5037 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4996, %3913 ]
  %5038 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4997, %3913 ]
  %5039 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4998, %3913 ]
  %5040 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %4999, %3913 ]
  %5041 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %5000, %3913 ]
  %5042 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %5001, %3913 ]
  %5043 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %5002, %3913 ]
  %5044 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %5003, %3913 ]
  %5045 = phi float [ 0.000000e+00, %.._crit_edge185_crit_edge ], [ %5004, %3913 ]
  %5046 = phi <2 x bfloat> [ %3790, %.._crit_edge185_crit_edge ], [ %5006, %3913 ]
  %5047 = phi <2 x bfloat> [ %3791, %.._crit_edge185_crit_edge ], [ %5007, %3913 ]
  %5048 = phi <2 x bfloat> [ %3792, %.._crit_edge185_crit_edge ], [ %5008, %3913 ]
  %5049 = phi <2 x bfloat> [ %3793, %.._crit_edge185_crit_edge ], [ %5009, %3913 ]
  %5050 = phi <2 x bfloat> [ %3794, %.._crit_edge185_crit_edge ], [ %5010, %3913 ]
  %5051 = phi <2 x bfloat> [ %3795, %.._crit_edge185_crit_edge ], [ %5011, %3913 ]
  %5052 = phi <2 x bfloat> [ %3796, %.._crit_edge185_crit_edge ], [ %5012, %3913 ]
  %5053 = phi <2 x bfloat> [ %3797, %.._crit_edge185_crit_edge ], [ %5013, %3913 ]
  %5054 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3709, !dbg !134
  %5055 = shufflevector <2 x bfloat> %5046, <2 x bfloat> %5047, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %5056 = shufflevector <2 x bfloat> %5048, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %5057 = shufflevector <8 x bfloat> %5055, <8 x bfloat> %5056, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !134
  %5058 = shufflevector <2 x bfloat> %5049, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %5059 = shufflevector <8 x bfloat> %5057, <8 x bfloat> %5058, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !134
  store <8 x bfloat> %5059, ptr addrspace(3) %5054, align 16, !dbg !134
  %5060 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %3711, !dbg !134
  %5061 = shufflevector <2 x bfloat> %5050, <2 x bfloat> %5051, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %5062 = shufflevector <2 x bfloat> %5052, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %5063 = shufflevector <8 x bfloat> %5061, <8 x bfloat> %5062, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !134
  %5064 = shufflevector <2 x bfloat> %5053, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !134
  %5065 = shufflevector <8 x bfloat> %5063, <8 x bfloat> %5064, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !134
  store <8 x bfloat> %5065, ptr addrspace(3) %5060, align 16, !dbg !134
  fence syncscope("workgroup") release, !dbg !136
  tail call void @llvm.amdgcn.s.barrier(), !dbg !136
  fence syncscope("workgroup") acquire, !dbg !136
  %5066 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi345, !dbg !136
  %5067 = load <1 x bfloat>, ptr addrspace(3) %5066, align 2, !dbg !136
  %5068 = extractelement <1 x bfloat> %5067, i64 0, !dbg !136
  %5069 = getelementptr inbounds nuw i8, ptr addrspace(3) %5066, i32 128, !dbg !136
  %5070 = load <1 x bfloat>, ptr addrspace(3) %5069, align 2, !dbg !136
  %5071 = extractelement <1 x bfloat> %5070, i64 0, !dbg !136
  %5072 = getelementptr inbounds nuw i8, ptr addrspace(3) %5066, i32 2048, !dbg !136
  %5073 = load <1 x bfloat>, ptr addrspace(3) %5072, align 2, !dbg !136
  %5074 = extractelement <1 x bfloat> %5073, i64 0, !dbg !136
  %5075 = getelementptr inbounds nuw i8, ptr addrspace(3) %5066, i32 2176, !dbg !136
  %5076 = load <1 x bfloat>, ptr addrspace(3) %5075, align 2, !dbg !136
  %5077 = extractelement <1 x bfloat> %5076, i64 0, !dbg !136
  %5078 = getelementptr inbounds nuw i8, ptr addrspace(3) %5066, i32 4096, !dbg !136
  %5079 = load <1 x bfloat>, ptr addrspace(3) %5078, align 2, !dbg !136
  %5080 = extractelement <1 x bfloat> %5079, i64 0, !dbg !136
  %5081 = getelementptr inbounds nuw i8, ptr addrspace(3) %5066, i32 4224, !dbg !136
  %5082 = load <1 x bfloat>, ptr addrspace(3) %5081, align 2, !dbg !136
  %5083 = extractelement <1 x bfloat> %5082, i64 0, !dbg !136
  %5084 = getelementptr inbounds nuw i8, ptr addrspace(3) %5066, i32 6144, !dbg !136
  %5085 = load <1 x bfloat>, ptr addrspace(3) %5084, align 2, !dbg !136
  %5086 = extractelement <1 x bfloat> %5085, i64 0, !dbg !136
  %5087 = getelementptr inbounds nuw i8, ptr addrspace(3) %5066, i32 6272, !dbg !136
  %5088 = load <1 x bfloat>, ptr addrspace(3) %5087, align 2, !dbg !136
  %5089 = extractelement <1 x bfloat> %5088, i64 0, !dbg !136
  %5090 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi347, !dbg !136
  %5091 = load <1 x bfloat>, ptr addrspace(3) %5090, align 2, !dbg !136
  %5092 = extractelement <1 x bfloat> %5091, i64 0, !dbg !136
  %5093 = getelementptr inbounds nuw i8, ptr addrspace(3) %5090, i32 128, !dbg !136
  %5094 = load <1 x bfloat>, ptr addrspace(3) %5093, align 2, !dbg !136
  %5095 = extractelement <1 x bfloat> %5094, i64 0, !dbg !136
  %5096 = getelementptr inbounds nuw i8, ptr addrspace(3) %5090, i32 2048, !dbg !136
  %5097 = load <1 x bfloat>, ptr addrspace(3) %5096, align 2, !dbg !136
  %5098 = extractelement <1 x bfloat> %5097, i64 0, !dbg !136
  %5099 = getelementptr inbounds nuw i8, ptr addrspace(3) %5090, i32 2176, !dbg !136
  %5100 = load <1 x bfloat>, ptr addrspace(3) %5099, align 2, !dbg !136
  %5101 = extractelement <1 x bfloat> %5100, i64 0, !dbg !136
  %5102 = getelementptr inbounds nuw i8, ptr addrspace(3) %5090, i32 4096, !dbg !136
  %5103 = load <1 x bfloat>, ptr addrspace(3) %5102, align 2, !dbg !136
  %5104 = extractelement <1 x bfloat> %5103, i64 0, !dbg !136
  %5105 = getelementptr inbounds nuw i8, ptr addrspace(3) %5090, i32 4224, !dbg !136
  %5106 = load <1 x bfloat>, ptr addrspace(3) %5105, align 2, !dbg !136
  %5107 = extractelement <1 x bfloat> %5106, i64 0, !dbg !136
  %5108 = getelementptr inbounds nuw i8, ptr addrspace(3) %5090, i32 6144, !dbg !136
  %5109 = load <1 x bfloat>, ptr addrspace(3) %5108, align 2, !dbg !136
  %5110 = extractelement <1 x bfloat> %5109, i64 0, !dbg !136
  %5111 = getelementptr inbounds nuw i8, ptr addrspace(3) %5090, i32 6272, !dbg !136
  %5112 = load <1 x bfloat>, ptr addrspace(3) %5111, align 2, !dbg !136
  %5113 = extractelement <1 x bfloat> %5112, i64 0, !dbg !136
  %5114 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi349, !dbg !136
  %5115 = load <1 x bfloat>, ptr addrspace(3) %5114, align 2, !dbg !136
  %5116 = extractelement <1 x bfloat> %5115, i64 0, !dbg !136
  %5117 = getelementptr inbounds nuw i8, ptr addrspace(3) %5114, i32 128, !dbg !136
  %5118 = load <1 x bfloat>, ptr addrspace(3) %5117, align 2, !dbg !136
  %5119 = extractelement <1 x bfloat> %5118, i64 0, !dbg !136
  %5120 = getelementptr inbounds nuw i8, ptr addrspace(3) %5114, i32 2048, !dbg !136
  %5121 = load <1 x bfloat>, ptr addrspace(3) %5120, align 2, !dbg !136
  %5122 = extractelement <1 x bfloat> %5121, i64 0, !dbg !136
  %5123 = getelementptr inbounds nuw i8, ptr addrspace(3) %5114, i32 2176, !dbg !136
  %5124 = load <1 x bfloat>, ptr addrspace(3) %5123, align 2, !dbg !136
  %5125 = extractelement <1 x bfloat> %5124, i64 0, !dbg !136
  %5126 = getelementptr inbounds nuw i8, ptr addrspace(3) %5114, i32 4096, !dbg !136
  %5127 = load <1 x bfloat>, ptr addrspace(3) %5126, align 2, !dbg !136
  %5128 = extractelement <1 x bfloat> %5127, i64 0, !dbg !136
  %5129 = getelementptr inbounds nuw i8, ptr addrspace(3) %5114, i32 4224, !dbg !136
  %5130 = load <1 x bfloat>, ptr addrspace(3) %5129, align 2, !dbg !136
  %5131 = extractelement <1 x bfloat> %5130, i64 0, !dbg !136
  %5132 = getelementptr inbounds nuw i8, ptr addrspace(3) %5114, i32 6144, !dbg !136
  %5133 = load <1 x bfloat>, ptr addrspace(3) %5132, align 2, !dbg !136
  %5134 = extractelement <1 x bfloat> %5133, i64 0, !dbg !136
  %5135 = getelementptr inbounds nuw i8, ptr addrspace(3) %5114, i32 6272, !dbg !136
  %5136 = load <1 x bfloat>, ptr addrspace(3) %5135, align 2, !dbg !136
  %5137 = extractelement <1 x bfloat> %5136, i64 0, !dbg !136
  %5138 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi351, !dbg !136
  %5139 = load <1 x bfloat>, ptr addrspace(3) %5138, align 2, !dbg !136
  %5140 = extractelement <1 x bfloat> %5139, i64 0, !dbg !136
  %5141 = getelementptr inbounds nuw i8, ptr addrspace(3) %5138, i32 128, !dbg !136
  %5142 = load <1 x bfloat>, ptr addrspace(3) %5141, align 2, !dbg !136
  %5143 = extractelement <1 x bfloat> %5142, i64 0, !dbg !136
  %5144 = getelementptr inbounds nuw i8, ptr addrspace(3) %5138, i32 2048, !dbg !136
  %5145 = load <1 x bfloat>, ptr addrspace(3) %5144, align 2, !dbg !136
  %5146 = extractelement <1 x bfloat> %5145, i64 0, !dbg !136
  %5147 = getelementptr inbounds nuw i8, ptr addrspace(3) %5138, i32 2176, !dbg !136
  %5148 = load <1 x bfloat>, ptr addrspace(3) %5147, align 2, !dbg !136
  %5149 = extractelement <1 x bfloat> %5148, i64 0, !dbg !136
  %5150 = getelementptr inbounds nuw i8, ptr addrspace(3) %5138, i32 4096, !dbg !136
  %5151 = load <1 x bfloat>, ptr addrspace(3) %5150, align 2, !dbg !136
  %5152 = extractelement <1 x bfloat> %5151, i64 0, !dbg !136
  %5153 = getelementptr inbounds nuw i8, ptr addrspace(3) %5138, i32 4224, !dbg !136
  %5154 = load <1 x bfloat>, ptr addrspace(3) %5153, align 2, !dbg !136
  %5155 = extractelement <1 x bfloat> %5154, i64 0, !dbg !136
  %5156 = getelementptr inbounds nuw i8, ptr addrspace(3) %5138, i32 6144, !dbg !136
  %5157 = load <1 x bfloat>, ptr addrspace(3) %5156, align 2, !dbg !136
  %5158 = extractelement <1 x bfloat> %5157, i64 0, !dbg !136
  %5159 = getelementptr inbounds nuw i8, ptr addrspace(3) %5138, i32 6272, !dbg !136
  %5160 = load <1 x bfloat>, ptr addrspace(3) %5159, align 2, !dbg !136
  %5161 = extractelement <1 x bfloat> %5160, i64 0, !dbg !136
  %5162 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi353, !dbg !136
  %5163 = load <1 x bfloat>, ptr addrspace(3) %5162, align 2, !dbg !136
  %5164 = extractelement <1 x bfloat> %5163, i64 0, !dbg !136
  %5165 = getelementptr inbounds nuw i8, ptr addrspace(3) %5162, i32 128, !dbg !136
  %5166 = load <1 x bfloat>, ptr addrspace(3) %5165, align 2, !dbg !136
  %5167 = extractelement <1 x bfloat> %5166, i64 0, !dbg !136
  %5168 = getelementptr inbounds nuw i8, ptr addrspace(3) %5162, i32 2048, !dbg !136
  %5169 = load <1 x bfloat>, ptr addrspace(3) %5168, align 2, !dbg !136
  %5170 = extractelement <1 x bfloat> %5169, i64 0, !dbg !136
  %5171 = getelementptr inbounds nuw i8, ptr addrspace(3) %5162, i32 2176, !dbg !136
  %5172 = load <1 x bfloat>, ptr addrspace(3) %5171, align 2, !dbg !136
  %5173 = extractelement <1 x bfloat> %5172, i64 0, !dbg !136
  %5174 = getelementptr inbounds nuw i8, ptr addrspace(3) %5162, i32 4096, !dbg !136
  %5175 = load <1 x bfloat>, ptr addrspace(3) %5174, align 2, !dbg !136
  %5176 = extractelement <1 x bfloat> %5175, i64 0, !dbg !136
  %5177 = getelementptr inbounds nuw i8, ptr addrspace(3) %5162, i32 4224, !dbg !136
  %5178 = load <1 x bfloat>, ptr addrspace(3) %5177, align 2, !dbg !136
  %5179 = extractelement <1 x bfloat> %5178, i64 0, !dbg !136
  %5180 = getelementptr inbounds nuw i8, ptr addrspace(3) %5162, i32 6144, !dbg !136
  %5181 = load <1 x bfloat>, ptr addrspace(3) %5180, align 2, !dbg !136
  %5182 = extractelement <1 x bfloat> %5181, i64 0, !dbg !136
  %5183 = getelementptr inbounds nuw i8, ptr addrspace(3) %5162, i32 6272, !dbg !136
  %5184 = load <1 x bfloat>, ptr addrspace(3) %5183, align 2, !dbg !136
  %5185 = extractelement <1 x bfloat> %5184, i64 0, !dbg !136
  %5186 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi355, !dbg !136
  %5187 = load <1 x bfloat>, ptr addrspace(3) %5186, align 2, !dbg !136
  %5188 = extractelement <1 x bfloat> %5187, i64 0, !dbg !136
  %5189 = getelementptr inbounds nuw i8, ptr addrspace(3) %5186, i32 128, !dbg !136
  %5190 = load <1 x bfloat>, ptr addrspace(3) %5189, align 2, !dbg !136
  %5191 = extractelement <1 x bfloat> %5190, i64 0, !dbg !136
  %5192 = getelementptr inbounds nuw i8, ptr addrspace(3) %5186, i32 2048, !dbg !136
  %5193 = load <1 x bfloat>, ptr addrspace(3) %5192, align 2, !dbg !136
  %5194 = extractelement <1 x bfloat> %5193, i64 0, !dbg !136
  %5195 = getelementptr inbounds nuw i8, ptr addrspace(3) %5186, i32 2176, !dbg !136
  %5196 = load <1 x bfloat>, ptr addrspace(3) %5195, align 2, !dbg !136
  %5197 = extractelement <1 x bfloat> %5196, i64 0, !dbg !136
  %5198 = getelementptr inbounds nuw i8, ptr addrspace(3) %5186, i32 4096, !dbg !136
  %5199 = load <1 x bfloat>, ptr addrspace(3) %5198, align 2, !dbg !136
  %5200 = extractelement <1 x bfloat> %5199, i64 0, !dbg !136
  %5201 = getelementptr inbounds nuw i8, ptr addrspace(3) %5186, i32 4224, !dbg !136
  %5202 = load <1 x bfloat>, ptr addrspace(3) %5201, align 2, !dbg !136
  %5203 = extractelement <1 x bfloat> %5202, i64 0, !dbg !136
  %5204 = getelementptr inbounds nuw i8, ptr addrspace(3) %5186, i32 6144, !dbg !136
  %5205 = load <1 x bfloat>, ptr addrspace(3) %5204, align 2, !dbg !136
  %5206 = extractelement <1 x bfloat> %5205, i64 0, !dbg !136
  %5207 = getelementptr inbounds nuw i8, ptr addrspace(3) %5186, i32 6272, !dbg !136
  %5208 = load <1 x bfloat>, ptr addrspace(3) %5207, align 2, !dbg !136
  %5209 = extractelement <1 x bfloat> %5208, i64 0, !dbg !136
  %5210 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi357, !dbg !136
  %5211 = load <1 x bfloat>, ptr addrspace(3) %5210, align 2, !dbg !136
  %5212 = extractelement <1 x bfloat> %5211, i64 0, !dbg !136
  %5213 = getelementptr inbounds nuw i8, ptr addrspace(3) %5210, i32 128, !dbg !136
  %5214 = load <1 x bfloat>, ptr addrspace(3) %5213, align 2, !dbg !136
  %5215 = extractelement <1 x bfloat> %5214, i64 0, !dbg !136
  %5216 = getelementptr inbounds nuw i8, ptr addrspace(3) %5210, i32 2048, !dbg !136
  %5217 = load <1 x bfloat>, ptr addrspace(3) %5216, align 2, !dbg !136
  %5218 = extractelement <1 x bfloat> %5217, i64 0, !dbg !136
  %5219 = getelementptr inbounds nuw i8, ptr addrspace(3) %5210, i32 2176, !dbg !136
  %5220 = load <1 x bfloat>, ptr addrspace(3) %5219, align 2, !dbg !136
  %5221 = extractelement <1 x bfloat> %5220, i64 0, !dbg !136
  %5222 = getelementptr inbounds nuw i8, ptr addrspace(3) %5210, i32 4096, !dbg !136
  %5223 = load <1 x bfloat>, ptr addrspace(3) %5222, align 2, !dbg !136
  %5224 = extractelement <1 x bfloat> %5223, i64 0, !dbg !136
  %5225 = getelementptr inbounds nuw i8, ptr addrspace(3) %5210, i32 4224, !dbg !136
  %5226 = load <1 x bfloat>, ptr addrspace(3) %5225, align 2, !dbg !136
  %5227 = extractelement <1 x bfloat> %5226, i64 0, !dbg !136
  %5228 = getelementptr inbounds nuw i8, ptr addrspace(3) %5210, i32 6144, !dbg !136
  %5229 = load <1 x bfloat>, ptr addrspace(3) %5228, align 2, !dbg !136
  %5230 = extractelement <1 x bfloat> %5229, i64 0, !dbg !136
  %5231 = getelementptr inbounds nuw i8, ptr addrspace(3) %5210, i32 6272, !dbg !136
  %5232 = load <1 x bfloat>, ptr addrspace(3) %5231, align 2, !dbg !136
  %5233 = extractelement <1 x bfloat> %5232, i64 0, !dbg !136
  %5234 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi359, !dbg !136
  %5235 = load <1 x bfloat>, ptr addrspace(3) %5234, align 2, !dbg !136
  %5236 = extractelement <1 x bfloat> %5235, i64 0, !dbg !136
  %5237 = getelementptr inbounds nuw i8, ptr addrspace(3) %5234, i32 128, !dbg !136
  %5238 = load <1 x bfloat>, ptr addrspace(3) %5237, align 2, !dbg !136
  %5239 = extractelement <1 x bfloat> %5238, i64 0, !dbg !136
  %5240 = getelementptr inbounds nuw i8, ptr addrspace(3) %5234, i32 2048, !dbg !136
  %5241 = load <1 x bfloat>, ptr addrspace(3) %5240, align 2, !dbg !136
  %5242 = extractelement <1 x bfloat> %5241, i64 0, !dbg !136
  %5243 = getelementptr inbounds nuw i8, ptr addrspace(3) %5234, i32 2176, !dbg !136
  %5244 = load <1 x bfloat>, ptr addrspace(3) %5243, align 2, !dbg !136
  %5245 = extractelement <1 x bfloat> %5244, i64 0, !dbg !136
  %5246 = getelementptr inbounds nuw i8, ptr addrspace(3) %5234, i32 4096, !dbg !136
  %5247 = load <1 x bfloat>, ptr addrspace(3) %5246, align 2, !dbg !136
  %5248 = extractelement <1 x bfloat> %5247, i64 0, !dbg !136
  %5249 = getelementptr inbounds nuw i8, ptr addrspace(3) %5234, i32 4224, !dbg !136
  %5250 = load <1 x bfloat>, ptr addrspace(3) %5249, align 2, !dbg !136
  %5251 = extractelement <1 x bfloat> %5250, i64 0, !dbg !136
  %5252 = getelementptr inbounds nuw i8, ptr addrspace(3) %5234, i32 6144, !dbg !136
  %5253 = load <1 x bfloat>, ptr addrspace(3) %5252, align 2, !dbg !136
  %5254 = extractelement <1 x bfloat> %5253, i64 0, !dbg !136
  %5255 = getelementptr inbounds nuw i8, ptr addrspace(3) %5234, i32 6272, !dbg !136
  %5256 = load <1 x bfloat>, ptr addrspace(3) %5255, align 2, !dbg !136
  %5257 = extractelement <1 x bfloat> %5256, i64 0, !dbg !136
  %5258 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi363, !dbg !135
  %5259 = load <8 x bfloat>, ptr addrspace(3) %5258, align 16, !dbg !135
  %5260 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi365, !dbg !135
  %5261 = load <8 x bfloat>, ptr addrspace(3) %5260, align 16, !dbg !135
  %5262 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi367, !dbg !135
  %5263 = load <8 x bfloat>, ptr addrspace(3) %5262, align 16, !dbg !135
  %5264 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi369, !dbg !135
  %5265 = load <8 x bfloat>, ptr addrspace(3) %5264, align 16, !dbg !135
  %5266 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi371, !dbg !135
  %5267 = load <8 x bfloat>, ptr addrspace(3) %5266, align 16, !dbg !135
  %5268 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi373, !dbg !135
  %5269 = load <8 x bfloat>, ptr addrspace(3) %5268, align 16, !dbg !135
  %5270 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi375, !dbg !135
  %5271 = load <8 x bfloat>, ptr addrspace(3) %5270, align 16, !dbg !135
  %5272 = getelementptr inbounds nuw i8, ptr addrspace(3) @global_smem, i32 %.pre-phi377, !dbg !135
  %5273 = load <8 x bfloat>, ptr addrspace(3) %5272, align 16, !dbg !135
  br i1 %3769, label %5274, label %5315, !dbg !143

5274:                                             ; preds = %._crit_edge185
  %5275 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi377, !dbg !134
  %5276 = load <8 x bfloat>, ptr addrspace(3) %5275, align 16, !dbg !134
  %5277 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi375, !dbg !134
  %5278 = load <8 x bfloat>, ptr addrspace(3) %5277, align 16, !dbg !134
  %5279 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi373, !dbg !134
  %5280 = load <8 x bfloat>, ptr addrspace(3) %5279, align 16, !dbg !134
  %5281 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi371, !dbg !134
  %5282 = load <8 x bfloat>, ptr addrspace(3) %5281, align 16, !dbg !134
  %5283 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi369, !dbg !134
  %5284 = load <8 x bfloat>, ptr addrspace(3) %5283, align 16, !dbg !134
  %5285 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi367, !dbg !134
  %5286 = load <8 x bfloat>, ptr addrspace(3) %5285, align 16, !dbg !134
  %5287 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi365, !dbg !134
  %5288 = load <8 x bfloat>, ptr addrspace(3) %5287, align 16, !dbg !134
  %5289 = getelementptr inbounds nuw i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %.pre-phi363, !dbg !134
  %5290 = load <8 x bfloat>, ptr addrspace(3) %5289, align 16, !dbg !134
  %5291 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5290, <8 x bfloat> %3723, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !143
  %5292 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5286, <8 x bfloat> %3726, <16 x float> %5291, i32 0, i32 0, i32 0), !dbg !143
  %5293 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5282, <8 x bfloat> %3729, <16 x float> %5292, i32 0, i32 0, i32 0), !dbg !143
  %5294 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5278, <8 x bfloat> %3732, <16 x float> %5293, i32 0, i32 0, i32 0), !dbg !143
  %5295 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5288, <8 x bfloat> %3723, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !143
  %5296 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5284, <8 x bfloat> %3726, <16 x float> %5295, i32 0, i32 0, i32 0), !dbg !143
  %5297 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5280, <8 x bfloat> %3729, <16 x float> %5296, i32 0, i32 0, i32 0), !dbg !143
  %5298 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5276, <8 x bfloat> %3732, <16 x float> %5297, i32 0, i32 0, i32 0), !dbg !143
  %5299 = shufflevector <16 x float> %5298, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !13
  %5300 = shufflevector <16 x float> %5298, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !13
  %5301 = shufflevector <16 x float> %5298, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !13
  %5302 = shufflevector <16 x float> %5298, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !13
  %5303 = shufflevector <16 x float> %5298, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !13
  %5304 = shufflevector <16 x float> %5298, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !13
  %5305 = shufflevector <16 x float> %5298, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !13
  %5306 = shufflevector <16 x float> %5298, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !13
  %5307 = shufflevector <16 x float> %5294, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !13
  %5308 = shufflevector <16 x float> %5294, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !13
  %5309 = shufflevector <16 x float> %5294, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !13
  %5310 = shufflevector <16 x float> %5294, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !13
  %5311 = shufflevector <16 x float> %5294, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !13
  %5312 = shufflevector <16 x float> %5294, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !13
  %5313 = shufflevector <16 x float> %5294, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !13
  %5314 = shufflevector <16 x float> %5294, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !13
  br label %5315, !dbg !143

5315:                                             ; preds = %5274, %._crit_edge185
  %5316 = phi <2 x float> [ %5299, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5317 = phi <2 x float> [ %5300, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5318 = phi <2 x float> [ %5301, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5319 = phi <2 x float> [ %5302, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5320 = phi <2 x float> [ %5303, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5321 = phi <2 x float> [ %5304, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5322 = phi <2 x float> [ %5305, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5323 = phi <2 x float> [ %5306, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5324 = phi <2 x float> [ %5307, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5325 = phi <2 x float> [ %5308, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5326 = phi <2 x float> [ %5309, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5327 = phi <2 x float> [ %5310, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5328 = phi <2 x float> [ %5311, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5329 = phi <2 x float> [ %5312, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5330 = phi <2 x float> [ %5313, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5331 = phi <2 x float> [ %5314, %5274 ], [ zeroinitializer, %._crit_edge185 ], !dbg !13
  %5332 = extractelement <2 x float> %5331, i64 0, !dbg !144
  %5333 = fmul float %5332, 0x3FE9884540000000, !dbg !144
  %5334 = extractelement <2 x float> %5331, i64 1, !dbg !144
  %5335 = fmul float %5334, 0x3FE9884540000000, !dbg !144
  %5336 = extractelement <2 x float> %5330, i64 0, !dbg !144
  %5337 = fmul float %5336, 0x3FE9884540000000, !dbg !144
  %5338 = extractelement <2 x float> %5330, i64 1, !dbg !144
  %5339 = fmul float %5338, 0x3FE9884540000000, !dbg !144
  %5340 = extractelement <2 x float> %5329, i64 0, !dbg !144
  %5341 = fmul float %5340, 0x3FE9884540000000, !dbg !144
  %5342 = extractelement <2 x float> %5329, i64 1, !dbg !144
  %5343 = fmul float %5342, 0x3FE9884540000000, !dbg !144
  %5344 = extractelement <2 x float> %5328, i64 0, !dbg !144
  %5345 = fmul float %5344, 0x3FE9884540000000, !dbg !144
  %5346 = extractelement <2 x float> %5328, i64 1, !dbg !144
  %5347 = fmul float %5346, 0x3FE9884540000000, !dbg !144
  %5348 = extractelement <2 x float> %5327, i64 0, !dbg !144
  %5349 = fmul float %5348, 0x3FE9884540000000, !dbg !144
  %5350 = extractelement <2 x float> %5327, i64 1, !dbg !144
  %5351 = fmul float %5350, 0x3FE9884540000000, !dbg !144
  %5352 = extractelement <2 x float> %5326, i64 0, !dbg !144
  %5353 = fmul float %5352, 0x3FE9884540000000, !dbg !144
  %5354 = extractelement <2 x float> %5326, i64 1, !dbg !144
  %5355 = fmul float %5354, 0x3FE9884540000000, !dbg !144
  %5356 = extractelement <2 x float> %5325, i64 0, !dbg !144
  %5357 = fmul float %5356, 0x3FE9884540000000, !dbg !144
  %5358 = extractelement <2 x float> %5325, i64 1, !dbg !144
  %5359 = fmul float %5358, 0x3FE9884540000000, !dbg !144
  %5360 = extractelement <2 x float> %5324, i64 0, !dbg !144
  %5361 = fmul float %5360, 0x3FE9884540000000, !dbg !144
  %5362 = extractelement <2 x float> %5324, i64 1, !dbg !144
  %5363 = fmul float %5362, 0x3FE9884540000000, !dbg !144
  %5364 = extractelement <2 x float> %5323, i64 0, !dbg !144
  %5365 = fmul float %5364, 0x3FE9884540000000, !dbg !144
  %5366 = extractelement <2 x float> %5323, i64 1, !dbg !144
  %5367 = fmul float %5366, 0x3FE9884540000000, !dbg !144
  %5368 = extractelement <2 x float> %5322, i64 0, !dbg !144
  %5369 = fmul float %5368, 0x3FE9884540000000, !dbg !144
  %5370 = extractelement <2 x float> %5322, i64 1, !dbg !144
  %5371 = fmul float %5370, 0x3FE9884540000000, !dbg !144
  %5372 = extractelement <2 x float> %5321, i64 0, !dbg !144
  %5373 = fmul float %5372, 0x3FE9884540000000, !dbg !144
  %5374 = extractelement <2 x float> %5321, i64 1, !dbg !144
  %5375 = fmul float %5374, 0x3FE9884540000000, !dbg !144
  %5376 = extractelement <2 x float> %5320, i64 0, !dbg !144
  %5377 = fmul float %5376, 0x3FE9884540000000, !dbg !144
  %5378 = extractelement <2 x float> %5320, i64 1, !dbg !144
  %5379 = fmul float %5378, 0x3FE9884540000000, !dbg !144
  %5380 = extractelement <2 x float> %5319, i64 0, !dbg !144
  %5381 = fmul float %5380, 0x3FE9884540000000, !dbg !144
  %5382 = extractelement <2 x float> %5319, i64 1, !dbg !144
  %5383 = fmul float %5382, 0x3FE9884540000000, !dbg !144
  %5384 = extractelement <2 x float> %5318, i64 0, !dbg !144
  %5385 = fmul float %5384, 0x3FE9884540000000, !dbg !144
  %5386 = extractelement <2 x float> %5318, i64 1, !dbg !144
  %5387 = fmul float %5386, 0x3FE9884540000000, !dbg !144
  %5388 = extractelement <2 x float> %5317, i64 0, !dbg !144
  %5389 = fmul float %5388, 0x3FE9884540000000, !dbg !144
  %5390 = extractelement <2 x float> %5317, i64 1, !dbg !144
  %5391 = fmul float %5390, 0x3FE9884540000000, !dbg !144
  %5392 = extractelement <2 x float> %5316, i64 0, !dbg !144
  %5393 = fmul float %5392, 0x3FE9884540000000, !dbg !144
  %5394 = extractelement <2 x float> %5316, i64 1, !dbg !144
  %5395 = fmul float %5394, 0x3FE9884540000000, !dbg !144
  %5396 = fmul float %5332, 0x3FA6E4E260000000, !dbg !145
  %5397 = fmul float %5334, 0x3FA6E4E260000000, !dbg !145
  %5398 = fmul float %5336, 0x3FA6E4E260000000, !dbg !145
  %5399 = fmul float %5338, 0x3FA6E4E260000000, !dbg !145
  %5400 = fmul float %5340, 0x3FA6E4E260000000, !dbg !145
  %5401 = fmul float %5342, 0x3FA6E4E260000000, !dbg !145
  %5402 = fmul float %5344, 0x3FA6E4E260000000, !dbg !145
  %5403 = fmul float %5346, 0x3FA6E4E260000000, !dbg !145
  %5404 = fmul float %5348, 0x3FA6E4E260000000, !dbg !145
  %5405 = fmul float %5350, 0x3FA6E4E260000000, !dbg !145
  %5406 = fmul float %5352, 0x3FA6E4E260000000, !dbg !145
  %5407 = fmul float %5354, 0x3FA6E4E260000000, !dbg !145
  %5408 = fmul float %5356, 0x3FA6E4E260000000, !dbg !145
  %5409 = fmul float %5358, 0x3FA6E4E260000000, !dbg !145
  %5410 = fmul float %5360, 0x3FA6E4E260000000, !dbg !145
  %5411 = fmul float %5362, 0x3FA6E4E260000000, !dbg !145
  %5412 = fmul float %5364, 0x3FA6E4E260000000, !dbg !145
  %5413 = fmul float %5366, 0x3FA6E4E260000000, !dbg !145
  %5414 = fmul float %5368, 0x3FA6E4E260000000, !dbg !145
  %5415 = fmul float %5370, 0x3FA6E4E260000000, !dbg !145
  %5416 = fmul float %5372, 0x3FA6E4E260000000, !dbg !145
  %5417 = fmul float %5374, 0x3FA6E4E260000000, !dbg !145
  %5418 = fmul float %5376, 0x3FA6E4E260000000, !dbg !145
  %5419 = fmul float %5378, 0x3FA6E4E260000000, !dbg !145
  %5420 = fmul float %5380, 0x3FA6E4E260000000, !dbg !145
  %5421 = fmul float %5382, 0x3FA6E4E260000000, !dbg !145
  %5422 = fmul float %5384, 0x3FA6E4E260000000, !dbg !145
  %5423 = fmul float %5386, 0x3FA6E4E260000000, !dbg !145
  %5424 = fmul float %5388, 0x3FA6E4E260000000, !dbg !145
  %5425 = fmul float %5390, 0x3FA6E4E260000000, !dbg !145
  %5426 = fmul float %5392, 0x3FA6E4E260000000, !dbg !145
  %5427 = fmul float %5394, 0x3FA6E4E260000000, !dbg !145
  %5428 = fmul float %5332, %5396, !dbg !146
  %5429 = fmul float %5334, %5397, !dbg !146
  %5430 = fmul float %5336, %5398, !dbg !146
  %5431 = fmul float %5338, %5399, !dbg !146
  %5432 = fmul float %5340, %5400, !dbg !146
  %5433 = fmul float %5342, %5401, !dbg !146
  %5434 = fmul float %5344, %5402, !dbg !146
  %5435 = fmul float %5346, %5403, !dbg !146
  %5436 = fmul float %5348, %5404, !dbg !146
  %5437 = fmul float %5350, %5405, !dbg !146
  %5438 = fmul float %5352, %5406, !dbg !146
  %5439 = fmul float %5354, %5407, !dbg !146
  %5440 = fmul float %5356, %5408, !dbg !146
  %5441 = fmul float %5358, %5409, !dbg !146
  %5442 = fmul float %5360, %5410, !dbg !146
  %5443 = fmul float %5362, %5411, !dbg !146
  %5444 = fmul float %5364, %5412, !dbg !146
  %5445 = fmul float %5366, %5413, !dbg !146
  %5446 = fmul float %5368, %5414, !dbg !146
  %5447 = fmul float %5370, %5415, !dbg !146
  %5448 = fmul float %5372, %5416, !dbg !146
  %5449 = fmul float %5374, %5417, !dbg !146
  %5450 = fmul float %5376, %5418, !dbg !146
  %5451 = fmul float %5378, %5419, !dbg !146
  %5452 = fmul float %5380, %5420, !dbg !146
  %5453 = fmul float %5382, %5421, !dbg !146
  %5454 = fmul float %5384, %5422, !dbg !146
  %5455 = fmul float %5386, %5423, !dbg !146
  %5456 = fmul float %5388, %5424, !dbg !146
  %5457 = fmul float %5390, %5425, !dbg !146
  %5458 = fmul float %5392, %5426, !dbg !146
  %5459 = fmul float %5394, %5427, !dbg !146
  %5460 = fadd float %5428, 1.000000e+00, !dbg !147
  %5461 = fadd float %5429, 1.000000e+00, !dbg !147
  %5462 = fadd float %5430, 1.000000e+00, !dbg !147
  %5463 = fadd float %5431, 1.000000e+00, !dbg !147
  %5464 = fadd float %5432, 1.000000e+00, !dbg !147
  %5465 = fadd float %5433, 1.000000e+00, !dbg !147
  %5466 = fadd float %5434, 1.000000e+00, !dbg !147
  %5467 = fadd float %5435, 1.000000e+00, !dbg !147
  %5468 = fadd float %5436, 1.000000e+00, !dbg !147
  %5469 = fadd float %5437, 1.000000e+00, !dbg !147
  %5470 = fadd float %5438, 1.000000e+00, !dbg !147
  %5471 = fadd float %5439, 1.000000e+00, !dbg !147
  %5472 = fadd float %5440, 1.000000e+00, !dbg !147
  %5473 = fadd float %5441, 1.000000e+00, !dbg !147
  %5474 = fadd float %5442, 1.000000e+00, !dbg !147
  %5475 = fadd float %5443, 1.000000e+00, !dbg !147
  %5476 = fadd float %5444, 1.000000e+00, !dbg !147
  %5477 = fadd float %5445, 1.000000e+00, !dbg !147
  %5478 = fadd float %5446, 1.000000e+00, !dbg !147
  %5479 = fadd float %5447, 1.000000e+00, !dbg !147
  %5480 = fadd float %5448, 1.000000e+00, !dbg !147
  %5481 = fadd float %5449, 1.000000e+00, !dbg !147
  %5482 = fadd float %5450, 1.000000e+00, !dbg !147
  %5483 = fadd float %5451, 1.000000e+00, !dbg !147
  %5484 = fadd float %5452, 1.000000e+00, !dbg !147
  %5485 = fadd float %5453, 1.000000e+00, !dbg !147
  %5486 = fadd float %5454, 1.000000e+00, !dbg !147
  %5487 = fadd float %5455, 1.000000e+00, !dbg !147
  %5488 = fadd float %5456, 1.000000e+00, !dbg !147
  %5489 = fadd float %5457, 1.000000e+00, !dbg !147
  %5490 = fadd float %5458, 1.000000e+00, !dbg !147
  %5491 = fadd float %5459, 1.000000e+00, !dbg !147
  %5492 = fmul float %5333, %5460, !dbg !148
  %5493 = fmul float %5335, %5461, !dbg !148
  %5494 = fmul float %5337, %5462, !dbg !148
  %5495 = fmul float %5339, %5463, !dbg !148
  %5496 = fmul float %5341, %5464, !dbg !148
  %5497 = fmul float %5343, %5465, !dbg !148
  %5498 = fmul float %5345, %5466, !dbg !148
  %5499 = fmul float %5347, %5467, !dbg !148
  %5500 = fmul float %5349, %5468, !dbg !148
  %5501 = fmul float %5351, %5469, !dbg !148
  %5502 = fmul float %5353, %5470, !dbg !148
  %5503 = fmul float %5355, %5471, !dbg !148
  %5504 = fmul float %5357, %5472, !dbg !148
  %5505 = fmul float %5359, %5473, !dbg !148
  %5506 = fmul float %5361, %5474, !dbg !148
  %5507 = fmul float %5363, %5475, !dbg !148
  %5508 = fmul float %5365, %5476, !dbg !148
  %5509 = fmul float %5367, %5477, !dbg !148
  %5510 = fmul float %5369, %5478, !dbg !148
  %5511 = fmul float %5371, %5479, !dbg !148
  %5512 = fmul float %5373, %5480, !dbg !148
  %5513 = fmul float %5375, %5481, !dbg !148
  %5514 = fmul float %5377, %5482, !dbg !148
  %5515 = fmul float %5379, %5483, !dbg !148
  %5516 = fmul float %5381, %5484, !dbg !148
  %5517 = fmul float %5383, %5485, !dbg !148
  %5518 = fmul float %5385, %5486, !dbg !148
  %5519 = fmul float %5387, %5487, !dbg !148
  %5520 = fmul float %5389, %5488, !dbg !148
  %5521 = fmul float %5391, %5489, !dbg !148
  %5522 = fmul float %5393, %5490, !dbg !148
  %5523 = fmul float %5395, %5491, !dbg !148
  %5524 = fmul float %5492, 2.000000e+00, !dbg !87
  %5525 = fmul float %5493, 2.000000e+00, !dbg !87
  %5526 = fmul float %5494, 2.000000e+00, !dbg !87
  %5527 = fmul float %5495, 2.000000e+00, !dbg !87
  %5528 = fmul float %5496, 2.000000e+00, !dbg !87
  %5529 = fmul float %5497, 2.000000e+00, !dbg !87
  %5530 = fmul float %5498, 2.000000e+00, !dbg !87
  %5531 = fmul float %5499, 2.000000e+00, !dbg !87
  %5532 = fmul float %5500, 2.000000e+00, !dbg !87
  %5533 = fmul float %5501, 2.000000e+00, !dbg !87
  %5534 = fmul float %5502, 2.000000e+00, !dbg !87
  %5535 = fmul float %5503, 2.000000e+00, !dbg !87
  %5536 = fmul float %5504, 2.000000e+00, !dbg !87
  %5537 = fmul float %5505, 2.000000e+00, !dbg !87
  %5538 = fmul float %5506, 2.000000e+00, !dbg !87
  %5539 = fmul float %5507, 2.000000e+00, !dbg !87
  %5540 = fmul float %5508, 2.000000e+00, !dbg !87
  %5541 = fmul float %5509, 2.000000e+00, !dbg !87
  %5542 = fmul float %5510, 2.000000e+00, !dbg !87
  %5543 = fmul float %5511, 2.000000e+00, !dbg !87
  %5544 = fmul float %5512, 2.000000e+00, !dbg !87
  %5545 = fmul float %5513, 2.000000e+00, !dbg !87
  %5546 = fmul float %5514, 2.000000e+00, !dbg !87
  %5547 = fmul float %5515, 2.000000e+00, !dbg !87
  %5548 = fmul float %5516, 2.000000e+00, !dbg !87
  %5549 = fmul float %5517, 2.000000e+00, !dbg !87
  %5550 = fmul float %5518, 2.000000e+00, !dbg !87
  %5551 = fmul float %5519, 2.000000e+00, !dbg !87
  %5552 = fmul float %5520, 2.000000e+00, !dbg !87
  %5553 = fmul float %5521, 2.000000e+00, !dbg !87
  %5554 = fmul float %5522, 2.000000e+00, !dbg !87
  %5555 = fmul float %5523, 2.000000e+00, !dbg !87
  %5556 = fsub float 0.000000e+00, %5524, !dbg !90
  %5557 = fsub float 0.000000e+00, %5525, !dbg !90
  %5558 = fsub float 0.000000e+00, %5526, !dbg !90
  %5559 = fsub float 0.000000e+00, %5527, !dbg !90
  %5560 = fsub float 0.000000e+00, %5528, !dbg !90
  %5561 = fsub float 0.000000e+00, %5529, !dbg !90
  %5562 = fsub float 0.000000e+00, %5530, !dbg !90
  %5563 = fsub float 0.000000e+00, %5531, !dbg !90
  %5564 = fsub float 0.000000e+00, %5532, !dbg !90
  %5565 = fsub float 0.000000e+00, %5533, !dbg !90
  %5566 = fsub float 0.000000e+00, %5534, !dbg !90
  %5567 = fsub float 0.000000e+00, %5535, !dbg !90
  %5568 = fsub float 0.000000e+00, %5536, !dbg !90
  %5569 = fsub float 0.000000e+00, %5537, !dbg !90
  %5570 = fsub float 0.000000e+00, %5538, !dbg !90
  %5571 = fsub float 0.000000e+00, %5539, !dbg !90
  %5572 = fsub float 0.000000e+00, %5540, !dbg !90
  %5573 = fsub float 0.000000e+00, %5541, !dbg !90
  %5574 = fsub float 0.000000e+00, %5542, !dbg !90
  %5575 = fsub float 0.000000e+00, %5543, !dbg !90
  %5576 = fsub float 0.000000e+00, %5544, !dbg !90
  %5577 = fsub float 0.000000e+00, %5545, !dbg !90
  %5578 = fsub float 0.000000e+00, %5546, !dbg !90
  %5579 = fsub float 0.000000e+00, %5547, !dbg !90
  %5580 = fsub float 0.000000e+00, %5548, !dbg !90
  %5581 = fsub float 0.000000e+00, %5549, !dbg !90
  %5582 = fsub float 0.000000e+00, %5550, !dbg !90
  %5583 = fsub float 0.000000e+00, %5551, !dbg !90
  %5584 = fsub float 0.000000e+00, %5552, !dbg !90
  %5585 = fsub float 0.000000e+00, %5553, !dbg !90
  %5586 = fsub float 0.000000e+00, %5554, !dbg !90
  %5587 = fsub float 0.000000e+00, %5555, !dbg !90
  %5588 = fmul float %5556, 0x3FF7154760000000, !dbg !91
  %5589 = tail call float @llvm.exp2.f32(float %5588), !dbg !91
  %5590 = fmul float %5557, 0x3FF7154760000000, !dbg !91
  %5591 = tail call float @llvm.exp2.f32(float %5590), !dbg !91
  %5592 = fmul float %5558, 0x3FF7154760000000, !dbg !91
  %5593 = tail call float @llvm.exp2.f32(float %5592), !dbg !91
  %5594 = fmul float %5559, 0x3FF7154760000000, !dbg !91
  %5595 = tail call float @llvm.exp2.f32(float %5594), !dbg !91
  %5596 = fmul float %5560, 0x3FF7154760000000, !dbg !91
  %5597 = tail call float @llvm.exp2.f32(float %5596), !dbg !91
  %5598 = fmul float %5561, 0x3FF7154760000000, !dbg !91
  %5599 = tail call float @llvm.exp2.f32(float %5598), !dbg !91
  %5600 = fmul float %5562, 0x3FF7154760000000, !dbg !91
  %5601 = tail call float @llvm.exp2.f32(float %5600), !dbg !91
  %5602 = fmul float %5563, 0x3FF7154760000000, !dbg !91
  %5603 = tail call float @llvm.exp2.f32(float %5602), !dbg !91
  %5604 = fmul float %5564, 0x3FF7154760000000, !dbg !91
  %5605 = tail call float @llvm.exp2.f32(float %5604), !dbg !91
  %5606 = fmul float %5565, 0x3FF7154760000000, !dbg !91
  %5607 = tail call float @llvm.exp2.f32(float %5606), !dbg !91
  %5608 = fmul float %5566, 0x3FF7154760000000, !dbg !91
  %5609 = tail call float @llvm.exp2.f32(float %5608), !dbg !91
  %5610 = fmul float %5567, 0x3FF7154760000000, !dbg !91
  %5611 = tail call float @llvm.exp2.f32(float %5610), !dbg !91
  %5612 = fmul float %5568, 0x3FF7154760000000, !dbg !91
  %5613 = tail call float @llvm.exp2.f32(float %5612), !dbg !91
  %5614 = fmul float %5569, 0x3FF7154760000000, !dbg !91
  %5615 = tail call float @llvm.exp2.f32(float %5614), !dbg !91
  %5616 = fmul float %5570, 0x3FF7154760000000, !dbg !91
  %5617 = tail call float @llvm.exp2.f32(float %5616), !dbg !91
  %5618 = fmul float %5571, 0x3FF7154760000000, !dbg !91
  %5619 = tail call float @llvm.exp2.f32(float %5618), !dbg !91
  %5620 = fmul float %5572, 0x3FF7154760000000, !dbg !91
  %5621 = tail call float @llvm.exp2.f32(float %5620), !dbg !91
  %5622 = fmul float %5573, 0x3FF7154760000000, !dbg !91
  %5623 = tail call float @llvm.exp2.f32(float %5622), !dbg !91
  %5624 = fmul float %5574, 0x3FF7154760000000, !dbg !91
  %5625 = tail call float @llvm.exp2.f32(float %5624), !dbg !91
  %5626 = fmul float %5575, 0x3FF7154760000000, !dbg !91
  %5627 = tail call float @llvm.exp2.f32(float %5626), !dbg !91
  %5628 = fmul float %5576, 0x3FF7154760000000, !dbg !91
  %5629 = tail call float @llvm.exp2.f32(float %5628), !dbg !91
  %5630 = fmul float %5577, 0x3FF7154760000000, !dbg !91
  %5631 = tail call float @llvm.exp2.f32(float %5630), !dbg !91
  %5632 = fmul float %5578, 0x3FF7154760000000, !dbg !91
  %5633 = tail call float @llvm.exp2.f32(float %5632), !dbg !91
  %5634 = fmul float %5579, 0x3FF7154760000000, !dbg !91
  %5635 = tail call float @llvm.exp2.f32(float %5634), !dbg !91
  %5636 = fmul float %5580, 0x3FF7154760000000, !dbg !91
  %5637 = tail call float @llvm.exp2.f32(float %5636), !dbg !91
  %5638 = fmul float %5581, 0x3FF7154760000000, !dbg !91
  %5639 = tail call float @llvm.exp2.f32(float %5638), !dbg !91
  %5640 = fmul float %5582, 0x3FF7154760000000, !dbg !91
  %5641 = tail call float @llvm.exp2.f32(float %5640), !dbg !91
  %5642 = fmul float %5583, 0x3FF7154760000000, !dbg !91
  %5643 = tail call float @llvm.exp2.f32(float %5642), !dbg !91
  %5644 = fmul float %5584, 0x3FF7154760000000, !dbg !91
  %5645 = tail call float @llvm.exp2.f32(float %5644), !dbg !91
  %5646 = fmul float %5585, 0x3FF7154760000000, !dbg !91
  %5647 = tail call float @llvm.exp2.f32(float %5646), !dbg !91
  %5648 = fmul float %5586, 0x3FF7154760000000, !dbg !91
  %5649 = tail call float @llvm.exp2.f32(float %5648), !dbg !91
  %5650 = fmul float %5587, 0x3FF7154760000000, !dbg !91
  %5651 = tail call float @llvm.exp2.f32(float %5650), !dbg !91
  %5652 = fmul <2 x float> %5331, splat (float 5.000000e-01), !dbg !150
  %5653 = fmul <2 x float> %5330, splat (float 5.000000e-01), !dbg !150
  %5654 = fmul <2 x float> %5329, splat (float 5.000000e-01), !dbg !150
  %5655 = fmul <2 x float> %5328, splat (float 5.000000e-01), !dbg !150
  %5656 = fmul <2 x float> %5327, splat (float 5.000000e-01), !dbg !150
  %5657 = fmul <2 x float> %5326, splat (float 5.000000e-01), !dbg !150
  %5658 = fmul <2 x float> %5325, splat (float 5.000000e-01), !dbg !150
  %5659 = fmul <2 x float> %5324, splat (float 5.000000e-01), !dbg !150
  %5660 = fmul <2 x float> %5323, splat (float 5.000000e-01), !dbg !150
  %5661 = fmul <2 x float> %5322, splat (float 5.000000e-01), !dbg !150
  %5662 = fmul <2 x float> %5321, splat (float 5.000000e-01), !dbg !150
  %5663 = fmul <2 x float> %5320, splat (float 5.000000e-01), !dbg !150
  %5664 = fmul <2 x float> %5319, splat (float 5.000000e-01), !dbg !150
  %5665 = fmul <2 x float> %5318, splat (float 5.000000e-01), !dbg !150
  %5666 = fmul <2 x float> %5317, splat (float 5.000000e-01), !dbg !150
  %5667 = fmul <2 x float> %5316, splat (float 5.000000e-01), !dbg !150
  %5668 = fmul <2 x float> %5331, splat (float 0x3FBB6676C0000000), !dbg !153
  %5669 = fmul <2 x float> %5330, splat (float 0x3FBB6676C0000000), !dbg !153
  %5670 = fmul <2 x float> %5329, splat (float 0x3FBB6676C0000000), !dbg !153
  %5671 = fmul <2 x float> %5328, splat (float 0x3FBB6676C0000000), !dbg !153
  %5672 = fmul <2 x float> %5327, splat (float 0x3FBB6676C0000000), !dbg !153
  %5673 = fmul <2 x float> %5326, splat (float 0x3FBB6676C0000000), !dbg !153
  %5674 = fmul <2 x float> %5325, splat (float 0x3FBB6676C0000000), !dbg !153
  %5675 = fmul <2 x float> %5324, splat (float 0x3FBB6676C0000000), !dbg !153
  %5676 = fmul <2 x float> %5323, splat (float 0x3FBB6676C0000000), !dbg !153
  %5677 = fmul <2 x float> %5322, splat (float 0x3FBB6676C0000000), !dbg !153
  %5678 = fmul <2 x float> %5321, splat (float 0x3FBB6676C0000000), !dbg !153
  %5679 = fmul <2 x float> %5320, splat (float 0x3FBB6676C0000000), !dbg !153
  %5680 = fmul <2 x float> %5319, splat (float 0x3FBB6676C0000000), !dbg !153
  %5681 = fmul <2 x float> %5318, splat (float 0x3FBB6676C0000000), !dbg !153
  %5682 = fmul <2 x float> %5317, splat (float 0x3FBB6676C0000000), !dbg !153
  %5683 = fmul <2 x float> %5316, splat (float 0x3FBB6676C0000000), !dbg !153
  %5684 = insertelement <2 x float> poison, float %5589, i64 0, !dbg !93
  %5685 = insertelement <2 x float> %5684, float %5591, i64 1, !dbg !93
  %5686 = fadd <2 x float> %5685, splat (float 1.000000e+00), !dbg !93
  %5687 = fdiv <2 x float> splat (float 1.000000e+00), %5686, !dbg !94
  %5688 = fmul <2 x float> %5687, splat (float 2.000000e+00), !dbg !95
  %5689 = fadd <2 x float> %5688, splat (float -1.000000e+00), !dbg !96
  %5690 = fmul <2 x float> %5689, %5689, !dbg !151
  %5691 = fsub <2 x float> splat (float 1.000000e+00), %5690, !dbg !152
  %5692 = fmul <2 x float> %5331, %5668, !dbg !154
  %5693 = fadd <2 x float> %5692, splat (float 0x3FE9884540000000), !dbg !155
  %5694 = fmul <2 x float> %5693, %5691, !dbg !156
  %5695 = fmul <2 x float> %5652, %5694, !dbg !157
  %5696 = fadd <2 x float> %5689, splat (float 1.000000e+00), !dbg !158
  %5697 = fmul <2 x float> %5696, splat (float 5.000000e-01), !dbg !159
  %5698 = fadd <2 x float> %5697, %5695, !dbg !160
  %5699 = insertelement <2 x float> poison, float %5593, i64 0, !dbg !93
  %5700 = insertelement <2 x float> %5699, float %5595, i64 1, !dbg !93
  %5701 = fadd <2 x float> %5700, splat (float 1.000000e+00), !dbg !93
  %5702 = fdiv <2 x float> splat (float 1.000000e+00), %5701, !dbg !94
  %5703 = fmul <2 x float> %5702, splat (float 2.000000e+00), !dbg !95
  %5704 = fadd <2 x float> %5703, splat (float -1.000000e+00), !dbg !96
  %5705 = fmul <2 x float> %5704, %5704, !dbg !151
  %5706 = fsub <2 x float> splat (float 1.000000e+00), %5705, !dbg !152
  %5707 = fmul <2 x float> %5330, %5669, !dbg !154
  %5708 = fadd <2 x float> %5707, splat (float 0x3FE9884540000000), !dbg !155
  %5709 = fmul <2 x float> %5708, %5706, !dbg !156
  %5710 = fmul <2 x float> %5653, %5709, !dbg !157
  %5711 = fadd <2 x float> %5704, splat (float 1.000000e+00), !dbg !158
  %5712 = fmul <2 x float> %5711, splat (float 5.000000e-01), !dbg !159
  %5713 = fadd <2 x float> %5712, %5710, !dbg !160
  %5714 = insertelement <2 x float> poison, float %5597, i64 0, !dbg !93
  %5715 = insertelement <2 x float> %5714, float %5599, i64 1, !dbg !93
  %5716 = fadd <2 x float> %5715, splat (float 1.000000e+00), !dbg !93
  %5717 = fdiv <2 x float> splat (float 1.000000e+00), %5716, !dbg !94
  %5718 = fmul <2 x float> %5717, splat (float 2.000000e+00), !dbg !95
  %5719 = fadd <2 x float> %5718, splat (float -1.000000e+00), !dbg !96
  %5720 = fmul <2 x float> %5719, %5719, !dbg !151
  %5721 = fsub <2 x float> splat (float 1.000000e+00), %5720, !dbg !152
  %5722 = fmul <2 x float> %5329, %5670, !dbg !154
  %5723 = fadd <2 x float> %5722, splat (float 0x3FE9884540000000), !dbg !155
  %5724 = fmul <2 x float> %5723, %5721, !dbg !156
  %5725 = fmul <2 x float> %5654, %5724, !dbg !157
  %5726 = fadd <2 x float> %5719, splat (float 1.000000e+00), !dbg !158
  %5727 = fmul <2 x float> %5726, splat (float 5.000000e-01), !dbg !159
  %5728 = fadd <2 x float> %5727, %5725, !dbg !160
  %5729 = insertelement <2 x float> poison, float %5601, i64 0, !dbg !93
  %5730 = insertelement <2 x float> %5729, float %5603, i64 1, !dbg !93
  %5731 = fadd <2 x float> %5730, splat (float 1.000000e+00), !dbg !93
  %5732 = fdiv <2 x float> splat (float 1.000000e+00), %5731, !dbg !94
  %5733 = fmul <2 x float> %5732, splat (float 2.000000e+00), !dbg !95
  %5734 = fadd <2 x float> %5733, splat (float -1.000000e+00), !dbg !96
  %5735 = fmul <2 x float> %5734, %5734, !dbg !151
  %5736 = fsub <2 x float> splat (float 1.000000e+00), %5735, !dbg !152
  %5737 = fmul <2 x float> %5328, %5671, !dbg !154
  %5738 = fadd <2 x float> %5737, splat (float 0x3FE9884540000000), !dbg !155
  %5739 = fmul <2 x float> %5738, %5736, !dbg !156
  %5740 = fmul <2 x float> %5655, %5739, !dbg !157
  %5741 = fadd <2 x float> %5734, splat (float 1.000000e+00), !dbg !158
  %5742 = fmul <2 x float> %5741, splat (float 5.000000e-01), !dbg !159
  %5743 = fadd <2 x float> %5742, %5740, !dbg !160
  %5744 = insertelement <2 x float> poison, float %5605, i64 0, !dbg !93
  %5745 = insertelement <2 x float> %5744, float %5607, i64 1, !dbg !93
  %5746 = fadd <2 x float> %5745, splat (float 1.000000e+00), !dbg !93
  %5747 = fdiv <2 x float> splat (float 1.000000e+00), %5746, !dbg !94
  %5748 = fmul <2 x float> %5747, splat (float 2.000000e+00), !dbg !95
  %5749 = fadd <2 x float> %5748, splat (float -1.000000e+00), !dbg !96
  %5750 = fmul <2 x float> %5749, %5749, !dbg !151
  %5751 = fsub <2 x float> splat (float 1.000000e+00), %5750, !dbg !152
  %5752 = fmul <2 x float> %5327, %5672, !dbg !154
  %5753 = fadd <2 x float> %5752, splat (float 0x3FE9884540000000), !dbg !155
  %5754 = fmul <2 x float> %5753, %5751, !dbg !156
  %5755 = fmul <2 x float> %5656, %5754, !dbg !157
  %5756 = fadd <2 x float> %5749, splat (float 1.000000e+00), !dbg !158
  %5757 = fmul <2 x float> %5756, splat (float 5.000000e-01), !dbg !159
  %5758 = fadd <2 x float> %5757, %5755, !dbg !160
  %5759 = insertelement <2 x float> poison, float %5609, i64 0, !dbg !93
  %5760 = insertelement <2 x float> %5759, float %5611, i64 1, !dbg !93
  %5761 = fadd <2 x float> %5760, splat (float 1.000000e+00), !dbg !93
  %5762 = fdiv <2 x float> splat (float 1.000000e+00), %5761, !dbg !94
  %5763 = fmul <2 x float> %5762, splat (float 2.000000e+00), !dbg !95
  %5764 = fadd <2 x float> %5763, splat (float -1.000000e+00), !dbg !96
  %5765 = fmul <2 x float> %5764, %5764, !dbg !151
  %5766 = fsub <2 x float> splat (float 1.000000e+00), %5765, !dbg !152
  %5767 = fmul <2 x float> %5326, %5673, !dbg !154
  %5768 = fadd <2 x float> %5767, splat (float 0x3FE9884540000000), !dbg !155
  %5769 = fmul <2 x float> %5768, %5766, !dbg !156
  %5770 = fmul <2 x float> %5657, %5769, !dbg !157
  %5771 = fadd <2 x float> %5764, splat (float 1.000000e+00), !dbg !158
  %5772 = fmul <2 x float> %5771, splat (float 5.000000e-01), !dbg !159
  %5773 = fadd <2 x float> %5772, %5770, !dbg !160
  %5774 = insertelement <2 x float> poison, float %5613, i64 0, !dbg !93
  %5775 = insertelement <2 x float> %5774, float %5615, i64 1, !dbg !93
  %5776 = fadd <2 x float> %5775, splat (float 1.000000e+00), !dbg !93
  %5777 = fdiv <2 x float> splat (float 1.000000e+00), %5776, !dbg !94
  %5778 = fmul <2 x float> %5777, splat (float 2.000000e+00), !dbg !95
  %5779 = fadd <2 x float> %5778, splat (float -1.000000e+00), !dbg !96
  %5780 = fmul <2 x float> %5779, %5779, !dbg !151
  %5781 = fsub <2 x float> splat (float 1.000000e+00), %5780, !dbg !152
  %5782 = fmul <2 x float> %5325, %5674, !dbg !154
  %5783 = fadd <2 x float> %5782, splat (float 0x3FE9884540000000), !dbg !155
  %5784 = fmul <2 x float> %5783, %5781, !dbg !156
  %5785 = fmul <2 x float> %5658, %5784, !dbg !157
  %5786 = fadd <2 x float> %5779, splat (float 1.000000e+00), !dbg !158
  %5787 = fmul <2 x float> %5786, splat (float 5.000000e-01), !dbg !159
  %5788 = fadd <2 x float> %5787, %5785, !dbg !160
  %5789 = insertelement <2 x float> poison, float %5617, i64 0, !dbg !93
  %5790 = insertelement <2 x float> %5789, float %5619, i64 1, !dbg !93
  %5791 = fadd <2 x float> %5790, splat (float 1.000000e+00), !dbg !93
  %5792 = fdiv <2 x float> splat (float 1.000000e+00), %5791, !dbg !94
  %5793 = fmul <2 x float> %5792, splat (float 2.000000e+00), !dbg !95
  %5794 = fadd <2 x float> %5793, splat (float -1.000000e+00), !dbg !96
  %5795 = fmul <2 x float> %5794, %5794, !dbg !151
  %5796 = fsub <2 x float> splat (float 1.000000e+00), %5795, !dbg !152
  %5797 = fmul <2 x float> %5324, %5675, !dbg !154
  %5798 = fadd <2 x float> %5797, splat (float 0x3FE9884540000000), !dbg !155
  %5799 = fmul <2 x float> %5798, %5796, !dbg !156
  %5800 = fmul <2 x float> %5659, %5799, !dbg !157
  %5801 = fadd <2 x float> %5794, splat (float 1.000000e+00), !dbg !158
  %5802 = fmul <2 x float> %5801, splat (float 5.000000e-01), !dbg !159
  %5803 = fadd <2 x float> %5802, %5800, !dbg !160
  %5804 = insertelement <2 x float> poison, float %5621, i64 0, !dbg !93
  %5805 = insertelement <2 x float> %5804, float %5623, i64 1, !dbg !93
  %5806 = fadd <2 x float> %5805, splat (float 1.000000e+00), !dbg !93
  %5807 = fdiv <2 x float> splat (float 1.000000e+00), %5806, !dbg !94
  %5808 = fmul <2 x float> %5807, splat (float 2.000000e+00), !dbg !95
  %5809 = fadd <2 x float> %5808, splat (float -1.000000e+00), !dbg !96
  %5810 = fmul <2 x float> %5809, %5809, !dbg !151
  %5811 = fsub <2 x float> splat (float 1.000000e+00), %5810, !dbg !152
  %5812 = fmul <2 x float> %5323, %5676, !dbg !154
  %5813 = fadd <2 x float> %5812, splat (float 0x3FE9884540000000), !dbg !155
  %5814 = fmul <2 x float> %5813, %5811, !dbg !156
  %5815 = fmul <2 x float> %5660, %5814, !dbg !157
  %5816 = fadd <2 x float> %5809, splat (float 1.000000e+00), !dbg !158
  %5817 = fmul <2 x float> %5816, splat (float 5.000000e-01), !dbg !159
  %5818 = fadd <2 x float> %5817, %5815, !dbg !160
  %5819 = insertelement <2 x float> poison, float %5625, i64 0, !dbg !93
  %5820 = insertelement <2 x float> %5819, float %5627, i64 1, !dbg !93
  %5821 = fadd <2 x float> %5820, splat (float 1.000000e+00), !dbg !93
  %5822 = fdiv <2 x float> splat (float 1.000000e+00), %5821, !dbg !94
  %5823 = fmul <2 x float> %5822, splat (float 2.000000e+00), !dbg !95
  %5824 = fadd <2 x float> %5823, splat (float -1.000000e+00), !dbg !96
  %5825 = fmul <2 x float> %5824, %5824, !dbg !151
  %5826 = fsub <2 x float> splat (float 1.000000e+00), %5825, !dbg !152
  %5827 = fmul <2 x float> %5322, %5677, !dbg !154
  %5828 = fadd <2 x float> %5827, splat (float 0x3FE9884540000000), !dbg !155
  %5829 = fmul <2 x float> %5828, %5826, !dbg !156
  %5830 = fmul <2 x float> %5661, %5829, !dbg !157
  %5831 = fadd <2 x float> %5824, splat (float 1.000000e+00), !dbg !158
  %5832 = fmul <2 x float> %5831, splat (float 5.000000e-01), !dbg !159
  %5833 = fadd <2 x float> %5832, %5830, !dbg !160
  %5834 = insertelement <2 x float> poison, float %5629, i64 0, !dbg !93
  %5835 = insertelement <2 x float> %5834, float %5631, i64 1, !dbg !93
  %5836 = fadd <2 x float> %5835, splat (float 1.000000e+00), !dbg !93
  %5837 = fdiv <2 x float> splat (float 1.000000e+00), %5836, !dbg !94
  %5838 = fmul <2 x float> %5837, splat (float 2.000000e+00), !dbg !95
  %5839 = fadd <2 x float> %5838, splat (float -1.000000e+00), !dbg !96
  %5840 = fmul <2 x float> %5839, %5839, !dbg !151
  %5841 = fsub <2 x float> splat (float 1.000000e+00), %5840, !dbg !152
  %5842 = fmul <2 x float> %5321, %5678, !dbg !154
  %5843 = fadd <2 x float> %5842, splat (float 0x3FE9884540000000), !dbg !155
  %5844 = fmul <2 x float> %5843, %5841, !dbg !156
  %5845 = fmul <2 x float> %5662, %5844, !dbg !157
  %5846 = fadd <2 x float> %5839, splat (float 1.000000e+00), !dbg !158
  %5847 = fmul <2 x float> %5846, splat (float 5.000000e-01), !dbg !159
  %5848 = fadd <2 x float> %5847, %5845, !dbg !160
  %5849 = insertelement <2 x float> poison, float %5633, i64 0, !dbg !93
  %5850 = insertelement <2 x float> %5849, float %5635, i64 1, !dbg !93
  %5851 = fadd <2 x float> %5850, splat (float 1.000000e+00), !dbg !93
  %5852 = fdiv <2 x float> splat (float 1.000000e+00), %5851, !dbg !94
  %5853 = fmul <2 x float> %5852, splat (float 2.000000e+00), !dbg !95
  %5854 = fadd <2 x float> %5853, splat (float -1.000000e+00), !dbg !96
  %5855 = fmul <2 x float> %5854, %5854, !dbg !151
  %5856 = fsub <2 x float> splat (float 1.000000e+00), %5855, !dbg !152
  %5857 = fmul <2 x float> %5320, %5679, !dbg !154
  %5858 = fadd <2 x float> %5857, splat (float 0x3FE9884540000000), !dbg !155
  %5859 = fmul <2 x float> %5858, %5856, !dbg !156
  %5860 = fmul <2 x float> %5663, %5859, !dbg !157
  %5861 = fadd <2 x float> %5854, splat (float 1.000000e+00), !dbg !158
  %5862 = fmul <2 x float> %5861, splat (float 5.000000e-01), !dbg !159
  %5863 = fadd <2 x float> %5862, %5860, !dbg !160
  %5864 = insertelement <2 x float> poison, float %5637, i64 0, !dbg !93
  %5865 = insertelement <2 x float> %5864, float %5639, i64 1, !dbg !93
  %5866 = fadd <2 x float> %5865, splat (float 1.000000e+00), !dbg !93
  %5867 = fdiv <2 x float> splat (float 1.000000e+00), %5866, !dbg !94
  %5868 = fmul <2 x float> %5867, splat (float 2.000000e+00), !dbg !95
  %5869 = fadd <2 x float> %5868, splat (float -1.000000e+00), !dbg !96
  %5870 = fmul <2 x float> %5869, %5869, !dbg !151
  %5871 = fsub <2 x float> splat (float 1.000000e+00), %5870, !dbg !152
  %5872 = fmul <2 x float> %5319, %5680, !dbg !154
  %5873 = fadd <2 x float> %5872, splat (float 0x3FE9884540000000), !dbg !155
  %5874 = fmul <2 x float> %5873, %5871, !dbg !156
  %5875 = fmul <2 x float> %5664, %5874, !dbg !157
  %5876 = fadd <2 x float> %5869, splat (float 1.000000e+00), !dbg !158
  %5877 = fmul <2 x float> %5876, splat (float 5.000000e-01), !dbg !159
  %5878 = fadd <2 x float> %5877, %5875, !dbg !160
  %5879 = insertelement <2 x float> poison, float %5641, i64 0, !dbg !93
  %5880 = insertelement <2 x float> %5879, float %5643, i64 1, !dbg !93
  %5881 = fadd <2 x float> %5880, splat (float 1.000000e+00), !dbg !93
  %5882 = fdiv <2 x float> splat (float 1.000000e+00), %5881, !dbg !94
  %5883 = fmul <2 x float> %5882, splat (float 2.000000e+00), !dbg !95
  %5884 = fadd <2 x float> %5883, splat (float -1.000000e+00), !dbg !96
  %5885 = fmul <2 x float> %5884, %5884, !dbg !151
  %5886 = fsub <2 x float> splat (float 1.000000e+00), %5885, !dbg !152
  %5887 = fmul <2 x float> %5318, %5681, !dbg !154
  %5888 = fadd <2 x float> %5887, splat (float 0x3FE9884540000000), !dbg !155
  %5889 = fmul <2 x float> %5888, %5886, !dbg !156
  %5890 = fmul <2 x float> %5665, %5889, !dbg !157
  %5891 = fadd <2 x float> %5884, splat (float 1.000000e+00), !dbg !158
  %5892 = fmul <2 x float> %5891, splat (float 5.000000e-01), !dbg !159
  %5893 = fadd <2 x float> %5892, %5890, !dbg !160
  %5894 = insertelement <2 x float> poison, float %5645, i64 0, !dbg !93
  %5895 = insertelement <2 x float> %5894, float %5647, i64 1, !dbg !93
  %5896 = fadd <2 x float> %5895, splat (float 1.000000e+00), !dbg !93
  %5897 = fdiv <2 x float> splat (float 1.000000e+00), %5896, !dbg !94
  %5898 = fmul <2 x float> %5897, splat (float 2.000000e+00), !dbg !95
  %5899 = fadd <2 x float> %5898, splat (float -1.000000e+00), !dbg !96
  %5900 = fmul <2 x float> %5899, %5899, !dbg !151
  %5901 = fsub <2 x float> splat (float 1.000000e+00), %5900, !dbg !152
  %5902 = fmul <2 x float> %5317, %5682, !dbg !154
  %5903 = fadd <2 x float> %5902, splat (float 0x3FE9884540000000), !dbg !155
  %5904 = fmul <2 x float> %5903, %5901, !dbg !156
  %5905 = fmul <2 x float> %5666, %5904, !dbg !157
  %5906 = fadd <2 x float> %5899, splat (float 1.000000e+00), !dbg !158
  %5907 = fmul <2 x float> %5906, splat (float 5.000000e-01), !dbg !159
  %5908 = fadd <2 x float> %5907, %5905, !dbg !160
  %5909 = insertelement <2 x float> poison, float %5649, i64 0, !dbg !93
  %5910 = insertelement <2 x float> %5909, float %5651, i64 1, !dbg !93
  %5911 = fadd <2 x float> %5910, splat (float 1.000000e+00), !dbg !93
  %5912 = fdiv <2 x float> splat (float 1.000000e+00), %5911, !dbg !94
  %5913 = fmul <2 x float> %5912, splat (float 2.000000e+00), !dbg !95
  %5914 = fadd <2 x float> %5913, splat (float -1.000000e+00), !dbg !96
  %5915 = fmul <2 x float> %5914, %5914, !dbg !151
  %5916 = fsub <2 x float> splat (float 1.000000e+00), %5915, !dbg !152
  %5917 = fmul <2 x float> %5316, %5683, !dbg !154
  %5918 = fadd <2 x float> %5917, splat (float 0x3FE9884540000000), !dbg !155
  %5919 = fmul <2 x float> %5918, %5916, !dbg !156
  %5920 = fmul <2 x float> %5667, %5919, !dbg !157
  %5921 = fadd <2 x float> %5914, splat (float 1.000000e+00), !dbg !158
  %5922 = fmul <2 x float> %5921, splat (float 5.000000e-01), !dbg !159
  %5923 = fadd <2 x float> %5922, %5920, !dbg !160
  %5924 = insertelement <2 x float> poison, float %20, i64 0, !dbg !138
  %5925 = shufflevector <2 x float> %5924, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !138
  %5926 = fmul <2 x float> %5925, %5698, !dbg !138
  %5927 = fmul <2 x float> %5925, %5713, !dbg !138
  %5928 = fmul <2 x float> %5925, %5728, !dbg !138
  %5929 = fmul <2 x float> %5925, %5743, !dbg !138
  %5930 = fmul <2 x float> %5925, %5758, !dbg !138
  %5931 = fmul <2 x float> %5925, %5773, !dbg !138
  %5932 = fmul <2 x float> %5925, %5788, !dbg !138
  %5933 = fmul <2 x float> %5925, %5803, !dbg !138
  %5934 = fmul <2 x float> %5925, %5818, !dbg !138
  %5935 = fmul <2 x float> %5925, %5833, !dbg !138
  %5936 = fmul <2 x float> %5925, %5848, !dbg !138
  %5937 = fmul <2 x float> %5925, %5863, !dbg !138
  %5938 = fmul <2 x float> %5925, %5878, !dbg !138
  %5939 = fmul <2 x float> %5925, %5893, !dbg !138
  %5940 = fmul <2 x float> %5925, %5908, !dbg !138
  %5941 = fmul <2 x float> %5925, %5923, !dbg !138
  br i1 %3769, label %5942, label %5967, !dbg !149

5942:                                             ; preds = %5315
  %5943 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5259, <8 x bfloat> %3760, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !149
  %5944 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5263, <8 x bfloat> %3761, <16 x float> %5943, i32 0, i32 0, i32 0), !dbg !149
  %5945 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5267, <8 x bfloat> %3762, <16 x float> %5944, i32 0, i32 0, i32 0), !dbg !149
  %5946 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5271, <8 x bfloat> %3763, <16 x float> %5945, i32 0, i32 0, i32 0), !dbg !149
  %5947 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5261, <8 x bfloat> %3760, <16 x float> zeroinitializer, i32 0, i32 0, i32 0), !dbg !149
  %5948 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5265, <8 x bfloat> %3761, <16 x float> %5947, i32 0, i32 0, i32 0), !dbg !149
  %5949 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5269, <8 x bfloat> %3762, <16 x float> %5948, i32 0, i32 0, i32 0), !dbg !149
  %5950 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %5273, <8 x bfloat> %3763, <16 x float> %5949, i32 0, i32 0, i32 0), !dbg !149
  %5951 = shufflevector <16 x float> %5950, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !13
  %5952 = shufflevector <16 x float> %5950, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !13
  %5953 = shufflevector <16 x float> %5950, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !13
  %5954 = shufflevector <16 x float> %5950, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !13
  %5955 = shufflevector <16 x float> %5950, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !13
  %5956 = shufflevector <16 x float> %5950, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !13
  %5957 = shufflevector <16 x float> %5950, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !13
  %5958 = shufflevector <16 x float> %5950, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !13
  %5959 = shufflevector <16 x float> %5946, <16 x float> poison, <2 x i32> <i32 14, i32 15>, !dbg !13
  %5960 = shufflevector <16 x float> %5946, <16 x float> poison, <2 x i32> <i32 12, i32 13>, !dbg !13
  %5961 = shufflevector <16 x float> %5946, <16 x float> poison, <2 x i32> <i32 10, i32 11>, !dbg !13
  %5962 = shufflevector <16 x float> %5946, <16 x float> poison, <2 x i32> <i32 8, i32 9>, !dbg !13
  %5963 = shufflevector <16 x float> %5946, <16 x float> poison, <2 x i32> <i32 6, i32 7>, !dbg !13
  %5964 = shufflevector <16 x float> %5946, <16 x float> poison, <2 x i32> <i32 4, i32 5>, !dbg !13
  %5965 = shufflevector <16 x float> %5946, <16 x float> poison, <2 x i32> <i32 2, i32 3>, !dbg !13
  %5966 = shufflevector <16 x float> %5946, <16 x float> poison, <2 x i32> <i32 0, i32 1>, !dbg !13
  br label %5967, !dbg !149

5967:                                             ; preds = %5942, %5315
  %5968 = phi <2 x float> [ %5951, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5969 = phi <2 x float> [ %5952, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5970 = phi <2 x float> [ %5953, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5971 = phi <2 x float> [ %5954, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5972 = phi <2 x float> [ %5955, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5973 = phi <2 x float> [ %5956, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5974 = phi <2 x float> [ %5957, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5975 = phi <2 x float> [ %5958, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5976 = phi <2 x float> [ %5959, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5977 = phi <2 x float> [ %5960, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5978 = phi <2 x float> [ %5961, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5979 = phi <2 x float> [ %5962, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5980 = phi <2 x float> [ %5963, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5981 = phi <2 x float> [ %5964, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5982 = phi <2 x float> [ %5965, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5983 = phi <2 x float> [ %5966, %5942 ], [ zeroinitializer, %5315 ], !dbg !13
  %5984 = fmul <2 x float> %5926, %5983, !dbg !161
  %5985 = fmul <2 x float> %5927, %5982, !dbg !161
  %5986 = fmul <2 x float> %5928, %5981, !dbg !161
  %5987 = fmul <2 x float> %5929, %5980, !dbg !161
  %5988 = fmul <2 x float> %5930, %5979, !dbg !161
  %5989 = fmul <2 x float> %5931, %5978, !dbg !161
  %5990 = fmul <2 x float> %5932, %5977, !dbg !161
  %5991 = fmul <2 x float> %5933, %5976, !dbg !161
  %5992 = fmul <2 x float> %5934, %5975, !dbg !161
  %5993 = fmul <2 x float> %5935, %5974, !dbg !161
  %5994 = fmul <2 x float> %5936, %5973, !dbg !161
  %5995 = fmul <2 x float> %5937, %5972, !dbg !161
  %5996 = fmul <2 x float> %5938, %5971, !dbg !161
  %5997 = fmul <2 x float> %5939, %5970, !dbg !161
  %5998 = fmul <2 x float> %5940, %5969, !dbg !161
  %5999 = fmul <2 x float> %5941, %5968, !dbg !161
  %6000 = fptrunc <2 x float> %5984 to <2 x bfloat>, !dbg !162
  %6001 = fptrunc <2 x float> %5985 to <2 x bfloat>, !dbg !162
  %6002 = fptrunc <2 x float> %5986 to <2 x bfloat>, !dbg !162
  %6003 = fptrunc <2 x float> %5987 to <2 x bfloat>, !dbg !162
  %6004 = fptrunc <2 x float> %5988 to <2 x bfloat>, !dbg !162
  %6005 = fptrunc <2 x float> %5989 to <2 x bfloat>, !dbg !162
  %6006 = fptrunc <2 x float> %5990 to <2 x bfloat>, !dbg !162
  %6007 = fptrunc <2 x float> %5991 to <2 x bfloat>, !dbg !162
  %6008 = fptrunc <2 x float> %5992 to <2 x bfloat>, !dbg !162
  %6009 = fptrunc <2 x float> %5993 to <2 x bfloat>, !dbg !162
  %6010 = fptrunc <2 x float> %5994 to <2 x bfloat>, !dbg !162
  %6011 = fptrunc <2 x float> %5995 to <2 x bfloat>, !dbg !162
  %6012 = fptrunc <2 x float> %5996 to <2 x bfloat>, !dbg !162
  %6013 = fptrunc <2 x float> %5997 to <2 x bfloat>, !dbg !162
  %6014 = fptrunc <2 x float> %5998 to <2 x bfloat>, !dbg !162
  %6015 = fptrunc <2 x float> %5999 to <2 x bfloat>, !dbg !162
  %6016 = bitcast <2 x bfloat> %6000 to i32, !dbg !162
  %6017 = bitcast <2 x bfloat> %6001 to i32, !dbg !162
  %6018 = bitcast <2 x bfloat> %6002 to i32, !dbg !162
  %6019 = bitcast <2 x bfloat> %6003 to i32, !dbg !162
  %6020 = bitcast <2 x bfloat> %6004 to i32, !dbg !162
  %6021 = bitcast <2 x bfloat> %6005 to i32, !dbg !162
  %6022 = bitcast <2 x bfloat> %6006 to i32, !dbg !162
  %6023 = bitcast <2 x bfloat> %6007 to i32, !dbg !162
  %6024 = bitcast <2 x bfloat> %6008 to i32, !dbg !162
  %6025 = bitcast <2 x bfloat> %6009 to i32, !dbg !162
  %6026 = bitcast <2 x bfloat> %6010 to i32, !dbg !162
  %6027 = bitcast <2 x bfloat> %6011 to i32, !dbg !162
  %6028 = bitcast <2 x bfloat> %6012 to i32, !dbg !162
  %6029 = bitcast <2 x bfloat> %6013 to i32, !dbg !162
  %6030 = bitcast <2 x bfloat> %6014 to i32, !dbg !162
  %6031 = bitcast <2 x bfloat> %6015 to i32, !dbg !162
  %6032 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6016, i32 %6018, i1 false, i1 false), !dbg !162
  %6033 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6017, i32 %6019, i1 false, i1 false), !dbg !162
  %6034 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6020, i32 %6022, i1 false, i1 false), !dbg !162
  %6035 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6021, i32 %6023, i1 false, i1 false), !dbg !162
  %6036 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6024, i32 %6026, i1 false, i1 false), !dbg !162
  %6037 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6025, i32 %6027, i1 false, i1 false), !dbg !162
  %6038 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6028, i32 %6030, i1 false, i1 false), !dbg !162
  %6039 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6029, i32 %6031, i1 false, i1 false), !dbg !162
  br i1 %3769, label %6040, label %._crit_edge256, !dbg !136

6040:                                             ; preds = %5967
  %6041 = extractvalue { i32, i32 } %6039, 1, !dbg !162
  %6042 = bitcast i32 %6041 to <2 x bfloat>, !dbg !162
  %6043 = shufflevector <2 x bfloat> %6042, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6044 = extractvalue { i32, i32 } %6038, 1, !dbg !162
  %6045 = bitcast i32 %6044 to <2 x bfloat>, !dbg !162
  %6046 = shufflevector <2 x bfloat> %6045, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6047 = extractvalue { i32, i32 } %6039, 0, !dbg !162
  %6048 = bitcast i32 %6047 to <2 x bfloat>, !dbg !162
  %6049 = extractvalue { i32, i32 } %6038, 0, !dbg !162
  %6050 = bitcast i32 %6049 to <2 x bfloat>, !dbg !162
  %6051 = extractvalue { i32, i32 } %6037, 1, !dbg !162
  %6052 = bitcast i32 %6051 to <2 x bfloat>, !dbg !162
  %6053 = shufflevector <2 x bfloat> %6052, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6054 = extractvalue { i32, i32 } %6036, 1, !dbg !162
  %6055 = bitcast i32 %6054 to <2 x bfloat>, !dbg !162
  %6056 = shufflevector <2 x bfloat> %6055, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6057 = extractvalue { i32, i32 } %6037, 0, !dbg !162
  %6058 = bitcast i32 %6057 to <2 x bfloat>, !dbg !162
  %6059 = extractvalue { i32, i32 } %6036, 0, !dbg !162
  %6060 = bitcast i32 %6059 to <2 x bfloat>, !dbg !162
  %6061 = extractvalue { i32, i32 } %6035, 1, !dbg !162
  %6062 = bitcast i32 %6061 to <2 x bfloat>, !dbg !162
  %6063 = shufflevector <2 x bfloat> %6062, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6064 = extractvalue { i32, i32 } %6034, 1, !dbg !162
  %6065 = bitcast i32 %6064 to <2 x bfloat>, !dbg !162
  %6066 = shufflevector <2 x bfloat> %6065, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6067 = extractvalue { i32, i32 } %6035, 0, !dbg !162
  %6068 = bitcast i32 %6067 to <2 x bfloat>, !dbg !162
  %6069 = extractvalue { i32, i32 } %6034, 0, !dbg !162
  %6070 = bitcast i32 %6069 to <2 x bfloat>, !dbg !162
  %6071 = extractvalue { i32, i32 } %6033, 1, !dbg !162
  %6072 = bitcast i32 %6071 to <2 x bfloat>, !dbg !162
  %6073 = shufflevector <2 x bfloat> %6072, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6074 = extractvalue { i32, i32 } %6032, 1, !dbg !162
  %6075 = bitcast i32 %6074 to <2 x bfloat>, !dbg !162
  %6076 = shufflevector <2 x bfloat> %6075, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6077 = extractvalue { i32, i32 } %6033, 0, !dbg !162
  %6078 = bitcast i32 %6077 to <2 x bfloat>, !dbg !162
  %6079 = extractvalue { i32, i32 } %6032, 0, !dbg !162
  %6080 = bitcast i32 %6079 to <2 x bfloat>, !dbg !162
  %6081 = shufflevector <2 x bfloat> %6080, <2 x bfloat> %6078, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %6082 = shufflevector <8 x bfloat> %6081, <8 x bfloat> %6076, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !136
  %6083 = shufflevector <8 x bfloat> %6082, <8 x bfloat> %6073, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !136
  %6084 = shufflevector <2 x bfloat> %6070, <2 x bfloat> %6068, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %6085 = shufflevector <8 x bfloat> %6084, <8 x bfloat> %6066, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !136
  %6086 = shufflevector <8 x bfloat> %6085, <8 x bfloat> %6063, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !136
  %6087 = shufflevector <2 x bfloat> %6060, <2 x bfloat> %6058, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %6088 = shufflevector <8 x bfloat> %6087, <8 x bfloat> %6056, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !136
  %6089 = shufflevector <8 x bfloat> %6088, <8 x bfloat> %6053, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !136
  %6090 = shufflevector <2 x bfloat> %6050, <2 x bfloat> %6048, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !136
  %6091 = shufflevector <8 x bfloat> %6090, <8 x bfloat> %6046, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !136
  %6092 = shufflevector <8 x bfloat> %6091, <8 x bfloat> %6043, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !136
  %6093 = insertelement <8 x bfloat> poison, bfloat %5068, i64 0, !dbg !136
  %6094 = insertelement <8 x bfloat> %6093, bfloat %5071, i64 1, !dbg !136
  %6095 = insertelement <8 x bfloat> %6094, bfloat %5092, i64 2, !dbg !136
  %6096 = insertelement <8 x bfloat> %6095, bfloat %5095, i64 3, !dbg !136
  %6097 = insertelement <8 x bfloat> %6096, bfloat %5116, i64 4, !dbg !136
  %6098 = insertelement <8 x bfloat> %6097, bfloat %5119, i64 5, !dbg !136
  %6099 = insertelement <8 x bfloat> %6098, bfloat %5140, i64 6, !dbg !136
  %6100 = insertelement <8 x bfloat> %6099, bfloat %5143, i64 7, !dbg !136
  %6101 = insertelement <8 x bfloat> poison, bfloat %5074, i64 0, !dbg !136
  %6102 = insertelement <8 x bfloat> %6101, bfloat %5077, i64 1, !dbg !136
  %6103 = insertelement <8 x bfloat> %6102, bfloat %5098, i64 2, !dbg !136
  %6104 = insertelement <8 x bfloat> %6103, bfloat %5101, i64 3, !dbg !136
  %6105 = insertelement <8 x bfloat> %6104, bfloat %5122, i64 4, !dbg !136
  %6106 = insertelement <8 x bfloat> %6105, bfloat %5125, i64 5, !dbg !136
  %6107 = insertelement <8 x bfloat> %6106, bfloat %5146, i64 6, !dbg !136
  %6108 = insertelement <8 x bfloat> %6107, bfloat %5149, i64 7, !dbg !136
  %6109 = insertelement <8 x bfloat> poison, bfloat %5080, i64 0, !dbg !136
  %6110 = insertelement <8 x bfloat> %6109, bfloat %5083, i64 1, !dbg !136
  %6111 = insertelement <8 x bfloat> %6110, bfloat %5104, i64 2, !dbg !136
  %6112 = insertelement <8 x bfloat> %6111, bfloat %5107, i64 3, !dbg !136
  %6113 = insertelement <8 x bfloat> %6112, bfloat %5128, i64 4, !dbg !136
  %6114 = insertelement <8 x bfloat> %6113, bfloat %5131, i64 5, !dbg !136
  %6115 = insertelement <8 x bfloat> %6114, bfloat %5152, i64 6, !dbg !136
  %6116 = insertelement <8 x bfloat> %6115, bfloat %5155, i64 7, !dbg !136
  %6117 = insertelement <8 x bfloat> poison, bfloat %5086, i64 0, !dbg !136
  %6118 = insertelement <8 x bfloat> %6117, bfloat %5089, i64 1, !dbg !136
  %6119 = insertelement <8 x bfloat> %6118, bfloat %5110, i64 2, !dbg !136
  %6120 = insertelement <8 x bfloat> %6119, bfloat %5113, i64 3, !dbg !136
  %6121 = insertelement <8 x bfloat> %6120, bfloat %5134, i64 4, !dbg !136
  %6122 = insertelement <8 x bfloat> %6121, bfloat %5137, i64 5, !dbg !136
  %6123 = insertelement <8 x bfloat> %6122, bfloat %5158, i64 6, !dbg !136
  %6124 = insertelement <8 x bfloat> %6123, bfloat %5161, i64 7, !dbg !136
  %6125 = insertelement <8 x bfloat> poison, bfloat %5164, i64 0, !dbg !136
  %6126 = insertelement <8 x bfloat> %6125, bfloat %5167, i64 1, !dbg !136
  %6127 = insertelement <8 x bfloat> %6126, bfloat %5188, i64 2, !dbg !136
  %6128 = insertelement <8 x bfloat> %6127, bfloat %5191, i64 3, !dbg !136
  %6129 = insertelement <8 x bfloat> %6128, bfloat %5212, i64 4, !dbg !136
  %6130 = insertelement <8 x bfloat> %6129, bfloat %5215, i64 5, !dbg !136
  %6131 = insertelement <8 x bfloat> %6130, bfloat %5236, i64 6, !dbg !136
  %6132 = insertelement <8 x bfloat> %6131, bfloat %5239, i64 7, !dbg !136
  %6133 = insertelement <8 x bfloat> poison, bfloat %5170, i64 0, !dbg !136
  %6134 = insertelement <8 x bfloat> %6133, bfloat %5173, i64 1, !dbg !136
  %6135 = insertelement <8 x bfloat> %6134, bfloat %5194, i64 2, !dbg !136
  %6136 = insertelement <8 x bfloat> %6135, bfloat %5197, i64 3, !dbg !136
  %6137 = insertelement <8 x bfloat> %6136, bfloat %5218, i64 4, !dbg !136
  %6138 = insertelement <8 x bfloat> %6137, bfloat %5221, i64 5, !dbg !136
  %6139 = insertelement <8 x bfloat> %6138, bfloat %5242, i64 6, !dbg !136
  %6140 = insertelement <8 x bfloat> %6139, bfloat %5245, i64 7, !dbg !136
  %6141 = insertelement <8 x bfloat> poison, bfloat %5176, i64 0, !dbg !136
  %6142 = insertelement <8 x bfloat> %6141, bfloat %5179, i64 1, !dbg !136
  %6143 = insertelement <8 x bfloat> %6142, bfloat %5200, i64 2, !dbg !136
  %6144 = insertelement <8 x bfloat> %6143, bfloat %5203, i64 3, !dbg !136
  %6145 = insertelement <8 x bfloat> %6144, bfloat %5224, i64 4, !dbg !136
  %6146 = insertelement <8 x bfloat> %6145, bfloat %5227, i64 5, !dbg !136
  %6147 = insertelement <8 x bfloat> %6146, bfloat %5248, i64 6, !dbg !136
  %6148 = insertelement <8 x bfloat> %6147, bfloat %5251, i64 7, !dbg !136
  %6149 = insertelement <8 x bfloat> poison, bfloat %5182, i64 0, !dbg !136
  %6150 = insertelement <8 x bfloat> %6149, bfloat %5185, i64 1, !dbg !136
  %6151 = insertelement <8 x bfloat> %6150, bfloat %5206, i64 2, !dbg !136
  %6152 = insertelement <8 x bfloat> %6151, bfloat %5209, i64 3, !dbg !136
  %6153 = insertelement <8 x bfloat> %6152, bfloat %5230, i64 4, !dbg !136
  %6154 = insertelement <8 x bfloat> %6153, bfloat %5233, i64 5, !dbg !136
  %6155 = insertelement <8 x bfloat> %6154, bfloat %5254, i64 6, !dbg !136
  %6156 = insertelement <8 x bfloat> %6155, bfloat %5257, i64 7, !dbg !136
  %6157 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %5014, i64 0, !dbg !136
  %6158 = insertelement <16 x float> %6157, float %5015, i64 1, !dbg !136
  %6159 = insertelement <16 x float> %6158, float %5016, i64 2, !dbg !136
  %6160 = insertelement <16 x float> %6159, float %5017, i64 3, !dbg !136
  %6161 = insertelement <16 x float> %6160, float %5018, i64 4, !dbg !136
  %6162 = insertelement <16 x float> %6161, float %5019, i64 5, !dbg !136
  %6163 = insertelement <16 x float> %6162, float %5020, i64 6, !dbg !136
  %6164 = insertelement <16 x float> %6163, float %5021, i64 7, !dbg !136
  %6165 = insertelement <16 x float> %6164, float %5022, i64 8, !dbg !136
  %6166 = insertelement <16 x float> %6165, float %5023, i64 9, !dbg !136
  %6167 = insertelement <16 x float> %6166, float %5024, i64 10, !dbg !136
  %6168 = insertelement <16 x float> %6167, float %5025, i64 11, !dbg !136
  %6169 = insertelement <16 x float> %6168, float %5026, i64 12, !dbg !136
  %6170 = insertelement <16 x float> %6169, float %5027, i64 13, !dbg !136
  %6171 = insertelement <16 x float> %6170, float %5028, i64 14, !dbg !136
  %6172 = insertelement <16 x float> %6171, float %5029, i64 15, !dbg !136
  %6173 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %6100, <8 x bfloat> %6083, <16 x float> %6172, i32 0, i32 0, i32 0), !dbg !136
  %6174 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %6108, <8 x bfloat> %6086, <16 x float> %6173, i32 0, i32 0, i32 0), !dbg !136
  %6175 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %6116, <8 x bfloat> %6089, <16 x float> %6174, i32 0, i32 0, i32 0), !dbg !136
  %6176 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %6124, <8 x bfloat> %6092, <16 x float> %6175, i32 0, i32 0, i32 0), !dbg !136
  %6177 = extractelement <16 x float> %6176, i64 0, !dbg !136
  %6178 = extractelement <16 x float> %6176, i64 1, !dbg !136
  %6179 = extractelement <16 x float> %6176, i64 2, !dbg !136
  %6180 = extractelement <16 x float> %6176, i64 3, !dbg !136
  %6181 = extractelement <16 x float> %6176, i64 4, !dbg !136
  %6182 = extractelement <16 x float> %6176, i64 5, !dbg !136
  %6183 = extractelement <16 x float> %6176, i64 6, !dbg !136
  %6184 = extractelement <16 x float> %6176, i64 7, !dbg !136
  %6185 = extractelement <16 x float> %6176, i64 8, !dbg !136
  %6186 = extractelement <16 x float> %6176, i64 9, !dbg !136
  %6187 = extractelement <16 x float> %6176, i64 10, !dbg !136
  %6188 = extractelement <16 x float> %6176, i64 11, !dbg !136
  %6189 = extractelement <16 x float> %6176, i64 12, !dbg !136
  %6190 = extractelement <16 x float> %6176, i64 13, !dbg !136
  %6191 = extractelement <16 x float> %6176, i64 14, !dbg !136
  %6192 = extractelement <16 x float> %6176, i64 15, !dbg !136
  %6193 = insertelement <16 x float> <float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float poison, float undef, float undef, float undef, float undef, float undef, float undef>, float %5030, i64 0, !dbg !136
  %6194 = insertelement <16 x float> %6193, float %5031, i64 1, !dbg !136
  %6195 = insertelement <16 x float> %6194, float %5032, i64 2, !dbg !136
  %6196 = insertelement <16 x float> %6195, float %5033, i64 3, !dbg !136
  %6197 = insertelement <16 x float> %6196, float %5034, i64 4, !dbg !136
  %6198 = insertelement <16 x float> %6197, float %5035, i64 5, !dbg !136
  %6199 = insertelement <16 x float> %6198, float %5036, i64 6, !dbg !136
  %6200 = insertelement <16 x float> %6199, float %5037, i64 7, !dbg !136
  %6201 = insertelement <16 x float> %6200, float %5038, i64 8, !dbg !136
  %6202 = insertelement <16 x float> %6201, float %5039, i64 9, !dbg !136
  %6203 = insertelement <16 x float> %6202, float %5040, i64 10, !dbg !136
  %6204 = insertelement <16 x float> %6203, float %5041, i64 11, !dbg !136
  %6205 = insertelement <16 x float> %6204, float %5042, i64 12, !dbg !136
  %6206 = insertelement <16 x float> %6205, float %5043, i64 13, !dbg !136
  %6207 = insertelement <16 x float> %6206, float %5044, i64 14, !dbg !136
  %6208 = insertelement <16 x float> %6207, float %5045, i64 15, !dbg !136
  %6209 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %6132, <8 x bfloat> %6083, <16 x float> %6208, i32 0, i32 0, i32 0), !dbg !136
  %6210 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %6140, <8 x bfloat> %6086, <16 x float> %6209, i32 0, i32 0, i32 0), !dbg !136
  %6211 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %6148, <8 x bfloat> %6089, <16 x float> %6210, i32 0, i32 0, i32 0), !dbg !136
  %6212 = tail call <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat> %6156, <8 x bfloat> %6092, <16 x float> %6211, i32 0, i32 0, i32 0), !dbg !136
  %6213 = extractelement <16 x float> %6212, i64 0, !dbg !136
  %6214 = extractelement <16 x float> %6212, i64 1, !dbg !136
  %6215 = extractelement <16 x float> %6212, i64 2, !dbg !136
  %6216 = extractelement <16 x float> %6212, i64 3, !dbg !136
  %6217 = extractelement <16 x float> %6212, i64 4, !dbg !136
  %6218 = extractelement <16 x float> %6212, i64 5, !dbg !136
  %6219 = extractelement <16 x float> %6212, i64 6, !dbg !136
  %6220 = extractelement <16 x float> %6212, i64 7, !dbg !136
  %6221 = extractelement <16 x float> %6212, i64 8, !dbg !136
  %6222 = extractelement <16 x float> %6212, i64 9, !dbg !136
  %6223 = extractelement <16 x float> %6212, i64 10, !dbg !136
  %6224 = extractelement <16 x float> %6212, i64 11, !dbg !136
  %6225 = extractelement <16 x float> %6212, i64 12, !dbg !136
  %6226 = extractelement <16 x float> %6212, i64 13, !dbg !136
  %6227 = extractelement <16 x float> %6212, i64 14, !dbg !136
  %6228 = extractelement <16 x float> %6212, i64 15, !dbg !136
  br label %._crit_edge256, !dbg !136

._crit_edge256:                                   ; preds = %5967, %6040
  %6229 = phi float [ %6228, %6040 ], [ %5045, %5967 ], !dbg !132
  %6230 = phi float [ %6227, %6040 ], [ %5044, %5967 ], !dbg !132
  %6231 = phi float [ %6226, %6040 ], [ %5043, %5967 ], !dbg !132
  %6232 = phi float [ %6225, %6040 ], [ %5042, %5967 ], !dbg !132
  %6233 = phi float [ %6224, %6040 ], [ %5041, %5967 ], !dbg !132
  %6234 = phi float [ %6223, %6040 ], [ %5040, %5967 ], !dbg !132
  %6235 = phi float [ %6222, %6040 ], [ %5039, %5967 ], !dbg !132
  %6236 = phi float [ %6221, %6040 ], [ %5038, %5967 ], !dbg !132
  %6237 = phi float [ %6220, %6040 ], [ %5037, %5967 ], !dbg !132
  %6238 = phi float [ %6219, %6040 ], [ %5036, %5967 ], !dbg !132
  %6239 = phi float [ %6218, %6040 ], [ %5035, %5967 ], !dbg !132
  %6240 = phi float [ %6217, %6040 ], [ %5034, %5967 ], !dbg !132
  %6241 = phi float [ %6216, %6040 ], [ %5033, %5967 ], !dbg !132
  %6242 = phi float [ %6215, %6040 ], [ %5032, %5967 ], !dbg !132
  %6243 = phi float [ %6214, %6040 ], [ %5031, %5967 ], !dbg !132
  %6244 = phi float [ %6213, %6040 ], [ %5030, %5967 ], !dbg !132
  %6245 = phi float [ %6192, %6040 ], [ %5029, %5967 ], !dbg !132
  %6246 = phi float [ %6191, %6040 ], [ %5028, %5967 ], !dbg !132
  %6247 = phi float [ %6190, %6040 ], [ %5027, %5967 ], !dbg !132
  %6248 = phi float [ %6189, %6040 ], [ %5026, %5967 ], !dbg !132
  %6249 = phi float [ %6188, %6040 ], [ %5025, %5967 ], !dbg !132
  %6250 = phi float [ %6187, %6040 ], [ %5024, %5967 ], !dbg !132
  %6251 = phi float [ %6186, %6040 ], [ %5023, %5967 ], !dbg !132
  %6252 = phi float [ %6185, %6040 ], [ %5022, %5967 ], !dbg !132
  %6253 = phi float [ %6184, %6040 ], [ %5021, %5967 ], !dbg !132
  %6254 = phi float [ %6183, %6040 ], [ %5020, %5967 ], !dbg !132
  %6255 = phi float [ %6182, %6040 ], [ %5019, %5967 ], !dbg !132
  %6256 = phi float [ %6181, %6040 ], [ %5018, %5967 ], !dbg !132
  %6257 = phi float [ %6180, %6040 ], [ %5017, %5967 ], !dbg !132
  %6258 = phi float [ %6179, %6040 ], [ %5016, %5967 ], !dbg !132
  %6259 = phi float [ %6178, %6040 ], [ %5015, %5967 ], !dbg !132
  %6260 = phi float [ %6177, %6040 ], [ %5014, %5967 ], !dbg !132
  %6261 = mul i32 %10, %3659, !dbg !163
  %6262 = getelementptr bfloat, ptr addrspace(1) %85, i64 %3685, !dbg !163
  %6263 = add i32 %6261, %3669, !dbg !164
  %6264 = add i32 %3670, %6261, !dbg !164
  %6265 = add i32 %3671, %6261, !dbg !164
  %6266 = add i32 %3672, %6261, !dbg !164
  %6267 = insertelement <2 x float> poison, float %6260, i64 0, !dbg !165
  %6268 = insertelement <2 x float> %6267, float %6259, i64 1, !dbg !165
  %6269 = fptrunc <2 x float> %6268 to <2 x bfloat>, !dbg !165
  %6270 = insertelement <2 x float> poison, float %6258, i64 0, !dbg !165
  %6271 = insertelement <2 x float> %6270, float %6257, i64 1, !dbg !165
  %6272 = fptrunc <2 x float> %6271 to <2 x bfloat>, !dbg !165
  %6273 = insertelement <2 x float> poison, float %6256, i64 0, !dbg !165
  %6274 = insertelement <2 x float> %6273, float %6255, i64 1, !dbg !165
  %6275 = fptrunc <2 x float> %6274 to <2 x bfloat>, !dbg !165
  %6276 = insertelement <2 x float> poison, float %6254, i64 0, !dbg !165
  %6277 = insertelement <2 x float> %6276, float %6253, i64 1, !dbg !165
  %6278 = fptrunc <2 x float> %6277 to <2 x bfloat>, !dbg !165
  %6279 = insertelement <2 x float> poison, float %6252, i64 0, !dbg !165
  %6280 = insertelement <2 x float> %6279, float %6251, i64 1, !dbg !165
  %6281 = fptrunc <2 x float> %6280 to <2 x bfloat>, !dbg !165
  %6282 = insertelement <2 x float> poison, float %6250, i64 0, !dbg !165
  %6283 = insertelement <2 x float> %6282, float %6249, i64 1, !dbg !165
  %6284 = fptrunc <2 x float> %6283 to <2 x bfloat>, !dbg !165
  %6285 = insertelement <2 x float> poison, float %6248, i64 0, !dbg !165
  %6286 = insertelement <2 x float> %6285, float %6247, i64 1, !dbg !165
  %6287 = fptrunc <2 x float> %6286 to <2 x bfloat>, !dbg !165
  %6288 = insertelement <2 x float> poison, float %6246, i64 0, !dbg !165
  %6289 = insertelement <2 x float> %6288, float %6245, i64 1, !dbg !165
  %6290 = fptrunc <2 x float> %6289 to <2 x bfloat>, !dbg !165
  %6291 = insertelement <2 x float> poison, float %6244, i64 0, !dbg !165
  %6292 = insertelement <2 x float> %6291, float %6243, i64 1, !dbg !165
  %6293 = fptrunc <2 x float> %6292 to <2 x bfloat>, !dbg !165
  %6294 = insertelement <2 x float> poison, float %6242, i64 0, !dbg !165
  %6295 = insertelement <2 x float> %6294, float %6241, i64 1, !dbg !165
  %6296 = fptrunc <2 x float> %6295 to <2 x bfloat>, !dbg !165
  %6297 = insertelement <2 x float> poison, float %6240, i64 0, !dbg !165
  %6298 = insertelement <2 x float> %6297, float %6239, i64 1, !dbg !165
  %6299 = fptrunc <2 x float> %6298 to <2 x bfloat>, !dbg !165
  %6300 = insertelement <2 x float> poison, float %6238, i64 0, !dbg !165
  %6301 = insertelement <2 x float> %6300, float %6237, i64 1, !dbg !165
  %6302 = fptrunc <2 x float> %6301 to <2 x bfloat>, !dbg !165
  %6303 = insertelement <2 x float> poison, float %6236, i64 0, !dbg !165
  %6304 = insertelement <2 x float> %6303, float %6235, i64 1, !dbg !165
  %6305 = fptrunc <2 x float> %6304 to <2 x bfloat>, !dbg !165
  %6306 = insertelement <2 x float> poison, float %6234, i64 0, !dbg !165
  %6307 = insertelement <2 x float> %6306, float %6233, i64 1, !dbg !165
  %6308 = fptrunc <2 x float> %6307 to <2 x bfloat>, !dbg !165
  %6309 = insertelement <2 x float> poison, float %6232, i64 0, !dbg !165
  %6310 = insertelement <2 x float> %6309, float %6231, i64 1, !dbg !165
  %6311 = fptrunc <2 x float> %6310 to <2 x bfloat>, !dbg !165
  %6312 = insertelement <2 x float> poison, float %6230, i64 0, !dbg !165
  %6313 = insertelement <2 x float> %6312, float %6229, i64 1, !dbg !165
  %6314 = fptrunc <2 x float> %6313 to <2 x bfloat>, !dbg !165
  %6315 = bitcast <2 x bfloat> %6269 to i32, !dbg !165
  %6316 = bitcast <2 x bfloat> %6272 to i32, !dbg !165
  %6317 = bitcast <2 x bfloat> %6275 to i32, !dbg !165
  %6318 = bitcast <2 x bfloat> %6278 to i32, !dbg !165
  %6319 = bitcast <2 x bfloat> %6281 to i32, !dbg !165
  %6320 = bitcast <2 x bfloat> %6284 to i32, !dbg !165
  %6321 = bitcast <2 x bfloat> %6287 to i32, !dbg !165
  %6322 = bitcast <2 x bfloat> %6290 to i32, !dbg !165
  %6323 = bitcast <2 x bfloat> %6293 to i32, !dbg !165
  %6324 = bitcast <2 x bfloat> %6296 to i32, !dbg !165
  %6325 = bitcast <2 x bfloat> %6299 to i32, !dbg !165
  %6326 = bitcast <2 x bfloat> %6302 to i32, !dbg !165
  %6327 = bitcast <2 x bfloat> %6305 to i32, !dbg !165
  %6328 = bitcast <2 x bfloat> %6308 to i32, !dbg !165
  %6329 = bitcast <2 x bfloat> %6311 to i32, !dbg !165
  %6330 = bitcast <2 x bfloat> %6314 to i32, !dbg !165
  %6331 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6315, i32 %6317, i1 false, i1 false), !dbg !165
  %6332 = extractvalue { i32, i32 } %6331, 0, !dbg !165
  %6333 = extractvalue { i32, i32 } %6331, 1, !dbg !165
  %6334 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6316, i32 %6318, i1 false, i1 false), !dbg !165
  %6335 = extractvalue { i32, i32 } %6334, 0, !dbg !165
  %6336 = extractvalue { i32, i32 } %6334, 1, !dbg !165
  %6337 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6319, i32 %6321, i1 false, i1 false), !dbg !165
  %6338 = extractvalue { i32, i32 } %6337, 0, !dbg !165
  %6339 = extractvalue { i32, i32 } %6337, 1, !dbg !165
  %6340 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6320, i32 %6322, i1 false, i1 false), !dbg !165
  %6341 = extractvalue { i32, i32 } %6340, 0, !dbg !165
  %6342 = extractvalue { i32, i32 } %6340, 1, !dbg !165
  %6343 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6323, i32 %6325, i1 false, i1 false), !dbg !165
  %6344 = extractvalue { i32, i32 } %6343, 0, !dbg !165
  %6345 = extractvalue { i32, i32 } %6343, 1, !dbg !165
  %6346 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6324, i32 %6326, i1 false, i1 false), !dbg !165
  %6347 = extractvalue { i32, i32 } %6346, 0, !dbg !165
  %6348 = extractvalue { i32, i32 } %6346, 1, !dbg !165
  %6349 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6327, i32 %6329, i1 false, i1 false), !dbg !165
  %6350 = extractvalue { i32, i32 } %6349, 0, !dbg !165
  %6351 = extractvalue { i32, i32 } %6349, 1, !dbg !165
  %6352 = tail call { i32, i32 } @llvm.amdgcn.permlane32.swap(i32 %6328, i32 %6330, i1 false, i1 false), !dbg !165
  %6353 = extractvalue { i32, i32 } %6352, 0, !dbg !165
  %6354 = extractvalue { i32, i32 } %6352, 1, !dbg !165
  %6355 = bitcast i32 %6332 to <2 x bfloat>, !dbg !165
  %6356 = bitcast i32 %6335 to <2 x bfloat>, !dbg !165
  %6357 = bitcast i32 %6333 to <2 x bfloat>, !dbg !165
  %6358 = shufflevector <2 x bfloat> %6357, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6359 = bitcast i32 %6336 to <2 x bfloat>, !dbg !165
  %6360 = shufflevector <2 x bfloat> %6359, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6361 = bitcast i32 %6338 to <2 x bfloat>, !dbg !165
  %6362 = bitcast i32 %6341 to <2 x bfloat>, !dbg !165
  %6363 = bitcast i32 %6339 to <2 x bfloat>, !dbg !165
  %6364 = shufflevector <2 x bfloat> %6363, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6365 = bitcast i32 %6342 to <2 x bfloat>, !dbg !165
  %6366 = shufflevector <2 x bfloat> %6365, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6367 = bitcast i32 %6344 to <2 x bfloat>, !dbg !165
  %6368 = bitcast i32 %6347 to <2 x bfloat>, !dbg !165
  %6369 = bitcast i32 %6345 to <2 x bfloat>, !dbg !165
  %6370 = shufflevector <2 x bfloat> %6369, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6371 = bitcast i32 %6348 to <2 x bfloat>, !dbg !165
  %6372 = shufflevector <2 x bfloat> %6371, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6373 = bitcast i32 %6350 to <2 x bfloat>, !dbg !165
  %6374 = bitcast i32 %6353 to <2 x bfloat>, !dbg !165
  %6375 = bitcast i32 %6351 to <2 x bfloat>, !dbg !165
  %6376 = shufflevector <2 x bfloat> %6375, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6377 = bitcast i32 %6354 to <2 x bfloat>, !dbg !165
  %6378 = shufflevector <2 x bfloat> %6377, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %6379 = tail call ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) %6262, i16 %3693, i32 2147483646, i32 159744), !dbg !165
  %6380 = shufflevector <2 x bfloat> %6355, <2 x bfloat> %6356, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !165
  %6381 = shufflevector <8 x bfloat> %6380, <8 x bfloat> %6358, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !165
  %6382 = shufflevector <8 x bfloat> %6381, <8 x bfloat> %6360, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !165
  %6383 = bitcast <8 x bfloat> %6382 to <4 x i32>, !dbg !165
  %6384 = shl i32 %6263, 1, !dbg !165
  %6385 = select i1 %3675, i32 %6384, i32 -2147483648, !dbg !165
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %6383, ptr addrspace(8) %6379, i32 %6385, i32 0, i32 0), !dbg !165
  %6386 = shufflevector <2 x bfloat> %6361, <2 x bfloat> %6362, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !165
  %6387 = shufflevector <8 x bfloat> %6386, <8 x bfloat> %6364, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !165
  %6388 = shufflevector <8 x bfloat> %6387, <8 x bfloat> %6366, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !165
  %6389 = bitcast <8 x bfloat> %6388 to <4 x i32>, !dbg !165
  %6390 = shl i32 %6264, 1, !dbg !165
  %6391 = select i1 %3675, i32 %6390, i32 -2147483648, !dbg !165
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %6389, ptr addrspace(8) %6379, i32 %6391, i32 0, i32 0), !dbg !165
  %6392 = shufflevector <2 x bfloat> %6367, <2 x bfloat> %6368, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !165
  %6393 = shufflevector <8 x bfloat> %6392, <8 x bfloat> %6370, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !165
  %6394 = shufflevector <8 x bfloat> %6393, <8 x bfloat> %6372, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !165
  %6395 = bitcast <8 x bfloat> %6394 to <4 x i32>, !dbg !165
  %6396 = shl i32 %6265, 1, !dbg !165
  %6397 = select i1 %3675, i32 %6396, i32 -2147483648, !dbg !165
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %6395, ptr addrspace(8) %6379, i32 %6397, i32 0, i32 0), !dbg !165
  %6398 = shufflevector <2 x bfloat> %6373, <2 x bfloat> %6374, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !165
  %6399 = shufflevector <8 x bfloat> %6398, <8 x bfloat> %6376, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !165
  %6400 = shufflevector <8 x bfloat> %6399, <8 x bfloat> %6378, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !165
  %6401 = bitcast <8 x bfloat> %6400 to <4 x i32>, !dbg !165
  %6402 = shl i32 %6266, 1, !dbg !165
  %6403 = select i1 %3675, i32 %6402, i32 -2147483648, !dbg !165
  tail call void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32> %6401, ptr addrspace(8) %6379, i32 %6403, i32 0, i32 0), !dbg !165
  br label %6404, !dbg !119

6404:                                             ; preds = %._crit_edge256, %3653
  ret void, !dbg !166
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.z() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef i32 @llvm.amdgcn.workgroup.id.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.amdgcn.workitem.id.x() #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare ptr addrspace(8) @llvm.amdgcn.make.buffer.rsrc.p8.p1(ptr addrspace(1) readnone, i16, i32, i32) #0

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read)
declare <4 x i32> @llvm.amdgcn.raw.ptr.buffer.load.v4i32(ptr addrspace(8) readonly captures(none), i32, i32, i32 immarg) #2

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn
declare void @llvm.amdgcn.s.barrier() #3

; Function Attrs: convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare <16 x float> @llvm.amdgcn.mfma.f32.32x32x16.bf16(<8 x bfloat>, <8 x bfloat>, <16 x float>, i32 immarg, i32 immarg, i32 immarg) #4

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(argmem: read)
declare <4 x bfloat> @llvm.amdgcn.ds.read.tr16.b64.v4bf16(ptr addrspace(3) captures(none)) #5

; Function Attrs: convergent mustprogress nocallback nofree nounwind willreturn memory(none)
declare { i32, i32 } @llvm.amdgcn.permlane32.swap(i32, i32, i1 immarg, i1 immarg) #6

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write)
declare void @llvm.amdgcn.raw.ptr.buffer.store.v4i32(<4 x i32>, ptr addrspace(8) writeonly captures(none), i32, i32, i32 immarg) #7

attributes #0 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #1 = { nofree norecurse nounwind "amdgpu-agpr-alloc"="0" "amdgpu-flat-work-group-size"="1,256" "amdgpu-no-completion-action" "amdgpu-no-default-queue" "amdgpu-no-dispatch-id" "amdgpu-no-dispatch-ptr" "amdgpu-no-flat-scratch-init" "amdgpu-no-heap-ptr" "amdgpu-no-hostcall-ptr" "amdgpu-no-implicitarg-ptr" "amdgpu-no-lds-kernel-id" "amdgpu-no-multigrid-sync-arg" "amdgpu-no-queue-ptr" "amdgpu-no-workgroup-id-x" "amdgpu-no-workgroup-id-y" "amdgpu-no-workitem-id-x" "amdgpu-no-workitem-id-y" "amdgpu-no-workitem-id-z" "amdgpu-waves-per-eu"="1" "denormal-fp-math-f32"="ieee" "uniform-work-group-size"="false" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: read) }
attributes #3 = { convergent mustprogress nocallback nofree nounwind willreturn }
attributes #4 = { convergent mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { convergent mustprogress nocallback nofree nounwind willreturn memory(argmem: read) }
attributes #6 = { convergent mustprogress nocallback nofree nounwind willreturn memory(none) }
attributes #7 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: write) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "gdpa.py", directory: "/workspace/projects/tritonbench/tritonbench/operators/gdpa")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 1, !"amdhsa_code_object_version", i32 500}
!4 = !DISubprogram(name: "llvm.exp2.f32", linkageName: "llvm.exp2.f32", scope: !1, file: !1, line: 1641, type: !5, scopeLine: 1641, spFlags: DISPFlagOptimized)
!5 = !DISubroutineType(cc: DW_CC_normal, types: !6)
!6 = !{}
!7 = distinct !DISubprogram(name: "_gdpa_bwd", linkageName: "_gdpa_bwd", scope: !1, file: !1, line: 1520, type: !5, scopeLine: 1520, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!8 = !DILocation(line: 1575, column: 30, scope: !7)
!9 = !DILocation(line: 1583, column: 30, scope: !7)
!10 = !DILocation(line: 1586, column: 23, scope: !7)
!11 = !DILocation(line: 1158, column: 34, scope: !12, inlinedAt: !13)
!12 = distinct !DILexicalBlockFile(scope: !7, file: !1, discriminator: 0)
!13 = !DILocation(line: 1641, column: 8, scope: !7)
!14 = !DILocation(line: 1158, column: 22, scope: !12, inlinedAt: !13)
!15 = !DILocation(line: 1159, column: 42, scope: !12, inlinedAt: !13)
!16 = !DILocation(line: 1159, column: 20, scope: !12, inlinedAt: !13)
!17 = !DILocation(line: 1161, column: 19, scope: !12, inlinedAt: !13)
!18 = !DILocation(line: 1173, column: 38, scope: !12, inlinedAt: !13)
!19 = !DILocation(line: 1173, column: 26, scope: !12, inlinedAt: !13)
!20 = !DILocation(line: 1174, column: 44, scope: !12, inlinedAt: !13)
!21 = !DILocation(line: 1174, column: 24, scope: !12, inlinedAt: !13)
!22 = !DILocation(line: 1176, column: 23, scope: !12, inlinedAt: !13)
!23 = !DILocation(line: 1182, column: 20, scope: !12, inlinedAt: !13)
!24 = !DILocation(line: 1186, column: 26, scope: !12, inlinedAt: !13)
!25 = !DILocation(line: 1287, column: 18, scope: !12, inlinedAt: !13)
!26 = !DILocation(line: 1287, column: 37, scope: !12, inlinedAt: !13)
!27 = !DILocation(line: 1287, column: 26, scope: !12, inlinedAt: !13)
!28 = !DILocation(line: 1287, column: 7, scope: !12, inlinedAt: !13)
!29 = !DILocation(line: 1584, column: 24, scope: !7)
!30 = !DILocation(line: 1288, column: 40, scope: !12, inlinedAt: !13)
!31 = !DILocation(line: 1288, column: 26, scope: !12, inlinedAt: !13)
!32 = !DILocation(line: 1290, column: 26, scope: !12, inlinedAt: !13)
!33 = !DILocation(line: 1291, column: 24, scope: !12, inlinedAt: !13)
!34 = !DILocation(line: 1291, column: 46, scope: !12, inlinedAt: !13)
!35 = !DILocation(line: 1291, column: 36, scope: !12, inlinedAt: !13)
!36 = !DILocation(line: 1292, column: 26, scope: !12, inlinedAt: !13)
!37 = !DILocation(line: 1292, column: 48, scope: !12, inlinedAt: !13)
!38 = !DILocation(line: 1292, column: 38, scope: !12, inlinedAt: !13)
!39 = !DILocation(line: 1293, column: 25, scope: !12, inlinedAt: !13)
!40 = !DILocation(line: 1293, column: 48, scope: !12, inlinedAt: !13)
!41 = !DILocation(line: 1293, column: 38, scope: !12, inlinedAt: !13)
!42 = !DILocation(line: 1296, column: 13, scope: !12, inlinedAt: !13)
!43 = !DILocation(line: 1297, column: 13, scope: !12, inlinedAt: !13)
!44 = !DILocation(line: 1298, column: 13, scope: !12, inlinedAt: !13)
!45 = !DILocation(line: 1299, column: 14, scope: !12, inlinedAt: !13)
!46 = !DILocation(line: 1300, column: 14, scope: !12, inlinedAt: !13)
!47 = !DILocation(line: 1301, column: 14, scope: !12, inlinedAt: !13)
!48 = !DILocation(line: 1302, column: 14, scope: !12, inlinedAt: !13)
!49 = !DILocation(line: 1305, column: 17, scope: !12, inlinedAt: !13)
!50 = !DILocation(line: 1305, column: 7, scope: !12, inlinedAt: !13)
!51 = !DILocation(line: 1306, column: 40, scope: !12, inlinedAt: !13)
!52 = !DILocation(line: 1306, column: 27, scope: !12, inlinedAt: !13)
!53 = !DILocation(line: 1307, column: 24, scope: !12, inlinedAt: !13)
!54 = !DILocation(line: 1307, column: 66, scope: !12, inlinedAt: !13)
!55 = !DILocation(line: 1330, column: 20, scope: !12, inlinedAt: !13)
!56 = !DILocation(line: 1330, column: 50, scope: !12, inlinedAt: !13)
!57 = !DILocation(line: 1330, column: 16, scope: !12, inlinedAt: !13)
!58 = !DILocation(line: 1334, column: 20, scope: !12, inlinedAt: !13)
!59 = !DILocation(line: 1334, column: 16, scope: !12, inlinedAt: !13)
!60 = !DILocation(line: 41, column: 22, scope: !61, inlinedAt: !13)
!61 = distinct !DILexicalBlockFile(scope: !7, file: !62, discriminator: 0)
!62 = !DIFile(filename: "standard.py", directory: "/workspace/projects/triton-openai/python/triton/language")
!63 = !DILocation(line: 778, column: 22, scope: !12, inlinedAt: !13)
!64 = !DILocation(line: 778, column: 52, scope: !12, inlinedAt: !13)
!65 = !DILocation(line: 779, column: 23, scope: !12, inlinedAt: !13)
!66 = !DILocation(line: 779, column: 54, scope: !12, inlinedAt: !13)
!67 = !DILocation(line: 787, column: 46, scope: !12, inlinedAt: !13)
!68 = !DILocation(line: 789, column: 66, scope: !12, inlinedAt: !13)
!69 = !DILocation(line: 802, column: 25, scope: !12, inlinedAt: !13)
!70 = !DILocation(line: 818, column: 25, scope: !12, inlinedAt: !13)
!71 = !DILocation(line: 872, column: 26, scope: !12, inlinedAt: !13)
!72 = !DILocation(line: 41, column: 28, scope: !61, inlinedAt: !13)
!73 = !DILocation(line: 894, column: 32, scope: !12, inlinedAt: !13)
!74 = !DILocation(line: 893, column: 32, scope: !12, inlinedAt: !13)
!75 = !DILocation(line: 860, column: 14, scope: !12, inlinedAt: !13)
!76 = !DILocation(line: 891, column: 18, scope: !12, inlinedAt: !13)
!77 = !DILocation(line: 893, column: 23, scope: !12, inlinedAt: !13)
!78 = !DILocation(line: 894, column: 23, scope: !12, inlinedAt: !13)
!79 = !DILocation(line: 788, column: 26, scope: !12, inlinedAt: !13)
!80 = !DILocation(line: 805, column: 24, scope: !12, inlinedAt: !13)
!81 = !DILocation(line: 820, column: 24, scope: !12, inlinedAt: !13)
!82 = !DILocation(line: 836, column: 55, scope: !12, inlinedAt: !13)
!83 = !DILocation(line: 836, column: 76, scope: !12, inlinedAt: !13)
!84 = !DILocation(line: 836, column: 81, scope: !12, inlinedAt: !13)
!85 = !DILocation(line: 836, column: 65, scope: !12, inlinedAt: !13)
!86 = !DILocation(line: 836, column: 61, scope: !12, inlinedAt: !13)
!87 = !DILocation(line: 67, column: 30, scope: !88, inlinedAt: !13)
!88 = distinct !DILexicalBlockFile(scope: !7, file: !89, discriminator: 0)
!89 = !DIFile(filename: "math.py", directory: "/workspace/projects/tritonbench/tritonbench/operators/gdpa")
!90 = !DILocation(line: 48, column: 30, scope: !61, inlinedAt: !13)
!91 = !DILocation(line: 48, column: 29, scope: !61, inlinedAt: !13)
!92 = !DILocation(line: 843, column: 26, scope: !12, inlinedAt: !13)
!93 = !DILocation(line: 48, column: 20, scope: !61, inlinedAt: !13)
!94 = !DILocation(line: 48, column: 16, scope: !61, inlinedAt: !13)
!95 = !DILocation(line: 67, column: 15, scope: !88, inlinedAt: !13)
!96 = !DILocation(line: 67, column: 35, scope: !88, inlinedAt: !13)
!97 = !DILocation(line: 837, column: 24, scope: !12, inlinedAt: !13)
!98 = !DILocation(line: 837, column: 34, scope: !12, inlinedAt: !13)
!99 = !DILocation(line: 837, column: 30, scope: !12, inlinedAt: !13)
!100 = !DILocation(line: 841, column: 15, scope: !12, inlinedAt: !13)
!101 = !DILocation(line: 842, column: 21, scope: !12, inlinedAt: !13)
!102 = !DILocation(line: 855, column: 34, scope: !12, inlinedAt: !13)
!103 = !DILocation(line: 855, column: 23, scope: !12, inlinedAt: !13)
!104 = !DILocation(line: 855, column: 19, scope: !12, inlinedAt: !13)
!105 = !DILocation(line: 856, column: 49, scope: !12, inlinedAt: !13)
!106 = !DILocation(line: 856, column: 54, scope: !12, inlinedAt: !13)
!107 = !DILocation(line: 856, column: 34, scope: !12, inlinedAt: !13)
!108 = !DILocation(line: 856, column: 19, scope: !12, inlinedAt: !13)
!109 = !DILocation(line: 857, column: 23, scope: !12, inlinedAt: !13)
!110 = !DILocation(line: 857, column: 16, scope: !12, inlinedAt: !13)
!111 = !DILocation(line: 870, column: 19, scope: !12, inlinedAt: !13)
!112 = !DILocation(line: 871, column: 21, scope: !12, inlinedAt: !13)
!113 = !DILocation(line: 1391, column: 23, scope: !12, inlinedAt: !13)
!114 = !DILocation(line: 1391, column: 53, scope: !12, inlinedAt: !13)
!115 = !DILocation(line: 1404, column: 34, scope: !12, inlinedAt: !13)
!116 = !DILocation(line: 1407, column: 23, scope: !12, inlinedAt: !13)
!117 = !DILocation(line: 1420, column: 34, scope: !12, inlinedAt: !13)
!118 = !DILocation(line: 1425, column: 21, scope: !12, inlinedAt: !13)
!119 = !DILocation(line: 1425, column: 11, scope: !12, inlinedAt: !13)
!120 = !DILocation(line: 1427, column: 44, scope: !12, inlinedAt: !13)
!121 = !DILocation(line: 1427, column: 31, scope: !12, inlinedAt: !13)
!122 = !DILocation(line: 1429, column: 28, scope: !12, inlinedAt: !13)
!123 = !DILocation(line: 1429, column: 70, scope: !12, inlinedAt: !13)
!124 = !DILocation(line: 1446, column: 24, scope: !12, inlinedAt: !13)
!125 = !DILocation(line: 1446, column: 54, scope: !12, inlinedAt: !13)
!126 = !DILocation(line: 1446, column: 20, scope: !12, inlinedAt: !13)
!127 = !DILocation(line: 1450, column: 25, scope: !12, inlinedAt: !13)
!128 = !DILocation(line: 1450, column: 56, scope: !12, inlinedAt: !13)
!129 = !DILocation(line: 1450, column: 20, scope: !12, inlinedAt: !13)
!130 = !DILocation(line: 944, column: 22, scope: !12, inlinedAt: !13)
!131 = !DILocation(line: 944, column: 52, scope: !12, inlinedAt: !13)
!132 = !DILocation(line: 951, column: 46, scope: !12, inlinedAt: !13)
!133 = !DILocation(line: 953, column: 66, scope: !12, inlinedAt: !13)
!134 = !DILocation(line: 972, column: 25, scope: !12, inlinedAt: !13)
!135 = !DILocation(line: 973, column: 25, scope: !12, inlinedAt: !13)
!136 = !DILocation(line: 1002, column: 25, scope: !12, inlinedAt: !13)
!137 = !DILocation(line: 1006, column: 32, scope: !12, inlinedAt: !13)
!138 = !DILocation(line: 985, column: 13, scope: !12, inlinedAt: !13)
!139 = !DILocation(line: 1004, column: 18, scope: !12, inlinedAt: !13)
!140 = !DILocation(line: 1006, column: 23, scope: !12, inlinedAt: !13)
!141 = !DILocation(line: 1007, column: 23, scope: !12, inlinedAt: !13)
!142 = !DILocation(line: 952, column: 26, scope: !12, inlinedAt: !13)
!143 = !DILocation(line: 975, column: 23, scope: !12, inlinedAt: !13)
!144 = !DILocation(line: 112, column: 47, scope: !88, inlinedAt: !13)
!145 = !DILocation(line: 112, column: 69, scope: !88, inlinedAt: !13)
!146 = !DILocation(line: 112, column: 73, scope: !88, inlinedAt: !13)
!147 = !DILocation(line: 112, column: 58, scope: !88, inlinedAt: !13)
!148 = !DILocation(line: 112, column: 52, scope: !88, inlinedAt: !13)
!149 = !DILocation(line: 997, column: 24, scope: !12, inlinedAt: !13)
!150 = !DILocation(line: 113, column: 17, scope: !88, inlinedAt: !13)
!151 = !DILocation(line: 114, column: 24, scope: !88, inlinedAt: !13)
!152 = !DILocation(line: 114, column: 13, scope: !88, inlinedAt: !13)
!153 = !DILocation(line: 114, column: 67, scope: !88, inlinedAt: !13)
!154 = !DILocation(line: 114, column: 71, scope: !88, inlinedAt: !13)
!155 = !DILocation(line: 114, column: 52, scope: !88, inlinedAt: !13)
!156 = !DILocation(line: 114, column: 37, scope: !88, inlinedAt: !13)
!157 = !DILocation(line: 114, column: 8, scope: !88, inlinedAt: !13)
!158 = !DILocation(line: 115, column: 19, scope: !88, inlinedAt: !13)
!159 = !DILocation(line: 115, column: 15, scope: !88, inlinedAt: !13)
!160 = !DILocation(line: 115, column: 8, scope: !88, inlinedAt: !13)
!161 = !DILocation(line: 998, column: 17, scope: !12, inlinedAt: !13)
!162 = !DILocation(line: 999, column: 19, scope: !12, inlinedAt: !13)
!163 = !DILocation(line: 1501, column: 27, scope: !12, inlinedAt: !13)
!164 = !DILocation(line: 1501, column: 57, scope: !12, inlinedAt: !13)
!165 = !DILocation(line: 1516, column: 38, scope: !12, inlinedAt: !13)
!166 = !DILocation(line: 1594, column: 4, scope: !7)
