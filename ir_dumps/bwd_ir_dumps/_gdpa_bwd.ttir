#loc = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1520:0)
#loc210 = loc("Q"(#loc))
#loc211 = loc("Q_offsets"(#loc))
#loc212 = loc("K"(#loc))
#loc213 = loc("K_offsets"(#loc))
#loc214 = loc("V"(#loc))
#loc215 = loc("DO"(#loc))
#loc216 = loc("Out_offsets"(#loc))
#loc217 = loc("DQ"(#loc))
#loc218 = loc("DK"(#loc))
#loc219 = loc("DV"(#loc))
#loc220 = loc("stride_qm"(#loc))
#loc221 = loc("stride_km"(#loc))
#loc222 = loc("stride_qh"(#loc))
#loc223 = loc("stride_kh"(#loc))
#loc224 = loc("stride_dom"(#loc))
#loc225 = loc("stride_doh"(#loc))
#loc226 = loc("Z"(#loc))
#loc227 = loc("H"(#loc))
#loc228 = loc("N_CTX"(#loc))
#loc229 = loc("N_CTX_KV"(#loc))
#loc230 = loc("qk_scale"(#loc))
module {
  tt.func public @_gdpa_bwd(%Q: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("Q"(#loc)), %Q_offsets: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("Q_offsets"(#loc)), %K: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("K"(#loc)), %K_offsets: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("K_offsets"(#loc)), %V: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("V"(#loc)), %DO: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("DO"(#loc)), %Out_offsets: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("Out_offsets"(#loc)), %DQ: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("DQ"(#loc)), %DK: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("DK"(#loc)), %DV: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("DV"(#loc)), %stride_qm: i32 {tt.divisibility = 16 : i32} loc("stride_qm"(#loc)), %stride_km: i32 {tt.divisibility = 16 : i32} loc("stride_km"(#loc)), %stride_qh: i32 {tt.divisibility = 16 : i32} loc("stride_qh"(#loc)), %stride_kh: i32 {tt.divisibility = 16 : i32} loc("stride_kh"(#loc)), %stride_dom: i32 {tt.divisibility = 16 : i32} loc("stride_dom"(#loc)), %stride_doh: i32 {tt.divisibility = 16 : i32} loc("stride_doh"(#loc)), %Z: i32 {tt.divisibility = 16 : i32} loc("Z"(#loc)), %H: i32 loc("H"(#loc)), %N_CTX: i32 {tt.divisibility = 16 : i32} loc("N_CTX"(#loc)), %N_CTX_KV: i32 {tt.divisibility = 16 : i32} loc("N_CTX_KV"(#loc)), %qk_scale: f32 loc("qk_scale"(#loc))) attributes {noinline = false} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc231)
    %c128_i32 = arith.constant 128 : i32 loc(#loc231)
    %cst = arith.constant dense<64> : tensor<1x64xi32> loc(#loc231)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128x64xf32> loc(#loc231)
    %c64_i32 = arith.constant 64 : i32 loc(#loc231)
    %c63_i32 = arith.constant 63 : i32 loc(#loc231)
    %cst_1 = arith.constant dense<2.000000e+00> : tensor<128x64xf32> loc(#loc231)
    %cst_2 = arith.constant dense<0.107032225> : tensor<128x64xf32> loc(#loc231)
    %cst_3 = arith.constant dense<5.000000e-01> : tensor<128x64xf32> loc(#loc231)
    %cst_4 = arith.constant dense<1.000000e+00> : tensor<128x64xf32> loc(#loc231)
    %cst_5 = arith.constant dense<4.471500e-02> : tensor<128x64xf32> loc(#loc231)
    %cst_6 = arith.constant dense<0.797884583> : tensor<128x64xf32> loc(#loc231)
    %cst_7 = arith.constant dense<64> : tensor<64x1xi32> loc(#loc231)
    %true = arith.constant true loc(#loc3)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = arith.cmpi sge, %stride_qm, %c0_i32 : i32 loc(#loc4)
    llvm.intr.assume %0 : i1 loc(#loc5)
    %1 = arith.cmpi sge, %stride_km, %c0_i32 : i32 loc(#loc6)
    llvm.intr.assume %1 : i1 loc(#loc7)
    %2 = arith.cmpi sge, %stride_qh, %c0_i32 : i32 loc(#loc8)
    llvm.intr.assume %2 : i1 loc(#loc9)
    %3 = arith.cmpi sge, %stride_kh, %c0_i32 : i32 loc(#loc10)
    llvm.intr.assume %3 : i1 loc(#loc11)
    llvm.intr.assume %true : i1 loc(#loc3)
    %4 = arith.cmpi sge, %stride_dom, %c0_i32 : i32 loc(#loc12)
    llvm.intr.assume %4 : i1 loc(#loc13)
    %5 = arith.cmpi sge, %stride_doh, %c0_i32 : i32 loc(#loc14)
    llvm.intr.assume %5 : i1 loc(#loc15)
    %off_z = tt.get_program_id z : i32 loc(#loc232)
    %off_seq_h = tt.get_program_id x : i32 loc(#loc233)
    %off_h = arith.remsi %off_seq_h, %H : i32 loc(#loc234)
    %pid = arith.divsi %off_seq_h, %H : i32 loc(#loc235)
    %begin_q = tt.addptr %Q_offsets, %off_z : !tt.ptr<i32>, i32 loc(#loc401)
    %begin_q_8 = tt.load %begin_q : !tt.ptr<i32> loc(#loc402)
    %end_q = tt.addptr %begin_q, %c1_i32 : !tt.ptr<i32>, i32 loc(#loc403)
    %end_q_9 = tt.load %end_q : !tt.ptr<i32> loc(#loc404)
    %qlen = arith.subi %end_q_9, %begin_q_8 : i32 loc(#loc405)
    %begin_k = tt.addptr %K_offsets, %off_z : !tt.ptr<i32>, i32 loc(#loc406)
    %begin_k_10 = tt.load %begin_k : !tt.ptr<i32> loc(#loc407)
    %end_k = tt.addptr %begin_k, %c1_i32 : !tt.ptr<i32>, i32 loc(#loc408)
    %end_k_11 = tt.load %end_k : !tt.ptr<i32> loc(#loc409)
    %klen = arith.subi %end_k_11, %begin_k_10 : i32 loc(#loc410)
    %start_n = arith.muli %pid, %c128_i32 : i32 loc(#loc411)
    %offs_k = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc412)
    %6 = arith.cmpi sle, %start_n, %klen : i32 loc(#loc248)
    %7 = arith.cmpi sle, %start_n, %qlen : i32 loc(#loc249)
    %8 = arith.ori %6, %7 : i1 loc(#loc250)
    %9:7 = scf.if %8 -> (!tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>) {
      %begin_o = tt.addptr %Out_offsets, %off_z : !tt.ptr<i32>, i32 loc(#loc413)
      %begin_o_12 = tt.load %begin_o : !tt.ptr<i32> loc(#loc414)
      %off_h2 = arith.extsi %off_h : i32 to i64 loc(#loc415)
      %qadj = arith.extsi %stride_qh : i32 to i64 loc(#loc416)
      %qadj_13 = arith.muli %off_h2, %qadj : i64 loc(#loc416)
      %qadj_14 = arith.muli %begin_q_8, %stride_qm : i32 loc(#loc417)
      %qadj_15 = arith.extsi %qadj_14 : i32 to i64 loc(#loc418)
      %qadj_16 = arith.addi %qadj_13, %qadj_15 : i64 loc(#loc418)
      %kadj = arith.muli %off_h, %stride_kh : i32 loc(#loc419)
      %kadj_17 = arith.muli %begin_k_10, %stride_km : i32 loc(#loc420)
      %kadj_18 = arith.addi %kadj, %kadj_17 : i32 loc(#loc421)
      %doadj = arith.extsi %stride_doh : i32 to i64 loc(#loc422)
      %doadj_19 = arith.muli %off_h2, %doadj : i64 loc(#loc422)
      %doadj_20 = arith.muli %begin_o_12, %stride_dom : i32 loc(#loc423)
      %doadj_21 = arith.extsi %doadj_20 : i32 to i64 loc(#loc424)
      %doadj_22 = arith.addi %doadj_19, %doadj_21 : i64 loc(#loc424)
      %Q_23 = tt.addptr %Q, %qadj_16 : !tt.ptr<bf16>, i64 loc(#loc524)
      %K_24 = tt.addptr %K, %kadj_18 : !tt.ptr<bf16>, i32 loc(#loc525)
      %V_25 = tt.addptr %V, %kadj_18 : !tt.ptr<bf16>, i32 loc(#loc526)
      %DO_26 = tt.addptr %DO, %doadj_22 : !tt.ptr<bf16>, i64 loc(#loc527)
      %DQ_27 = tt.addptr %DQ, %qadj_16 : !tt.ptr<bf16>, i64 loc(#loc528)
      %DK_28 = tt.addptr %DK, %kadj_18 : !tt.ptr<bf16>, i32 loc(#loc529)
      %DV_29 = tt.addptr %DV, %kadj_18 : !tt.ptr<bf16>, i32 loc(#loc530)
      scf.yield %Q_23, %K_24, %V_25, %DO_26, %DQ_27, %DK_28, %DV_29 : !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16> loc(#loc530)
    } else {
      scf.yield %Q, %K, %V, %DO, %DQ, %DK, %DV : !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16>, !tt.ptr<bf16> loc(#loc231)
    } loc(#loc251)
    %10 = arith.cmpi slt, %start_n, %klen : i32 loc(#loc271)
    scf.if %10 {
      %offs_n = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc432)
      %offs_n_12 = tt.splat %start_n : i32 -> tensor<128xi32> loc(#loc433)
      %offs_n_13 = arith.addi %offs_n_12, %offs_n : tensor<128xi32> loc(#loc433)
      %kmask = tt.expand_dims %offs_k {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc434)
      %kmask_14 = arith.cmpi slt, %kmask, %cst : tensor<1x64xi32> loc(#loc435)
      %kmask_15 = tt.expand_dims %offs_n_13 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc436)
      %kmask_16 = tt.splat %klen : i32 -> tensor<128x1xi32> loc(#loc437)
      %kmask_17 = arith.cmpi slt, %kmask_15, %kmask_16 : tensor<128x1xi32> loc(#loc437)
      %kmask_18 = tt.broadcast %kmask_14 : tensor<1x64xi1> -> tensor<128x64xi1> loc(#loc438)
      %kmask_19 = tt.broadcast %kmask_17 : tensor<128x1xi1> -> tensor<128x64xi1> loc(#loc438)
      %kmask_20 = arith.andi %kmask_18, %kmask_19 : tensor<128x64xi1> loc(#loc438)
      %k = tt.splat %stride_km : i32 -> tensor<128x1xi32> loc(#loc439)
      %k_21 = arith.muli %kmask_15, %k : tensor<128x1xi32> loc(#loc439)
      %k_22 = tt.splat %9#1 : !tt.ptr<bf16> -> tensor<128x1x!tt.ptr<bf16>> loc(#loc440)
      %k_23 = tt.addptr %k_22, %k_21 : tensor<128x1x!tt.ptr<bf16>>, tensor<128x1xi32> loc(#loc440)
      %k_24 = tt.broadcast %k_23 : tensor<128x1x!tt.ptr<bf16>> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc441)
      %k_25 = tt.broadcast %kmask : tensor<1x64xi32> -> tensor<128x64xi32> loc(#loc441)
      %k_26 = tt.addptr %k_24, %k_25 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc441)
      %k_27 = tt.load %k_26, %kmask_20 : tensor<128x64x!tt.ptr<bf16>> loc(#loc442)
      %v = tt.splat %9#2 : !tt.ptr<bf16> -> tensor<128x1x!tt.ptr<bf16>> loc(#loc443)
      %v_28 = tt.addptr %v, %k_21 : tensor<128x1x!tt.ptr<bf16>>, tensor<128x1xi32> loc(#loc443)
      %v_29 = tt.broadcast %v_28 : tensor<128x1x!tt.ptr<bf16>> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc444)
      %v_30 = tt.addptr %v_29, %k_25 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc444)
      %v_31 = tt.load %v_30, %kmask_20 : tensor<128x64x!tt.ptr<bf16>> loc(#loc445)
      %num_steps = arith.addi %qlen, %c63_i32 : i32 loc(#loc531)
      %num_steps_32 = arith.divsi %num_steps, %c64_i32 : i32 loc(#loc532)
      %qT_ptrs = tt.splat %stride_qm : i32 -> tensor<1x64xi32> loc(#loc447)
      %qT_ptrs_33 = arith.muli %kmask, %qT_ptrs : tensor<1x64xi32> loc(#loc447)
      %qT_ptrs_34 = tt.splat %9#0 : !tt.ptr<bf16> -> tensor<1x64x!tt.ptr<bf16>> loc(#loc448)
      %qT_ptrs_35 = tt.addptr %qT_ptrs_34, %qT_ptrs_33 : tensor<1x64x!tt.ptr<bf16>>, tensor<1x64xi32> loc(#loc448)
      %qT_ptrs_36 = tt.expand_dims %offs_k {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc449)
      %qT_ptrs_37 = tt.broadcast %qT_ptrs_35 : tensor<1x64x!tt.ptr<bf16>> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc450)
      %qT_ptrs_38 = tt.broadcast %qT_ptrs_36 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc450)
      %qT_ptrs_39 = tt.addptr %qT_ptrs_37, %qT_ptrs_38 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc450)
      %do_ptrs = tt.splat %stride_dom : i32 -> tensor<64x1xi32> loc(#loc451)
      %do_ptrs_40 = arith.muli %qT_ptrs_36, %do_ptrs : tensor<64x1xi32> loc(#loc451)
      %do_ptrs_41 = tt.splat %9#3 : !tt.ptr<bf16> -> tensor<64x1x!tt.ptr<bf16>> loc(#loc452)
      %do_ptrs_42 = tt.addptr %do_ptrs_41, %do_ptrs_40 : tensor<64x1x!tt.ptr<bf16>>, tensor<64x1xi32> loc(#loc452)
      %do_ptrs_43 = tt.broadcast %do_ptrs_42 : tensor<64x1x!tt.ptr<bf16>> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc453)
      %do_ptrs_44 = tt.broadcast %kmask : tensor<1x64xi32> -> tensor<64x64xi32> loc(#loc453)
      %do_ptrs_45 = tt.addptr %do_ptrs_43, %do_ptrs_44 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc453)
      %qmask = arith.cmpi slt, %qT_ptrs_36, %cst_7 : tensor<64x1xi32> loc(#loc454)
      %qmask_46 = tt.splat %qlen : i32 -> tensor<1x64xi32> loc(#loc455)
      %qmask_47 = tt.broadcast %qmask : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc456)
      %omask = tt.splat %qlen : i32 -> tensor<64x1xi32> loc(#loc457)
      %omask_48 = tt.broadcast %kmask_14 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc458)
      %ppT = tt.splat %qk_scale : f32 -> tensor<128x64xf32> loc(#loc459)
      %qT_ptrs_49 = arith.muli %stride_qm, %c64_i32 : i32 loc(#loc460)
      %qT_ptrs_50 = tt.splat %qT_ptrs_49 : i32 -> tensor<64x64xi32> loc(#loc461)
      %do_ptrs_51 = arith.muli %stride_dom, %c64_i32 : i32 loc(#loc462)
      %do_ptrs_52 = tt.splat %do_ptrs_51 : i32 -> tensor<64x64xi32> loc(#loc463)
      %curr_m:5 = scf.for %curr_m_59 = %c0_i32 to %num_steps_32 step %c1_i32 iter_args(%dk = %cst_0, %dv = %cst_0, %qT_ptrs_60 = %qT_ptrs_39, %do_ptrs_61 = %do_ptrs_45, %start_m = %c0_i32) -> (tensor<128x64xf32>, tensor<128x64xf32>, tensor<64x64x!tt.ptr<bf16>>, tensor<64x64x!tt.ptr<bf16>>, i32)  : i32 {
        %offs_m = tt.splat %start_m : i32 -> tensor<64xi32> loc(#loc465)
        %offs_m_62 = arith.addi %offs_m, %offs_k : tensor<64xi32> loc(#loc465)
        %qmask_63 = tt.expand_dims %offs_m_62 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc466)
        %qmask_64 = arith.cmpi slt, %qmask_63, %qmask_46 : tensor<1x64xi32> loc(#loc455)
        %qmask_65 = tt.broadcast %qmask_64 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc456)
        %qmask_66 = arith.andi %qmask_47, %qmask_65 : tensor<64x64xi1> loc(#loc456)
        %qT = tt.load %qT_ptrs_60, %qmask_66 : tensor<64x64x!tt.ptr<bf16>> loc(#loc467)
        %qkT = tt.dot %k_27, %qT, %cst_0 : tensor<128x64xbf16> * tensor<64x64xbf16> -> tensor<128x64xf32> loc(#loc468)
        %omask_67 = tt.expand_dims %offs_m_62 {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc469)
        %omask_68 = arith.cmpi slt, %omask_67, %omask : tensor<64x1xi32> loc(#loc457)
        %omask_69 = tt.broadcast %omask_68 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc458)
        %omask_70 = arith.andi %omask_69, %omask_48 : tensor<64x64xi1> loc(#loc458)
        %do = tt.load %do_ptrs_61, %omask_70 : tensor<64x64x!tt.ptr<bf16>> loc(#loc470)
        %dpT = tt.trans %do {order = array<i32: 1, 0>} : tensor<64x64xbf16> -> tensor<64x64xbf16> loc(#loc471)
        %dpT_71 = tt.dot %v_31, %dpT, %cst_0 : tensor<128x64xbf16> * tensor<64x64xbf16> -> tensor<128x64xf32> loc(#loc472)
        %tanh_out = arith.mulf %qkT, %cst_6 : tensor<128x64xf32> loc(#loc473)
        %tanh_out_72 = arith.mulf %qkT, %cst_5 : tensor<128x64xf32> loc(#loc474)
        %tanh_out_73 = arith.mulf %tanh_out_72, %qkT : tensor<128x64xf32> loc(#loc475)
        %tanh_out_74 = arith.addf %tanh_out_73, %cst_4 : tensor<128x64xf32> loc(#loc476)
        %tanh_out_75 = arith.mulf %tanh_out, %tanh_out_74 : tensor<128x64xf32> loc(#loc477)
        %tanh_out_76 = arith.mulf %tanh_out_75, %cst_1 : tensor<128x64xf32> loc(#loc565)
        %tanh_out_77 = arith.subf %cst_0, %tanh_out_76 : tensor<128x64xf32> loc(#loc588)
        %tanh_out_78 = math.exp %tanh_out_77 : tensor<128x64xf32> loc(#loc589)
        %tanh_out_79 = arith.addf %tanh_out_78, %cst_4 : tensor<128x64xf32> loc(#loc590)
        %tanh_out_80 = arith.divf %cst_4, %tanh_out_79 : tensor<128x64xf32> loc(#loc591)
        %tanh_out_81 = arith.mulf %tanh_out_80, %cst_1 : tensor<128x64xf32> loc(#loc567)
        %tanh_out_82 = arith.subf %tanh_out_81, %cst_4 : tensor<128x64xf32> loc(#loc568)
        %ppT_83 = arith.mulf %qkT, %cst_3 : tensor<128x64xf32> loc(#loc479)
        %ppT_84 = arith.addf %tanh_out_82, %cst_4 : tensor<128x64xf32> loc(#loc480)
        %ppT_85 = arith.mulf %ppT_83, %ppT_84 : tensor<128x64xf32> loc(#loc481)
        %ppT_86 = arith.mulf %ppT_85, %ppT : tensor<128x64xf32> loc(#loc459)
        %ppT_87 = arith.truncf %ppT_86 : tensor<128x64xf32> to tensor<128x64xbf16> loc(#loc482)
        %dv_88 = tt.dot %ppT_87, %do, %dv : tensor<128x64xbf16> * tensor<64x64xbf16> -> tensor<128x64xf32> loc(#loc483)
        %pT = arith.mulf %tanh_out_82, %tanh_out_82 : tensor<128x64xf32> loc(#loc484)
        %pT_89 = arith.subf %cst_4, %pT : tensor<128x64xf32> loc(#loc485)
        %pT_90 = arith.mulf %ppT_83, %pT_89 : tensor<128x64xf32> loc(#loc486)
        %pT_91 = arith.mulf %qkT, %cst_2 : tensor<128x64xf32> loc(#loc487)
        %pT_92 = arith.mulf %pT_91, %qkT : tensor<128x64xf32> loc(#loc488)
        %pT_93 = arith.addf %pT_92, %cst_6 : tensor<128x64xf32> loc(#loc489)
        %pT_94 = arith.mulf %pT_90, %pT_93 : tensor<128x64xf32> loc(#loc490)
        %pT_95 = arith.mulf %ppT_84, %cst_3 : tensor<128x64xf32> loc(#loc491)
        %pT_96 = arith.addf %pT_94, %pT_95 : tensor<128x64xf32> loc(#loc492)
        %pT_97 = arith.mulf %pT_96, %ppT : tensor<128x64xf32> loc(#loc493)
        %dsT = arith.mulf %pT_97, %dpT_71 : tensor<128x64xf32> loc(#loc494)
        %dsT_98 = arith.truncf %dsT : tensor<128x64xf32> to tensor<128x64xbf16> loc(#loc495)
        %dk_99 = tt.trans %qT {order = array<i32: 1, 0>} : tensor<64x64xbf16> -> tensor<64x64xbf16> loc(#loc496)
        %dk_100 = tt.dot %dsT_98, %dk_99, %dk : tensor<128x64xbf16> * tensor<64x64xbf16> -> tensor<128x64xf32> loc(#loc497)
        %curr_m_101 = arith.addi %start_m, %c64_i32 : i32 loc(#loc498)
        %qT_ptrs_102 = tt.addptr %qT_ptrs_60, %qT_ptrs_50 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc461)
        %do_ptrs_103 = tt.addptr %do_ptrs_61, %do_ptrs_52 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc463)
        scf.yield %dk_100, %dv_88, %qT_ptrs_102, %do_ptrs_103, %curr_m_101 : tensor<128x64xf32>, tensor<128x64xf32>, tensor<64x64x!tt.ptr<bf16>>, tensor<64x64x!tt.ptr<bf16>>, i32 loc(#loc499)
      } {tt.loop_unroll_factor = 1 : i32} loc(#loc600)
      %dv_ptrs = tt.splat %9#6 : !tt.ptr<bf16> -> tensor<128x1x!tt.ptr<bf16>> loc(#loc500)
      %dv_ptrs_53 = tt.addptr %dv_ptrs, %k_21 : tensor<128x1x!tt.ptr<bf16>>, tensor<128x1xi32> loc(#loc500)
      %dv_ptrs_54 = tt.broadcast %dv_ptrs_53 : tensor<128x1x!tt.ptr<bf16>> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc501)
      %dv_ptrs_55 = tt.addptr %dv_ptrs_54, %k_25 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc501)
      %12 = arith.truncf %curr_m#1 : tensor<128x64xf32> to tensor<128x64xbf16> loc(#loc343)
      tt.store %dv_ptrs_55, %12, %kmask_20 : tensor<128x64x!tt.ptr<bf16>> loc(#loc343)
      %dk_ptrs = tt.splat %9#5 : !tt.ptr<bf16> -> tensor<128x1x!tt.ptr<bf16>> loc(#loc502)
      %dk_ptrs_56 = tt.addptr %dk_ptrs, %k_21 : tensor<128x1x!tt.ptr<bf16>>, tensor<128x1xi32> loc(#loc502)
      %dk_ptrs_57 = tt.broadcast %dk_ptrs_56 : tensor<128x1x!tt.ptr<bf16>> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc503)
      %dk_ptrs_58 = tt.addptr %dk_ptrs_57, %k_25 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc503)
      %13 = arith.truncf %curr_m#0 : tensor<128x64xf32> to tensor<128x64xbf16> loc(#loc346)
      tt.store %dk_ptrs_58, %13, %kmask_20 : tensor<128x64x!tt.ptr<bf16>> loc(#loc346)
    } loc(#loc272)
    %11 = arith.cmpi slt, %start_n, %qlen : i32 loc(#loc347)
    scf.if %11 {
      %offs_m = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc504)
      %offs_m_12 = tt.splat %start_n : i32 -> tensor<128xi32> loc(#loc505)
      %offs_m_13 = arith.addi %offs_m_12, %offs_m : tensor<128xi32> loc(#loc505)
      %qmask = tt.expand_dims %offs_k {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc506)
      %qmask_14 = arith.cmpi slt, %qmask, %cst : tensor<1x64xi32> loc(#loc507)
      %qmask_15 = tt.expand_dims %offs_m_13 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc508)
      %qmask_16 = tt.splat %qlen : i32 -> tensor<128x1xi32> loc(#loc509)
      %qmask_17 = arith.cmpi slt, %qmask_15, %qmask_16 : tensor<128x1xi32> loc(#loc509)
      %qmask_18 = tt.broadcast %qmask_14 : tensor<1x64xi1> -> tensor<128x64xi1> loc(#loc510)
      %qmask_19 = tt.broadcast %qmask_17 : tensor<128x1xi1> -> tensor<128x64xi1> loc(#loc510)
      %qmask_20 = arith.andi %qmask_18, %qmask_19 : tensor<128x64xi1> loc(#loc510)
      %q = tt.splat %stride_qm : i32 -> tensor<128x1xi32> loc(#loc511)
      %q_21 = arith.muli %qmask_15, %q : tensor<128x1xi32> loc(#loc511)
      %q_22 = tt.splat %9#0 : !tt.ptr<bf16> -> tensor<128x1x!tt.ptr<bf16>> loc(#loc512)
      %q_23 = tt.addptr %q_22, %q_21 : tensor<128x1x!tt.ptr<bf16>>, tensor<128x1xi32> loc(#loc512)
      %q_24 = tt.broadcast %q_23 : tensor<128x1x!tt.ptr<bf16>> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc513)
      %q_25 = tt.broadcast %qmask : tensor<1x64xi32> -> tensor<128x64xi32> loc(#loc513)
      %q_26 = tt.addptr %q_24, %q_25 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc513)
      %q_27 = tt.load %q_26, %qmask_20 : tensor<128x64x!tt.ptr<bf16>> loc(#loc514)
      %do = tt.splat %stride_dom : i32 -> tensor<128x1xi32> loc(#loc515)
      %do_28 = arith.muli %qmask_15, %do : tensor<128x1xi32> loc(#loc515)
      %do_29 = tt.splat %9#3 : !tt.ptr<bf16> -> tensor<128x1x!tt.ptr<bf16>> loc(#loc516)
      %do_30 = tt.addptr %do_29, %do_28 : tensor<128x1x!tt.ptr<bf16>>, tensor<128x1xi32> loc(#loc516)
      %do_31 = tt.broadcast %do_30 : tensor<128x1x!tt.ptr<bf16>> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc517)
      %do_32 = tt.addptr %do_31, %q_25 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc517)
      %do_33 = tt.load %do_32, %qmask_20 : tensor<128x64x!tt.ptr<bf16>> loc(#loc518)
      %num_steps = arith.addi %klen, %c63_i32 : i32 loc(#loc535)
      %num_steps_34 = arith.divsi %num_steps, %c64_i32 : i32 loc(#loc536)
      %kT_ptrs = tt.splat %stride_km : i32 -> tensor<1x64xi32> loc(#loc537)
      %kT_ptrs_35 = arith.muli %qmask, %kT_ptrs : tensor<1x64xi32> loc(#loc537)
      %kT_ptrs_36 = tt.splat %9#1 : !tt.ptr<bf16> -> tensor<1x64x!tt.ptr<bf16>> loc(#loc538)
      %kT_ptrs_37 = tt.addptr %kT_ptrs_36, %kT_ptrs_35 : tensor<1x64x!tt.ptr<bf16>>, tensor<1x64xi32> loc(#loc538)
      %kT_ptrs_38 = tt.expand_dims %offs_k {axis = 1 : i32} : tensor<64xi32> -> tensor<64x1xi32> loc(#loc539)
      %kT_ptrs_39 = tt.broadcast %kT_ptrs_37 : tensor<1x64x!tt.ptr<bf16>> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc540)
      %kT_ptrs_40 = tt.broadcast %kT_ptrs_38 : tensor<64x1xi32> -> tensor<64x64xi32> loc(#loc540)
      %kT_ptrs_41 = tt.addptr %kT_ptrs_39, %kT_ptrs_40 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc540)
      %vT_ptrs = tt.splat %9#2 : !tt.ptr<bf16> -> tensor<1x64x!tt.ptr<bf16>> loc(#loc541)
      %vT_ptrs_42 = tt.addptr %vT_ptrs, %kT_ptrs_35 : tensor<1x64x!tt.ptr<bf16>>, tensor<1x64xi32> loc(#loc541)
      %vT_ptrs_43 = tt.broadcast %vT_ptrs_42 : tensor<1x64x!tt.ptr<bf16>> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc542)
      %vT_ptrs_44 = tt.addptr %vT_ptrs_43, %kT_ptrs_40 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc542)
      %kmask = arith.cmpi slt, %kT_ptrs_38, %cst_7 : tensor<64x1xi32> loc(#loc543)
      %kmask_45 = tt.splat %klen : i32 -> tensor<1x64xi32> loc(#loc544)
      %kmask_46 = tt.broadcast %kmask : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc545)
      %p = tt.splat %qk_scale : f32 -> tensor<128x64xf32> loc(#loc546)
      %kT_ptrs_47 = arith.muli %stride_km, %c64_i32 : i32 loc(#loc547)
      %kT_ptrs_48 = tt.splat %kT_ptrs_47 : i32 -> tensor<64x64xi32> loc(#loc548)
      %curr_n:4 = scf.for %curr_n_52 = %c0_i32 to %num_steps_34 step %c1_i32 iter_args(%dq = %cst_0, %kT_ptrs_53 = %kT_ptrs_41, %vT_ptrs_54 = %vT_ptrs_44, %start_n_55 = %c0_i32) -> (tensor<128x64xf32>, tensor<64x64x!tt.ptr<bf16>>, tensor<64x64x!tt.ptr<bf16>>, i32)  : i32 {
        %offs_n = tt.splat %start_n_55 : i32 -> tensor<64xi32> loc(#loc550)
        %offs_n_56 = arith.addi %offs_n, %offs_k : tensor<64xi32> loc(#loc550)
        %kmask_57 = tt.expand_dims %offs_n_56 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc551)
        %kmask_58 = arith.cmpi slt, %kmask_57, %kmask_45 : tensor<1x64xi32> loc(#loc544)
        %kmask_59 = tt.broadcast %kmask_58 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc545)
        %kmask_60 = arith.andi %kmask_46, %kmask_59 : tensor<64x64xi1> loc(#loc545)
        %kT = tt.load %kT_ptrs_53, %kmask_60 : tensor<64x64x!tt.ptr<bf16>> loc(#loc552)
        %vT = tt.load %vT_ptrs_54, %kmask_60 : tensor<64x64x!tt.ptr<bf16>> loc(#loc553)
        %qk = tt.dot %q_27, %kT, %cst_0 : tensor<128x64xbf16> * tensor<64x64xbf16> -> tensor<128x64xf32> loc(#loc554)
        %tanh_out = arith.mulf %qk, %cst_6 : tensor<128x64xf32> loc(#loc570)
        %tanh_out_61 = arith.mulf %qk, %cst_5 : tensor<128x64xf32> loc(#loc571)
        %tanh_out_62 = arith.mulf %tanh_out_61, %qk : tensor<128x64xf32> loc(#loc572)
        %tanh_out_63 = arith.addf %tanh_out_62, %cst_4 : tensor<128x64xf32> loc(#loc573)
        %tanh_out_64 = arith.mulf %tanh_out, %tanh_out_63 : tensor<128x64xf32> loc(#loc574)
        %tanh_out_65 = arith.mulf %tanh_out_64, %cst_1 : tensor<128x64xf32> loc(#loc596)
        %tanh_out_66 = arith.subf %cst_0, %tanh_out_65 : tensor<128x64xf32> loc(#loc601)
        %tanh_out_67 = math.exp %tanh_out_66 : tensor<128x64xf32> loc(#loc602)
        %tanh_out_68 = arith.addf %tanh_out_67, %cst_4 : tensor<128x64xf32> loc(#loc603)
        %tanh_out_69 = arith.divf %cst_4, %tanh_out_68 : tensor<128x64xf32> loc(#loc604)
        %tanh_out_70 = arith.mulf %tanh_out_69, %cst_1 : tensor<128x64xf32> loc(#loc598)
        %tanh_out_71 = arith.subf %tanh_out_70, %cst_4 : tensor<128x64xf32> loc(#loc599)
        %p_72 = arith.mulf %qk, %cst_3 : tensor<128x64xf32> loc(#loc576)
        %p_73 = arith.mulf %tanh_out_71, %tanh_out_71 : tensor<128x64xf32> loc(#loc577)
        %p_74 = arith.subf %cst_4, %p_73 : tensor<128x64xf32> loc(#loc578)
        %p_75 = arith.mulf %qk, %cst_2 : tensor<128x64xf32> loc(#loc579)
        %p_76 = arith.mulf %p_75, %qk : tensor<128x64xf32> loc(#loc580)
        %p_77 = arith.addf %p_76, %cst_6 : tensor<128x64xf32> loc(#loc581)
        %p_78 = arith.mulf %p_74, %p_77 : tensor<128x64xf32> loc(#loc582)
        %p_79 = arith.mulf %p_72, %p_78 : tensor<128x64xf32> loc(#loc583)
        %p_80 = arith.addf %tanh_out_71, %cst_4 : tensor<128x64xf32> loc(#loc584)
        %p_81 = arith.mulf %p_80, %cst_3 : tensor<128x64xf32> loc(#loc585)
        %p_82 = arith.addf %p_79, %p_81 : tensor<128x64xf32> loc(#loc586)
        %p_83 = arith.mulf %p_82, %p : tensor<128x64xf32> loc(#loc546)
        %dp = tt.dot %do_33, %vT, %cst_0 : tensor<128x64xbf16> * tensor<64x64xbf16> -> tensor<128x64xf32> loc(#loc556)
        %ds = arith.mulf %p_83, %dp : tensor<128x64xf32> loc(#loc557)
        %ds_84 = arith.truncf %ds : tensor<128x64xf32> to tensor<128x64xbf16> loc(#loc558)
        %dq_85 = tt.trans %kT {order = array<i32: 1, 0>} : tensor<64x64xbf16> -> tensor<64x64xbf16> loc(#loc559)
        %dq_86 = tt.dot %ds_84, %dq_85, %dq : tensor<128x64xbf16> * tensor<64x64xbf16> -> tensor<128x64xf32> loc(#loc560)
        %curr_n_87 = arith.addi %start_n_55, %c64_i32 : i32 loc(#loc561)
        %kT_ptrs_88 = tt.addptr %kT_ptrs_53, %kT_ptrs_48 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc548)
        %vT_ptrs_89 = tt.addptr %vT_ptrs_54, %kT_ptrs_48 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi32> loc(#loc562)
        scf.yield %dq_86, %kT_ptrs_88, %vT_ptrs_89, %curr_n_87 : tensor<128x64xf32>, tensor<64x64x!tt.ptr<bf16>>, tensor<64x64x!tt.ptr<bf16>>, i32 loc(#loc563)
      } {tt.loop_unroll_factor = 1 : i32} loc(#loc595)
      %dq_ptrs = tt.splat %9#4 : !tt.ptr<bf16> -> tensor<128x1x!tt.ptr<bf16>> loc(#loc522)
      %dq_ptrs_49 = tt.addptr %dq_ptrs, %q_21 : tensor<128x1x!tt.ptr<bf16>>, tensor<128x1xi32> loc(#loc522)
      %dq_ptrs_50 = tt.broadcast %dq_ptrs_49 : tensor<128x1x!tt.ptr<bf16>> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc523)
      %dq_ptrs_51 = tt.addptr %dq_ptrs_50, %q_25 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc523)
      %12 = arith.truncf %curr_n#0 : tensor<128x64xf32> to tensor<128x64xbf16> loc(#loc400)
      tt.store %dq_ptrs_51, %12, %qmask_20 : tensor<128x64x!tt.ptr<bf16>> loc(#loc400)
    } loc(#loc348)
    tt.return loc(#loc209)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1641:8)
#loc3 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1568:14)
#loc4 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1564:27)
#loc5 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1564:14)
#loc6 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1565:27)
#loc7 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1565:14)
#loc8 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1566:27)
#loc9 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1566:14)
#loc10 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1567:27)
#loc11 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1567:14)
#loc12 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1569:28)
#loc13 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1569:14)
#loc14 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1570:28)
#loc15 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1570:14)
#loc16 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1575:30)
#loc17 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1583:30)
#loc18 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1584:24)
#loc19 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1586:23)
#loc20 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1158:34)
#loc21 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1158:22)
#loc22 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1159:42)
#loc23 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1159:20)
#loc24 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1161:19)
#loc25 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1173:38)
#loc26 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1173:26)
#loc27 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1174:44)
#loc28 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1174:24)
#loc29 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1176:23)
#loc30 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1182:20)
#loc31 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1186:26)
#loc32 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1287:18)
#loc33 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1287:37)
#loc34 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1287:26)
#loc35 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1287:7)
#loc36 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1288:40)
#loc37 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1288:26)
#loc38 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1290:26)
#loc39 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1291:24)
#loc40 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1291:46)
#loc41 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1291:36)
#loc42 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1292:26)
#loc43 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1292:48)
#loc44 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1292:38)
#loc45 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1293:25)
#loc46 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1293:48)
#loc47 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1293:38)
#loc48 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1296:13)
#loc49 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1297:13)
#loc50 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1298:13)
#loc51 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1299:14)
#loc52 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1300:14)
#loc53 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1301:14)
#loc54 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1302:14)
#loc55 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1305:17)
#loc56 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1305:7)
#loc57 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1306:40)
#loc58 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1306:27)
#loc59 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1307:24)
#loc60 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1307:35)
#loc61 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1307:55)
#loc62 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1307:66)
#loc63 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1307:48)
#loc64 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1330:38)
#loc65 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1330:20)
#loc66 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1330:50)
#loc67 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1330:16)
#loc68 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1334:20)
#loc69 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1334:50)
#loc70 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1334:16)
#loc71 = loc("/workspace/projects/triton-openai/python/triton/language/standard.py":41:22)
#loc72 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1339:52)
#loc73 = loc("/workspace/projects/triton-openai/python/triton/language/standard.py":41:28)
#loc74 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":778:40)
#loc75 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1380:12)
#loc76 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":778:22)
#loc77 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":778:59)
#loc78 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":778:52)
#loc79 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":779:41)
#loc80 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":779:23)
#loc81 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":779:54)
#loc82 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":789:35)
#loc83 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":789:66)
#loc84 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":789:48)
#loc85 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":808:35)
#loc86 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":808:44)
#loc87 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":841:15)
#loc88 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":893:32)
#loc89 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":893:23)
#loc90 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":894:32)
#loc91 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":894:23)
#loc92 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":787:46)
#loc93 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":788:26)
#loc94 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":789:55)
#loc95 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":802:25)
#loc96 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":805:24)
#loc97 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":808:24)
#loc98 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":818:25)
#loc99 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":820:33)
#loc100 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":820:24)
#loc101 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":836:55)
#loc102 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":836:76)
#loc103 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":836:81)
#loc104 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":836:65)
#loc105 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":836:61)
#loc106 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":67:30)
#loc107 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":86:16)
#loc108 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":836:40)
#loc109 = loc("/workspace/projects/triton-openai/python/triton/language/standard.py":48:30)
#loc110 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":67:26)
#loc111 = loc("/workspace/projects/triton-openai/python/triton/language/standard.py":48:29)
#loc112 = loc("/workspace/projects/triton-openai/python/triton/language/standard.py":48:20)
#loc113 = loc("/workspace/projects/triton-openai/python/triton/language/standard.py":48:16)
#loc114 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":67:15)
#loc115 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":67:35)
#loc116 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":837:24)
#loc117 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":837:34)
#loc118 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":837:30)
#loc119 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":842:21)
#loc120 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":843:26)
#loc121 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":855:34)
#loc122 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":855:23)
#loc123 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":855:19)
#loc124 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":856:49)
#loc125 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":856:54)
#loc126 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":856:34)
#loc127 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":856:19)
#loc128 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":857:23)
#loc129 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":857:16)
#loc130 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":860:14)
#loc131 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":870:19)
#loc132 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":871:21)
#loc133 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":872:35)
#loc134 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":872:26)
#loc135 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":891:18)
#loc136 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":896:8)
#loc137 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1391:23)
#loc138 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1391:53)
#loc139 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1404:34)
#loc140 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1407:23)
#loc141 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1407:53)
#loc142 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1420:34)
#loc143 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1425:21)
#loc144 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1425:11)
#loc145 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1427:44)
#loc146 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1427:31)
#loc147 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1429:28)
#loc148 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1429:39)
#loc149 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1429:59)
#loc150 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1429:70)
#loc151 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1429:52)
#loc152 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1446:42)
#loc153 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1446:24)
#loc154 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1446:54)
#loc155 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1446:20)
#loc156 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1450:43)
#loc157 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1450:25)
#loc158 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1450:56)
#loc159 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1450:20)
#loc160 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1456:39)
#loc161 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":944:40)
#loc162 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1492:16)
#loc163 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":944:22)
#loc164 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":944:59)
#loc165 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":944:52)
#loc166 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":945:22)
#loc167 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":945:52)
#loc168 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":953:35)
#loc169 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":953:66)
#loc170 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":953:48)
#loc171 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":985:13)
#loc172 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1006:32)
#loc173 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1006:23)
#loc174 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":951:46)
#loc175 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":952:26)
#loc176 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":953:55)
#loc177 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":972:25)
#loc178 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":973:25)
#loc179 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":975:23)
#loc180 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":112:47)
#loc181 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":982:31)
#loc182 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":112:69)
#loc183 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":112:73)
#loc184 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":112:58)
#loc185 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":112:52)
#loc186 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":112:32)
#loc187 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":113:17)
#loc188 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":114:24)
#loc189 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":114:13)
#loc190 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":114:67)
#loc191 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":114:71)
#loc192 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":114:52)
#loc193 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":114:37)
#loc194 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":114:8)
#loc195 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":115:19)
#loc196 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":115:15)
#loc197 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":115:8)
#loc198 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":997:24)
#loc199 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":998:17)
#loc200 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":999:19)
#loc201 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1002:34)
#loc202 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1002:25)
#loc203 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1004:18)
#loc204 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1007:23)
#loc205 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1005:8)
#loc206 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1501:27)
#loc207 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1501:57)
#loc208 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1516:38)
#loc209 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":1594:4)
#loc231 = loc(callsite(#loc1 at #loc2))
#loc232 = loc("off_z"(#loc16))
#loc233 = loc("off_seq_h"(#loc17))
#loc234 = loc("off_h"(#loc18))
#loc235 = loc("pid"(#loc19))
#loc236 = loc("begin_q"(#loc20))
#loc237 = loc("begin_q"(#loc21))
#loc238 = loc("end_q"(#loc22))
#loc239 = loc("end_q"(#loc23))
#loc240 = loc("qlen"(#loc24))
#loc241 = loc("begin_k"(#loc25))
#loc242 = loc("begin_k"(#loc26))
#loc243 = loc("end_k"(#loc27))
#loc244 = loc("end_k"(#loc28))
#loc245 = loc("klen"(#loc29))
#loc246 = loc("start_n"(#loc30))
#loc247 = loc("offs_k"(#loc31))
#loc248 = loc(callsite(#loc32 at #loc2))
#loc249 = loc(callsite(#loc33 at #loc2))
#loc250 = loc(callsite(#loc34 at #loc2))
#loc251 = loc(callsite(#loc35 at #loc2))
#loc252 = loc("begin_o"(#loc36))
#loc253 = loc("begin_o"(#loc37))
#loc254 = loc("off_h2"(#loc38))
#loc255 = loc("qadj"(#loc39))
#loc256 = loc("qadj"(#loc40))
#loc257 = loc("qadj"(#loc41))
#loc258 = loc("kadj"(#loc42))
#loc259 = loc("kadj"(#loc43))
#loc260 = loc("kadj"(#loc44))
#loc261 = loc("doadj"(#loc45))
#loc262 = loc("doadj"(#loc46))
#loc263 = loc("doadj"(#loc47))
#loc264 = loc("Q"(#loc48))
#loc265 = loc("K"(#loc49))
#loc266 = loc("V"(#loc50))
#loc267 = loc("DO"(#loc51))
#loc268 = loc("DQ"(#loc52))
#loc269 = loc("DK"(#loc53))
#loc270 = loc("DV"(#loc54))
#loc271 = loc(callsite(#loc55 at #loc2))
#loc272 = loc(callsite(#loc56 at #loc2))
#loc273 = loc("offs_n"(#loc57))
#loc274 = loc("offs_n"(#loc58))
#loc275 = loc("kmask"(#loc59))
#loc276 = loc("kmask"(#loc60))
#loc277 = loc("kmask"(#loc61))
#loc278 = loc("kmask"(#loc62))
#loc279 = loc("kmask"(#loc63))
#loc280 = loc("k"(#loc64))
#loc281 = loc("k"(#loc65))
#loc282 = loc("k"(#loc66))
#loc283 = loc("k"(#loc67))
#loc284 = loc("v"(#loc68))
#loc285 = loc("v"(#loc69))
#loc286 = loc("v"(#loc70))
#loc287 = loc("num_steps"(#loc72))
#loc288 = loc("qT_ptrs"(#loc74))
#loc289 = loc(callsite(#loc75 at #loc2))
#loc290 = loc("qT_ptrs"(#loc76))
#loc291 = loc("qT_ptrs"(#loc77))
#loc292 = loc("qT_ptrs"(#loc78))
#loc293 = loc("do_ptrs"(#loc79))
#loc294 = loc("do_ptrs"(#loc80))
#loc295 = loc("do_ptrs"(#loc81))
#loc296 = loc("qmask"(#loc82))
#loc297 = loc("qmask"(#loc83))
#loc298 = loc("qmask"(#loc84))
#loc299 = loc("omask"(#loc85))
#loc300 = loc("omask"(#loc86))
#loc301 = loc("ppT"(#loc87))
#loc302 = loc("qT_ptrs"(#loc88))
#loc303 = loc("qT_ptrs"(#loc89))
#loc304 = loc("do_ptrs"(#loc90))
#loc305 = loc("do_ptrs"(#loc91))
#loc306 = loc("dk"(#loc92))
#loc307 = loc("offs_m"(#loc93))
#loc308 = loc("qmask"(#loc94))
#loc309 = loc("qT"(#loc95))
#loc310 = loc("qkT"(#loc96))
#loc311 = loc("omask"(#loc97))
#loc312 = loc("do"(#loc98))
#loc313 = loc("dpT"(#loc99))
#loc314 = loc("dpT"(#loc100))
#loc315 = loc("tanh_out"(#loc101))
#loc316 = loc("tanh_out"(#loc102))
#loc317 = loc("tanh_out"(#loc103))
#loc318 = loc("tanh_out"(#loc104))
#loc319 = loc("tanh_out"(#loc105))
#loc320 = loc("tanh_out"(#loc108))
#loc321 = loc("ppT"(#loc116))
#loc322 = loc("ppT"(#loc117))
#loc323 = loc("ppT"(#loc118))
#loc324 = loc("ppT"(#loc119))
#loc325 = loc("dv"(#loc120))
#loc326 = loc("pT"(#loc121))
#loc327 = loc("pT"(#loc122))
#loc328 = loc("pT"(#loc123))
#loc329 = loc("pT"(#loc124))
#loc330 = loc("pT"(#loc125))
#loc331 = loc("pT"(#loc126))
#loc332 = loc("pT"(#loc127))
#loc333 = loc("pT"(#loc128))
#loc334 = loc("pT"(#loc129))
#loc335 = loc("pT"(#loc130))
#loc336 = loc("dsT"(#loc131))
#loc337 = loc("dsT"(#loc132))
#loc338 = loc("dk"(#loc133))
#loc339 = loc("dk"(#loc134))
#loc340 = loc("curr_m"(#loc135))
#loc341 = loc("dv_ptrs"(#loc137))
#loc342 = loc("dv_ptrs"(#loc138))
#loc343 = loc(callsite(#loc139 at #loc2))
#loc344 = loc("dk_ptrs"(#loc140))
#loc345 = loc("dk_ptrs"(#loc141))
#loc346 = loc(callsite(#loc142 at #loc2))
#loc347 = loc(callsite(#loc143 at #loc2))
#loc348 = loc(callsite(#loc144 at #loc2))
#loc349 = loc("offs_m"(#loc145))
#loc350 = loc("offs_m"(#loc146))
#loc351 = loc("qmask"(#loc147))
#loc352 = loc("qmask"(#loc148))
#loc353 = loc("qmask"(#loc149))
#loc354 = loc("qmask"(#loc150))
#loc355 = loc("qmask"(#loc151))
#loc356 = loc("q"(#loc152))
#loc357 = loc("q"(#loc153))
#loc358 = loc("q"(#loc154))
#loc359 = loc("q"(#loc155))
#loc360 = loc("do"(#loc156))
#loc361 = loc("do"(#loc157))
#loc362 = loc("do"(#loc158))
#loc363 = loc("do"(#loc159))
#loc364 = loc("num_steps"(#loc160))
#loc365 = loc("kT_ptrs"(#loc161))
#loc366 = loc("dq"(#loc162))
#loc367 = loc("kT_ptrs"(#loc163))
#loc368 = loc("kT_ptrs"(#loc164))
#loc369 = loc("kT_ptrs"(#loc165))
#loc370 = loc("vT_ptrs"(#loc166))
#loc371 = loc("vT_ptrs"(#loc167))
#loc372 = loc("kmask"(#loc168))
#loc373 = loc("kmask"(#loc169))
#loc374 = loc("kmask"(#loc170))
#loc375 = loc("p"(#loc171))
#loc376 = loc("kT_ptrs"(#loc172))
#loc377 = loc("kT_ptrs"(#loc173))
#loc378 = loc("dq"(#loc174))
#loc379 = loc("offs_n"(#loc175))
#loc380 = loc("kmask"(#loc176))
#loc381 = loc("kT"(#loc177))
#loc382 = loc("vT"(#loc178))
#loc383 = loc("qk"(#loc179))
#loc384 = loc("tanh_out"(#loc180))
#loc385 = loc("p"(#loc181))
#loc386 = loc("tanh_out"(#loc182))
#loc387 = loc("tanh_out"(#loc183))
#loc388 = loc("tanh_out"(#loc184))
#loc389 = loc("tanh_out"(#loc185))
#loc390 = loc("tanh_out"(#loc186))
#loc391 = loc("dp"(#loc198))
#loc392 = loc("ds"(#loc199))
#loc393 = loc("ds"(#loc200))
#loc394 = loc("dq"(#loc201))
#loc395 = loc("dq"(#loc202))
#loc396 = loc("curr_n"(#loc203))
#loc397 = loc("vT_ptrs"(#loc204))
#loc398 = loc("dq_ptrs"(#loc206))
#loc399 = loc("dq_ptrs"(#loc207))
#loc400 = loc(callsite(#loc208 at #loc2))
#loc401 = loc(callsite(#loc236 at #loc2))
#loc402 = loc(callsite(#loc237 at #loc2))
#loc403 = loc(callsite(#loc238 at #loc2))
#loc404 = loc(callsite(#loc239 at #loc2))
#loc405 = loc(callsite(#loc240 at #loc2))
#loc406 = loc(callsite(#loc241 at #loc2))
#loc407 = loc(callsite(#loc242 at #loc2))
#loc408 = loc(callsite(#loc243 at #loc2))
#loc409 = loc(callsite(#loc244 at #loc2))
#loc410 = loc(callsite(#loc245 at #loc2))
#loc411 = loc(callsite(#loc246 at #loc2))
#loc412 = loc(callsite(#loc247 at #loc2))
#loc413 = loc(callsite(#loc252 at #loc2))
#loc414 = loc(callsite(#loc253 at #loc2))
#loc415 = loc(callsite(#loc254 at #loc2))
#loc416 = loc(callsite(#loc255 at #loc2))
#loc417 = loc(callsite(#loc256 at #loc2))
#loc418 = loc(callsite(#loc257 at #loc2))
#loc419 = loc(callsite(#loc258 at #loc2))
#loc420 = loc(callsite(#loc259 at #loc2))
#loc421 = loc(callsite(#loc260 at #loc2))
#loc422 = loc(callsite(#loc261 at #loc2))
#loc423 = loc(callsite(#loc262 at #loc2))
#loc424 = loc(callsite(#loc263 at #loc2))
#loc425 = loc("Q"(#loc264))
#loc426 = loc("K"(#loc265))
#loc427 = loc("V"(#loc266))
#loc428 = loc("DO"(#loc267))
#loc429 = loc("DQ"(#loc268))
#loc430 = loc("DK"(#loc269))
#loc431 = loc("DV"(#loc270))
#loc432 = loc(callsite(#loc273 at #loc2))
#loc433 = loc(callsite(#loc274 at #loc2))
#loc434 = loc(callsite(#loc275 at #loc2))
#loc435 = loc(callsite(#loc276 at #loc2))
#loc436 = loc(callsite(#loc277 at #loc2))
#loc437 = loc(callsite(#loc278 at #loc2))
#loc438 = loc(callsite(#loc279 at #loc2))
#loc439 = loc(callsite(#loc280 at #loc2))
#loc440 = loc(callsite(#loc281 at #loc2))
#loc441 = loc(callsite(#loc282 at #loc2))
#loc442 = loc(callsite(#loc283 at #loc2))
#loc443 = loc(callsite(#loc284 at #loc2))
#loc444 = loc(callsite(#loc285 at #loc2))
#loc445 = loc(callsite(#loc286 at #loc2))
#loc446 = loc(callsite(#loc287 at #loc2))
#loc447 = loc(callsite(#loc288 at #loc289))
#loc448 = loc(callsite(#loc290 at #loc289))
#loc449 = loc(callsite(#loc291 at #loc289))
#loc450 = loc(callsite(#loc292 at #loc289))
#loc451 = loc(callsite(#loc293 at #loc289))
#loc452 = loc(callsite(#loc294 at #loc289))
#loc453 = loc(callsite(#loc295 at #loc289))
#loc454 = loc(callsite(#loc296 at #loc289))
#loc455 = loc(callsite(#loc297 at #loc289))
#loc456 = loc(callsite(#loc298 at #loc289))
#loc457 = loc(callsite(#loc299 at #loc289))
#loc458 = loc(callsite(#loc300 at #loc289))
#loc459 = loc(callsite(#loc301 at #loc289))
#loc460 = loc(callsite(#loc302 at #loc289))
#loc461 = loc(callsite(#loc303 at #loc289))
#loc462 = loc(callsite(#loc304 at #loc289))
#loc463 = loc(callsite(#loc305 at #loc289))
#loc464 = loc("dv"(#loc306))
#loc465 = loc(callsite(#loc307 at #loc289))
#loc466 = loc(callsite(#loc308 at #loc289))
#loc467 = loc(callsite(#loc309 at #loc289))
#loc468 = loc(callsite(#loc310 at #loc289))
#loc469 = loc(callsite(#loc311 at #loc289))
#loc470 = loc(callsite(#loc312 at #loc289))
#loc471 = loc(callsite(#loc313 at #loc289))
#loc472 = loc(callsite(#loc314 at #loc289))
#loc473 = loc(callsite(#loc315 at #loc289))
#loc474 = loc(callsite(#loc316 at #loc289))
#loc475 = loc(callsite(#loc317 at #loc289))
#loc476 = loc(callsite(#loc318 at #loc289))
#loc477 = loc(callsite(#loc319 at #loc289))
#loc478 = loc(callsite(#loc320 at #loc289))
#loc479 = loc(callsite(#loc321 at #loc289))
#loc480 = loc(callsite(#loc322 at #loc289))
#loc481 = loc(callsite(#loc323 at #loc289))
#loc482 = loc(callsite(#loc324 at #loc289))
#loc483 = loc(callsite(#loc325 at #loc289))
#loc484 = loc(callsite(#loc326 at #loc289))
#loc485 = loc(callsite(#loc327 at #loc289))
#loc486 = loc(callsite(#loc328 at #loc289))
#loc487 = loc(callsite(#loc329 at #loc289))
#loc488 = loc(callsite(#loc330 at #loc289))
#loc489 = loc(callsite(#loc331 at #loc289))
#loc490 = loc(callsite(#loc332 at #loc289))
#loc491 = loc(callsite(#loc333 at #loc289))
#loc492 = loc(callsite(#loc334 at #loc289))
#loc493 = loc(callsite(#loc335 at #loc289))
#loc494 = loc(callsite(#loc336 at #loc289))
#loc495 = loc(callsite(#loc337 at #loc289))
#loc496 = loc(callsite(#loc338 at #loc289))
#loc497 = loc(callsite(#loc339 at #loc289))
#loc498 = loc(callsite(#loc340 at #loc289))
#loc499 = loc(callsite(#loc136 at #loc289))
#loc500 = loc(callsite(#loc341 at #loc2))
#loc501 = loc(callsite(#loc342 at #loc2))
#loc502 = loc(callsite(#loc344 at #loc2))
#loc503 = loc(callsite(#loc345 at #loc2))
#loc504 = loc(callsite(#loc349 at #loc2))
#loc505 = loc(callsite(#loc350 at #loc2))
#loc506 = loc(callsite(#loc351 at #loc2))
#loc507 = loc(callsite(#loc352 at #loc2))
#loc508 = loc(callsite(#loc353 at #loc2))
#loc509 = loc(callsite(#loc354 at #loc2))
#loc510 = loc(callsite(#loc355 at #loc2))
#loc511 = loc(callsite(#loc356 at #loc2))
#loc512 = loc(callsite(#loc357 at #loc2))
#loc513 = loc(callsite(#loc358 at #loc2))
#loc514 = loc(callsite(#loc359 at #loc2))
#loc515 = loc(callsite(#loc360 at #loc2))
#loc516 = loc(callsite(#loc361 at #loc2))
#loc517 = loc(callsite(#loc362 at #loc2))
#loc518 = loc(callsite(#loc363 at #loc2))
#loc519 = loc(callsite(#loc364 at #loc2))
#loc520 = loc(callsite(#loc366 at #loc2))
#loc521 = loc("offs_n"(#loc378))
#loc522 = loc(callsite(#loc398 at #loc2))
#loc523 = loc(callsite(#loc399 at #loc2))
#loc524 = loc(callsite(#loc425 at #loc2))
#loc525 = loc(callsite(#loc426 at #loc2))
#loc526 = loc(callsite(#loc427 at #loc2))
#loc527 = loc(callsite(#loc428 at #loc2))
#loc528 = loc(callsite(#loc429 at #loc2))
#loc529 = loc(callsite(#loc430 at #loc2))
#loc530 = loc(callsite(#loc431 at #loc2))
#loc531 = loc(callsite(#loc71 at #loc446))
#loc532 = loc(callsite(#loc73 at #loc446))
#loc533 = loc("offs_m"(#loc464))
#loc534 = loc(callsite(#loc107 at #loc478))
#loc535 = loc(callsite(#loc71 at #loc519))
#loc536 = loc(callsite(#loc73 at #loc519))
#loc537 = loc(callsite(#loc365 at #loc520))
#loc538 = loc(callsite(#loc367 at #loc520))
#loc539 = loc(callsite(#loc368 at #loc520))
#loc540 = loc(callsite(#loc369 at #loc520))
#loc541 = loc(callsite(#loc370 at #loc520))
#loc542 = loc(callsite(#loc371 at #loc520))
#loc543 = loc(callsite(#loc372 at #loc520))
#loc544 = loc(callsite(#loc373 at #loc520))
#loc545 = loc(callsite(#loc374 at #loc520))
#loc546 = loc(callsite(#loc375 at #loc520))
#loc547 = loc(callsite(#loc376 at #loc520))
#loc548 = loc(callsite(#loc377 at #loc520))
#loc549 = loc("kT_ptrs"(#loc521))
#loc550 = loc(callsite(#loc379 at #loc520))
#loc551 = loc(callsite(#loc380 at #loc520))
#loc552 = loc(callsite(#loc381 at #loc520))
#loc553 = loc(callsite(#loc382 at #loc520))
#loc554 = loc(callsite(#loc383 at #loc520))
#loc555 = loc(callsite(#loc385 at #loc520))
#loc556 = loc(callsite(#loc391 at #loc520))
#loc557 = loc(callsite(#loc392 at #loc520))
#loc558 = loc(callsite(#loc393 at #loc520))
#loc559 = loc(callsite(#loc394 at #loc520))
#loc560 = loc(callsite(#loc395 at #loc520))
#loc561 = loc(callsite(#loc396 at #loc520))
#loc562 = loc(callsite(#loc397 at #loc520))
#loc563 = loc(callsite(#loc205 at #loc520))
#loc564 = loc("qT_ptrs"(#loc533))
#loc565 = loc(callsite(#loc106 at #loc534))
#loc566 = loc(callsite(#loc110 at #loc534))
#loc567 = loc(callsite(#loc114 at #loc534))
#loc568 = loc(callsite(#loc115 at #loc534))
#loc569 = loc("vT_ptrs"(#loc549))
#loc570 = loc(callsite(#loc384 at #loc555))
#loc571 = loc(callsite(#loc386 at #loc555))
#loc572 = loc(callsite(#loc387 at #loc555))
#loc573 = loc(callsite(#loc388 at #loc555))
#loc574 = loc(callsite(#loc389 at #loc555))
#loc575 = loc(callsite(#loc390 at #loc555))
#loc576 = loc(callsite(#loc187 at #loc555))
#loc577 = loc(callsite(#loc188 at #loc555))
#loc578 = loc(callsite(#loc189 at #loc555))
#loc579 = loc(callsite(#loc190 at #loc555))
#loc580 = loc(callsite(#loc191 at #loc555))
#loc581 = loc(callsite(#loc192 at #loc555))
#loc582 = loc(callsite(#loc193 at #loc555))
#loc583 = loc(callsite(#loc194 at #loc555))
#loc584 = loc(callsite(#loc195 at #loc555))
#loc585 = loc(callsite(#loc196 at #loc555))
#loc586 = loc(callsite(#loc197 at #loc555))
#loc587 = loc("do_ptrs"(#loc564))
#loc588 = loc(callsite(#loc109 at #loc566))
#loc589 = loc(callsite(#loc111 at #loc566))
#loc590 = loc(callsite(#loc112 at #loc566))
#loc591 = loc(callsite(#loc113 at #loc566))
#loc592 = loc("curr_n"(#loc569))
#loc593 = loc(callsite(#loc107 at #loc575))
#loc594 = loc("curr_m"(#loc587))
#loc595 = loc(callsite(#loc592 at #loc520))
#loc596 = loc(callsite(#loc106 at #loc593))
#loc597 = loc(callsite(#loc110 at #loc593))
#loc598 = loc(callsite(#loc114 at #loc593))
#loc599 = loc(callsite(#loc115 at #loc593))
#loc600 = loc(callsite(#loc594 at #loc289))
#loc601 = loc(callsite(#loc109 at #loc597))
#loc602 = loc(callsite(#loc111 at #loc597))
#loc603 = loc(callsite(#loc112 at #loc597))
#loc604 = loc(callsite(#loc113 at #loc597))
