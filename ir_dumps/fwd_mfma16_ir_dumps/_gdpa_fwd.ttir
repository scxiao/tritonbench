#loc = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":457:0)
#loc107 = loc("Q"(#loc))
#loc108 = loc("Q_offsets"(#loc))
#loc109 = loc("K"(#loc))
#loc110 = loc("K_offsets"(#loc))
#loc111 = loc("V"(#loc))
#loc112 = loc("Out"(#loc))
#loc113 = loc("Out_offsets"(#loc))
#loc114 = loc("ad_to_request_offset_ptr"(#loc))
#loc115 = loc("stride_qm"(#loc))
#loc116 = loc("stride_qh"(#loc))
#loc117 = loc("stride_kn"(#loc))
#loc118 = loc("stride_kh"(#loc))
#loc119 = loc("stride_vn"(#loc))
#loc120 = loc("stride_vh"(#loc))
#loc121 = loc("stride_om"(#loc))
#loc122 = loc("stride_oh"(#loc))
#loc123 = loc("Z"(#loc))
#loc124 = loc("H"(#loc))
#loc125 = loc("N_CTX"(#loc))
#loc126 = loc("N_CTX_KV"(#loc))
#loc127 = loc("qk_scale"(#loc))
#loc128 = loc("Q_SHAPE_0"(#loc))
module {
  tt.func public @_gdpa_fwd(%Q: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("Q"(#loc)), %Q_offsets: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("Q_offsets"(#loc)), %K: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("K"(#loc)), %K_offsets: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("K_offsets"(#loc)), %V: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("V"(#loc)), %Out: !tt.ptr<bf16> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("Out"(#loc)), %Out_offsets: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("Out_offsets"(#loc)), %ad_to_request_offset_ptr: !tt.ptr<i32> {tt.divisibility = 16 : i32, tt.pointer_range = 32 : i32} loc("ad_to_request_offset_ptr"(#loc)), %stride_qm: i32 {tt.divisibility = 16 : i32} loc("stride_qm"(#loc)), %stride_qh: i32 {tt.divisibility = 16 : i32} loc("stride_qh"(#loc)), %stride_kn: i32 {tt.divisibility = 16 : i32} loc("stride_kn"(#loc)), %stride_kh: i32 {tt.divisibility = 16 : i32} loc("stride_kh"(#loc)), %stride_vn: i32 {tt.divisibility = 16 : i32} loc("stride_vn"(#loc)), %stride_vh: i32 {tt.divisibility = 16 : i32} loc("stride_vh"(#loc)), %stride_om: i32 {tt.divisibility = 16 : i32} loc("stride_om"(#loc)), %stride_oh: i32 {tt.divisibility = 16 : i32} loc("stride_oh"(#loc)), %Z: i32 {tt.divisibility = 16 : i32} loc("Z"(#loc)), %H: i32 loc("H"(#loc)), %N_CTX: i32 {tt.divisibility = 16 : i32} loc("N_CTX"(#loc)), %N_CTX_KV: i32 {tt.divisibility = 16 : i32} loc("N_CTX_KV"(#loc)), %qk_scale: f32 loc("qk_scale"(#loc)), %Q_SHAPE_0: i32 loc("Q_SHAPE_0"(#loc))) attributes {noinline = false} {
    %c32_i64 = arith.constant 32 : i64 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<32x64xbf16> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<32x1xi64> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<64x32xbf16> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<1x32xi64> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<64x1xi64> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<64x1xi64> loc(#loc1)
    %cst_5 = arith.constant dense<0.000000e+00> : tensor<128x64xbf16> loc(#loc1)
    %cst_6 = arith.constant dense<64> : tensor<1x64xi64> loc(#loc1)
    %cst_7 = arith.constant dense<0> : tensor<1x64xi64> loc(#loc1)
    %cst_8 = arith.constant dense<0> : tensor<128x1xi64> loc(#loc1)
    %c0_i64 = arith.constant 0 : i64 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc129)
    %c128_i32 = arith.constant 128 : i32 loc(#loc129)
    %cst_9 = arith.constant dense<64> : tensor<1x64xi32> loc(#loc129)
    %cst_10 = arith.constant dense<0.000000e+00> : tensor<128x64xf32> loc(#loc129)
    %cst_11 = arith.constant dense<5.000000e-01> : tensor<128x32xf32> loc(#loc129)
    %cst_12 = arith.constant dense<0.797884583> : tensor<128x32xf32> loc(#loc129)
    %cst_13 = arith.constant dense<4.471500e-02> : tensor<128x32xf32> loc(#loc129)
    %cst_14 = arith.constant dense<1.000000e+00> : tensor<128x32xf32> loc(#loc129)
    %cst_15 = arith.constant dense<2.000000e+00> : tensor<128x32xf32> loc(#loc129)
    %cst_16 = arith.constant dense<0.000000e+00> : tensor<128x32xf32> loc(#loc129)
    %c32_i32 = arith.constant 32 : i32 loc(#loc129)
    %true = arith.constant true loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %0 = arith.cmpi sge, %stride_qm, %c0_i32 : i32 loc(#loc3)
    llvm.intr.assume %0 : i1 loc(#loc4)
    %1 = arith.cmpi sge, %stride_qh, %c0_i32 : i32 loc(#loc5)
    llvm.intr.assume %1 : i1 loc(#loc6)
    llvm.intr.assume %true : i1 loc(#loc7)
    %2 = arith.cmpi sge, %stride_kn, %c0_i32 : i32 loc(#loc8)
    llvm.intr.assume %2 : i1 loc(#loc9)
    %3 = arith.cmpi sge, %stride_kh, %c0_i32 : i32 loc(#loc10)
    llvm.intr.assume %3 : i1 loc(#loc11)
    llvm.intr.assume %true : i1 loc(#loc12)
    %4 = arith.cmpi sge, %stride_vn, %c0_i32 : i32 loc(#loc13)
    llvm.intr.assume %4 : i1 loc(#loc14)
    %5 = arith.cmpi sge, %stride_vh, %c0_i32 : i32 loc(#loc15)
    llvm.intr.assume %5 : i1 loc(#loc16)
    llvm.intr.assume %true : i1 loc(#loc17)
    %6 = arith.cmpi sge, %stride_om, %c0_i32 : i32 loc(#loc18)
    llvm.intr.assume %6 : i1 loc(#loc19)
    %7 = arith.cmpi sge, %stride_oh, %c0_i32 : i32 loc(#loc20)
    llvm.intr.assume %7 : i1 loc(#loc21)
    llvm.intr.assume %true : i1 loc(#loc22)
    %off_hz = tt.get_program_id y : i32 loc(#loc130)
    %off_z = arith.divsi %off_hz, %H : i32 loc(#loc131)
    %off_h = arith.remsi %off_hz, %H : i32 loc(#loc132)
    %pid = tt.get_program_id x : i32 loc(#loc133)
    %q_offset = arith.extsi %off_h : i32 to i64 loc(#loc194)
    %q_offset_17 = arith.extsi %stride_qh : i32 to i64 loc(#loc195)
    %q_offset_18 = arith.muli %q_offset, %q_offset_17 : i64 loc(#loc195)
    %kv_offset = arith.extsi %stride_kh : i32 to i64 loc(#loc196)
    %kv_offset_19 = arith.muli %q_offset, %kv_offset : i64 loc(#loc196)
    %begin_q = tt.addptr %Q_offsets, %off_z : !tt.ptr<i32>, i32 loc(#loc197)
    %begin_q_20 = tt.load %begin_q : !tt.ptr<i32> loc(#loc198)
    %end_q = tt.addptr %begin_q, %c1_i32 : !tt.ptr<i32>, i32 loc(#loc199)
    %end_q_21 = tt.load %end_q : !tt.ptr<i32> loc(#loc200)
    %qlen = arith.subi %end_q_21, %begin_q_20 : i32 loc(#loc201)
    %qlen_22 = arith.minsi %qlen, %N_CTX : i32 loc(#loc202)
    %begin_k = tt.addptr %K_offsets, %off_z : !tt.ptr<i32>, i32 loc(#loc203)
    %begin_k_23 = tt.load %begin_k : !tt.ptr<i32> loc(#loc204)
    %end_k = tt.addptr %begin_k, %c1_i32 : !tt.ptr<i32>, i32 loc(#loc205)
    %end_k_24 = tt.load %end_k : !tt.ptr<i32> loc(#loc206)
    %klen = arith.subi %end_k_24, %begin_k_23 : i32 loc(#loc207)
    %8 = arith.muli %pid, %c128_i32 : i32 loc(#loc148)
    %9 = arith.cmpi slt, %8, %qlen_22 : i32 loc(#loc149)
    scf.if %9 {
      %begin_o = tt.addptr %Out_offsets, %off_z : !tt.ptr<i32>, i32 loc(#loc208)
      %begin_o_25 = tt.load %begin_o : !tt.ptr<i32> loc(#loc209)
      %Q_block_ptr = tt.addptr %Q, %q_offset_18 : !tt.ptr<bf16>, i64 loc(#loc210)
      %Q_block_ptr_26 = arith.muli %begin_q_20, %stride_qm : i32 loc(#loc211)
      %Q_block_ptr_27 = tt.addptr %Q_block_ptr, %Q_block_ptr_26 : !tt.ptr<bf16>, i32 loc(#loc212)
      %Q_block_ptr_28 = arith.extsi %qlen_22 : i32 to i64 loc(#loc213)
      %Q_block_ptr_29 = arith.extsi %stride_qm : i32 to i64 loc(#loc213)
      %Q_block_ptr_30 = arith.extsi %8 : i32 to i64 loc(#loc213)
      %V_block_ptr = tt.addptr %V, %kv_offset_19 : !tt.ptr<bf16>, i64 loc(#loc214)
      %V_block_ptr_31 = arith.muli %begin_k_23, %stride_vn : i32 loc(#loc215)
      %V_block_ptr_32 = tt.addptr %V_block_ptr, %V_block_ptr_31 : !tt.ptr<bf16>, i32 loc(#loc216)
      %V_block_ptr_33 = arith.extsi %klen : i32 to i64 loc(#loc217)
      %V_block_ptr_34 = arith.extsi %stride_vn : i32 to i64 loc(#loc217)
      %K_block_ptr = tt.addptr %K, %kv_offset_19 : !tt.ptr<bf16>, i64 loc(#loc218)
      %K_block_ptr_35 = arith.muli %begin_k_23, %stride_kn : i32 loc(#loc219)
      %K_block_ptr_36 = tt.addptr %K_block_ptr, %K_block_ptr_35 : !tt.ptr<bf16>, i32 loc(#loc220)
      %K_block_ptr_37 = arith.extsi %stride_kn : i32 to i64 loc(#loc221)
      %offs_m = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc222)
      %offs_m_38 = tt.splat %8 : i32 -> tensor<128xi32> loc(#loc223)
      %offs_m_39 = arith.addi %offs_m_38, %offs_m : tensor<128xi32> loc(#loc223)
      %offs_d = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc224)
      %o_ptrs = arith.extsi %stride_oh : i32 to i64 loc(#loc225)
      %o_ptrs_40 = arith.muli %q_offset, %o_ptrs : i64 loc(#loc225)
      %o_ptrs_41 = tt.addptr %Out, %o_ptrs_40 : !tt.ptr<bf16>, i64 loc(#loc226)
      %o_ptrs_42 = arith.muli %begin_o_25, %stride_om : i32 loc(#loc227)
      %o_ptrs_43 = tt.addptr %o_ptrs_41, %o_ptrs_42 : !tt.ptr<bf16>, i32 loc(#loc228)
      %o_ptrs_44 = tt.expand_dims %offs_m_39 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc229)
      %o_ptrs_45 = tt.splat %stride_om : i32 -> tensor<128x1xi32> loc(#loc230)
      %o_ptrs_46 = arith.muli %o_ptrs_44, %o_ptrs_45 : tensor<128x1xi32> loc(#loc230)
      %o_ptrs_47 = tt.expand_dims %offs_d {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc231)
      %o_ptrs_48 = tt.broadcast %o_ptrs_46 : tensor<128x1xi32> -> tensor<128x64xi32> loc(#loc232)
      %o_ptrs_49 = tt.broadcast %o_ptrs_47 : tensor<1x64xi32> -> tensor<128x64xi32> loc(#loc232)
      %o_ptrs_50 = arith.addi %o_ptrs_48, %o_ptrs_49 : tensor<128x64xi32> loc(#loc232)
      %o_ptrs_51 = tt.splat %o_ptrs_43 : !tt.ptr<bf16> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc233)
      %o_ptrs_52 = tt.addptr %o_ptrs_51, %o_ptrs_50 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi32> loc(#loc233)
      %q = tt.splat %Q_block_ptr_27 : !tt.ptr<bf16> -> tensor<128x64x!tt.ptr<bf16>> loc(#loc234)
      %q_53 = tt.splat %Q_block_ptr_30 : i64 -> tensor<128xi64> loc(#loc234)
      %q_54 = arith.extsi %offs_m : tensor<128xi32> to tensor<128xi64> loc(#loc234)
      %q_55 = arith.addi %q_53, %q_54 : tensor<128xi64> loc(#loc234)
      %q_56 = tt.expand_dims %q_55 {axis = 1 : i32} : tensor<128xi64> -> tensor<128x1xi64> loc(#loc234)
      %q_57 = tt.splat %Q_block_ptr_29 : i64 -> tensor<128x1xi64> loc(#loc234)
      %q_58 = arith.muli %q_56, %q_57 : tensor<128x1xi64> loc(#loc234)
      %q_59 = tt.broadcast %q_58 : tensor<128x1xi64> -> tensor<128x64xi64> loc(#loc234)
      %q_60 = arith.extsi %offs_d : tensor<64xi32> to tensor<64xi64> loc(#loc234)
      %q_61 = tt.expand_dims %q_60 {axis = 0 : i32} : tensor<64xi64> -> tensor<1x64xi64> loc(#loc234)
      %q_62 = tt.broadcast %q_61 : tensor<1x64xi64> -> tensor<128x64xi64> loc(#loc234)
      %q_63 = arith.addi %q_59, %q_62 : tensor<128x64xi64> loc(#loc234)
      %q_64 = tt.addptr %q, %q_63 : tensor<128x64x!tt.ptr<bf16>>, tensor<128x64xi64> loc(#loc234)
      %q_65 = arith.cmpi sge, %q_56, %cst_8 : tensor<128x1xi64> loc(#loc234)
      %q_66 = tt.splat %Q_block_ptr_28 : i64 -> tensor<128x1xi64> loc(#loc234)
      %q_67 = arith.cmpi slt, %q_56, %q_66 : tensor<128x1xi64> loc(#loc234)
      %q_68 = arith.andi %q_65, %q_67 : tensor<128x1xi1> loc(#loc234)
      %q_69 = tt.broadcast %q_68 : tensor<128x1xi1> -> tensor<128x64xi1> loc(#loc234)
      %q_70 = arith.cmpi sge, %q_61, %cst_7 : tensor<1x64xi64> loc(#loc234)
      %q_71 = arith.cmpi slt, %q_61, %cst_6 : tensor<1x64xi64> loc(#loc234)
      %q_72 = arith.andi %q_70, %q_71 : tensor<1x64xi1> loc(#loc234)
      %q_73 = tt.broadcast %q_72 : tensor<1x64xi1> -> tensor<128x64xi1> loc(#loc234)
      %q_74 = arith.andi %q_69, %q_73 : tensor<128x64xi1> loc(#loc234)
      %q_75 = tt.load %q_64, %q_74, %cst_5 : tensor<128x64x!tt.ptr<bf16>> loc(#loc234)
      %k = tt.splat %K_block_ptr_36 : !tt.ptr<bf16> -> tensor<64x32x!tt.ptr<bf16>> loc(#loc240)
      %k_76 = tt.expand_dims %q_60 {axis = 1 : i32} : tensor<64xi64> -> tensor<64x1xi64> loc(#loc240)
      %k_77 = tt.broadcast %k_76 : tensor<64x1xi64> -> tensor<64x32xi64> loc(#loc240)
      %k_78 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc240)
      %k_79 = arith.extsi %k_78 : tensor<32xi32> to tensor<32xi64> loc(#loc240)
      %k_80 = tt.splat %K_block_ptr_37 : i64 -> tensor<1x32xi64> loc(#loc240)
      %k_81 = arith.cmpi sge, %k_76, %cst_4 : tensor<64x1xi64> loc(#loc240)
      %k_82 = arith.cmpi slt, %k_76, %cst_3 : tensor<64x1xi64> loc(#loc240)
      %k_83 = arith.andi %k_81, %k_82 : tensor<64x1xi1> loc(#loc240)
      %k_84 = tt.broadcast %k_83 : tensor<64x1xi1> -> tensor<64x32xi1> loc(#loc240)
      %k_85 = tt.splat %V_block_ptr_33 : i64 -> tensor<1x32xi64> loc(#loc240)
      %p = tt.splat %qk_scale : f32 -> tensor<128x32xf32> loc(#loc241)
      %v = tt.splat %V_block_ptr_32 : !tt.ptr<bf16> -> tensor<32x64x!tt.ptr<bf16>> loc(#loc242)
      %v_86 = tt.splat %V_block_ptr_34 : i64 -> tensor<32x1xi64> loc(#loc242)
      %v_87 = tt.broadcast %q_61 : tensor<1x64xi64> -> tensor<32x64xi64> loc(#loc242)
      %v_88 = tt.splat %V_block_ptr_33 : i64 -> tensor<32x1xi64> loc(#loc242)
      %v_89 = tt.broadcast %q_72 : tensor<1x64xi1> -> tensor<32x64xi1> loc(#loc242)
      %V_block_ptr_90:3 = scf.for %V_block_ptr_96 = %c0_i32 to %klen step %c32_i32 iter_args(%arg23 = %cst_10, %K_block_ptr_97 = %c0_i64, %V_block_ptr_98 = %c0_i64) -> (tensor<128x64xf32>, i64, i64)  : i32 {
        %k_99 = tt.splat %K_block_ptr_97 : i64 -> tensor<32xi64> loc(#loc240)
        %k_100 = arith.addi %k_99, %k_79 : tensor<32xi64> loc(#loc240)
        %k_101 = tt.expand_dims %k_100 {axis = 0 : i32} : tensor<32xi64> -> tensor<1x32xi64> loc(#loc240)
        %k_102 = arith.muli %k_101, %k_80 : tensor<1x32xi64> loc(#loc240)
        %k_103 = tt.broadcast %k_102 : tensor<1x32xi64> -> tensor<64x32xi64> loc(#loc240)
        %k_104 = arith.addi %k_77, %k_103 : tensor<64x32xi64> loc(#loc240)
        %k_105 = tt.addptr %k, %k_104 : tensor<64x32x!tt.ptr<bf16>>, tensor<64x32xi64> loc(#loc240)
        %k_106 = arith.cmpi sge, %k_101, %cst_2 : tensor<1x32xi64> loc(#loc240)
        %k_107 = arith.cmpi slt, %k_101, %k_85 : tensor<1x32xi64> loc(#loc240)
        %k_108 = arith.andi %k_106, %k_107 : tensor<1x32xi1> loc(#loc240)
        %k_109 = tt.broadcast %k_108 : tensor<1x32xi1> -> tensor<64x32xi1> loc(#loc240)
        %k_110 = arith.andi %k_84, %k_109 : tensor<64x32xi1> loc(#loc240)
        %k_111 = tt.load %k_105, %k_110, %cst_1 : tensor<64x32x!tt.ptr<bf16>> loc(#loc240)
        %qk = tt.dot %q_75, %k_111, %cst_16 : tensor<128x64xbf16> * tensor<64x32xbf16> -> tensor<128x32xf32> loc(#loc244)
        %p_112 = arith.mulf %qk, %cst_11 : tensor<128x32xf32> loc(#loc252)
        %p_113 = arith.mulf %qk, %cst_12 : tensor<128x32xf32> loc(#loc253)
        %p_114 = arith.mulf %qk, %cst_13 : tensor<128x32xf32> loc(#loc254)
        %p_115 = arith.mulf %p_114, %qk : tensor<128x32xf32> loc(#loc255)
        %p_116 = arith.addf %p_115, %cst_14 : tensor<128x32xf32> loc(#loc256)
        %p_117 = arith.mulf %p_113, %p_116 : tensor<128x32xf32> loc(#loc257)
        %p_118 = arith.mulf %p_117, %cst_15 : tensor<128x32xf32> loc(#loc262)
        %p_119 = arith.subf %cst_16, %p_118 : tensor<128x32xf32> loc(#loc266)
        %p_120 = math.exp %p_119 : tensor<128x32xf32> loc(#loc267)
        %p_121 = arith.addf %p_120, %cst_14 : tensor<128x32xf32> loc(#loc268)
        %p_122 = arith.divf %cst_14, %p_121 : tensor<128x32xf32> loc(#loc269)
        %p_123 = arith.mulf %p_122, %cst_15 : tensor<128x32xf32> loc(#loc264)
        %p_124 = arith.subf %p_123, %cst_14 : tensor<128x32xf32> loc(#loc265)
        %p_125 = arith.addf %p_124, %cst_14 : tensor<128x32xf32> loc(#loc259)
        %p_126 = arith.mulf %p_112, %p_125 : tensor<128x32xf32> loc(#loc260)
        %p_127 = arith.mulf %p_126, %p : tensor<128x32xf32> loc(#loc241)
        %p_128 = arith.truncf %p_127 : tensor<128x32xf32> to tensor<128x32xbf16> loc(#loc246)
        %v_129 = tt.splat %V_block_ptr_98 : i64 -> tensor<32xi64> loc(#loc242)
        %v_130 = arith.addi %v_129, %k_79 : tensor<32xi64> loc(#loc242)
        %v_131 = tt.expand_dims %v_130 {axis = 1 : i32} : tensor<32xi64> -> tensor<32x1xi64> loc(#loc242)
        %v_132 = arith.muli %v_131, %v_86 : tensor<32x1xi64> loc(#loc242)
        %v_133 = tt.broadcast %v_132 : tensor<32x1xi64> -> tensor<32x64xi64> loc(#loc242)
        %v_134 = arith.addi %v_133, %v_87 : tensor<32x64xi64> loc(#loc242)
        %v_135 = tt.addptr %v, %v_134 : tensor<32x64x!tt.ptr<bf16>>, tensor<32x64xi64> loc(#loc242)
        %v_136 = arith.cmpi sge, %v_131, %cst_0 : tensor<32x1xi64> loc(#loc242)
        %v_137 = arith.cmpi slt, %v_131, %v_88 : tensor<32x1xi64> loc(#loc242)
        %v_138 = arith.andi %v_136, %v_137 : tensor<32x1xi1> loc(#loc242)
        %v_139 = tt.broadcast %v_138 : tensor<32x1xi1> -> tensor<32x64xi1> loc(#loc242)
        %v_140 = arith.andi %v_139, %v_89 : tensor<32x64xi1> loc(#loc242)
        %v_141 = tt.load %v_135, %v_140, %cst : tensor<32x64x!tt.ptr<bf16>> loc(#loc242)
        %acc = tt.dot %p_128, %v_141, %arg23 : tensor<128x32xbf16> * tensor<32x64xbf16> -> tensor<128x64xf32> loc(#loc247)
        %V_block_ptr_142 = arith.addi %V_block_ptr_98, %c32_i64 : i64 loc(#loc248)
        %K_block_ptr_143 = arith.addi %K_block_ptr_97, %c32_i64 : i64 loc(#loc249)
        scf.yield %acc, %K_block_ptr_143, %V_block_ptr_142 : tensor<128x64xf32>, i64, i64 loc(#loc250)
      } loc(#loc251)
      %o_mask = tt.splat %qlen_22 : i32 -> tensor<128x1xi32> loc(#loc237)
      %o_mask_91 = arith.cmpi slt, %o_ptrs_44, %o_mask : tensor<128x1xi32> loc(#loc237)
      %o_mask_92 = arith.cmpi slt, %o_ptrs_47, %cst_9 : tensor<1x64xi32> loc(#loc238)
      %o_mask_93 = tt.broadcast %o_mask_91 : tensor<128x1xi1> -> tensor<128x64xi1> loc(#loc239)
      %o_mask_94 = tt.broadcast %o_mask_92 : tensor<1x64xi1> -> tensor<128x64xi1> loc(#loc239)
      %o_mask_95 = arith.andi %o_mask_93, %o_mask_94 : tensor<128x64xi1> loc(#loc239)
      %10 = arith.truncf %V_block_ptr_90#0 : tensor<128x64xf32> to tensor<128x64xbf16> loc(#loc192)
      tt.store %o_ptrs_52, %10, %o_mask_95 : tensor<128x64x!tt.ptr<bf16>> loc(#loc193)
    } loc(#loc150)
    tt.return loc(#loc106)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":578:8)
#loc3 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":504:27)
#loc4 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":504:14)
#loc5 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":505:27)
#loc6 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":505:14)
#loc7 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":506:14)
#loc8 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":507:27)
#loc9 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":507:14)
#loc10 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":508:27)
#loc11 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":508:14)
#loc12 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":509:14)
#loc13 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":510:27)
#loc14 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":510:14)
#loc15 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":511:27)
#loc16 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":511:14)
#loc17 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":512:14)
#loc18 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":513:27)
#loc19 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":513:14)
#loc20 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":514:27)
#loc21 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":514:14)
#loc22 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":515:14)
#loc23 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":517:27)
#loc24 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":521:26)
#loc25 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":528:21)
#loc26 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":530:24)
#loc27 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":301:24)
#loc28 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":301:36)
#loc29 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":302:40)
#loc30 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":304:34)
#loc31 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":304:22)
#loc32 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":305:42)
#loc33 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":305:20)
#loc34 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":307:19)
#loc35 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":308:28)
#loc36 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":322:42)
#loc37 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":322:30)
#loc38 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":323:48)
#loc39 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":323:28)
#loc40 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":324:23)
#loc41 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":329:17)
#loc42 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":329:27)
#loc43 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":329:7)
#loc44 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":330:40)
#loc45 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":330:26)
#loc46 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":342:25)
#loc47 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":342:46)
#loc48 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":342:36)
#loc49 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":347:16)
#loc50 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":353:25)
#loc51 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":353:47)
#loc52 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":353:37)
#loc53 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":358:16)
#loc54 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":361:25)
#loc55 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":361:47)
#loc56 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":361:37)
#loc57 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":366:16)
#loc58 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":390:50)
#loc59 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":390:37)
#loc60 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":392:30)
#loc61 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":396:35)
#loc62 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":396:14)
#loc63 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":397:24)
#loc64 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":397:14)
#loc65 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":398:22)
#loc66 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":398:33)
#loc67 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":398:52)
#loc68 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":398:45)
#loc69 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":398:15)
#loc70 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":412:24)
#loc71 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":131:24)
#loc72 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":445:12)
#loc73 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":152:13)
#loc74 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":163:24)
#loc75 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":119:33)
#loc76 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":134:23)
#loc77 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":107:15)
#loc78 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":147:26)
#loc79 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":107:58)
#loc80 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":107:80)
#loc81 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":107:84)
#loc82 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":107:69)
#loc83 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":107:63)
#loc84 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":67:30)
#loc85 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":86:16)
#loc86 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":107:43)
#loc87 = loc("/workspace/projects/triton-openai/python/triton/language/standard.py":48:30)
#loc88 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":67:26)
#loc89 = loc("/workspace/projects/triton-openai/python/triton/language/standard.py":48:29)
#loc90 = loc("/workspace/projects/triton-openai/python/triton/language/standard.py":48:20)
#loc91 = loc("/workspace/projects/triton-openai/python/triton/language/standard.py":48:16)
#loc92 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":67:15)
#loc93 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":67:35)
#loc94 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":107:26)
#loc95 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/math.py":107:22)
#loc96 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":153:17)
#loc97 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":166:27)
#loc98 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":169:50)
#loc99 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":170:50)
#loc100 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":168:8)
#loc101 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":449:36)
#loc102 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":449:63)
#loc103 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":449:45)
#loc104 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":453:32)
#loc105 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":453:25)
#loc106 = loc("/workspace/projects/tritonbench/tritonbench/operators/gdpa/gdpa.py":532:4)
#loc129 = loc(callsite(#loc1 at #loc2))
#loc130 = loc("off_hz"(#loc23))
#loc131 = loc("off_z"(#loc24))
#loc132 = loc("off_h"(#loc25))
#loc133 = loc("pid"(#loc26))
#loc134 = loc("q_offset"(#loc27))
#loc135 = loc("q_offset"(#loc28))
#loc136 = loc("kv_offset"(#loc29))
#loc137 = loc("begin_q"(#loc30))
#loc138 = loc("begin_q"(#loc31))
#loc139 = loc("end_q"(#loc32))
#loc140 = loc("end_q"(#loc33))
#loc141 = loc("qlen"(#loc34))
#loc142 = loc("qlen"(#loc35))
#loc143 = loc("begin_k"(#loc36))
#loc144 = loc("begin_k"(#loc37))
#loc145 = loc("end_k"(#loc38))
#loc146 = loc("end_k"(#loc39))
#loc147 = loc("klen"(#loc40))
#loc148 = loc(callsite(#loc41 at #loc2))
#loc149 = loc(callsite(#loc42 at #loc2))
#loc150 = loc(callsite(#loc43 at #loc2))
#loc151 = loc("begin_o"(#loc44))
#loc152 = loc("begin_o"(#loc45))
#loc153 = loc("Q_block_ptr"(#loc46))
#loc154 = loc("Q_block_ptr"(#loc47))
#loc155 = loc("Q_block_ptr"(#loc48))
#loc156 = loc("Q_block_ptr"(#loc49))
#loc157 = loc("V_block_ptr"(#loc50))
#loc158 = loc("V_block_ptr"(#loc51))
#loc159 = loc("V_block_ptr"(#loc52))
#loc160 = loc("V_block_ptr"(#loc53))
#loc161 = loc("K_block_ptr"(#loc54))
#loc162 = loc("K_block_ptr"(#loc55))
#loc163 = loc("K_block_ptr"(#loc56))
#loc164 = loc("K_block_ptr"(#loc57))
#loc165 = loc("offs_m"(#loc58))
#loc166 = loc("offs_m"(#loc59))
#loc167 = loc("offs_d"(#loc60))
#loc168 = loc("o_ptrs"(#loc61))
#loc169 = loc("o_ptrs"(#loc62))
#loc170 = loc("o_ptrs"(#loc63))
#loc171 = loc("o_ptrs"(#loc64))
#loc172 = loc("o_ptrs"(#loc65))
#loc173 = loc("o_ptrs"(#loc66))
#loc174 = loc("o_ptrs"(#loc67))
#loc175 = loc("o_ptrs"(#loc68))
#loc176 = loc("o_ptrs"(#loc69))
#loc177 = loc("q"(#loc70))
#loc178 = loc("k"(#loc71))
#loc179 = loc("acc"(#loc72))
#loc180 = loc("p"(#loc73))
#loc181 = loc("v"(#loc74))
#loc182 = loc("acc"(#loc75))
#loc183 = loc("qk"(#loc76))
#loc184 = loc("p"(#loc78))
#loc185 = loc("p"(#loc96))
#loc186 = loc("acc"(#loc97))
#loc187 = loc("V_block_ptr"(#loc98))
#loc188 = loc("K_block_ptr"(#loc99))
#loc189 = loc("o_mask"(#loc101))
#loc190 = loc("o_mask"(#loc102))
#loc191 = loc("o_mask"(#loc103))
#loc192 = loc(callsite(#loc104 at #loc2))
#loc193 = loc(callsite(#loc105 at #loc2))
#loc194 = loc(callsite(#loc134 at #loc2))
#loc195 = loc(callsite(#loc135 at #loc2))
#loc196 = loc(callsite(#loc136 at #loc2))
#loc197 = loc(callsite(#loc137 at #loc2))
#loc198 = loc(callsite(#loc138 at #loc2))
#loc199 = loc(callsite(#loc139 at #loc2))
#loc200 = loc(callsite(#loc140 at #loc2))
#loc201 = loc(callsite(#loc141 at #loc2))
#loc202 = loc(callsite(#loc142 at #loc2))
#loc203 = loc(callsite(#loc143 at #loc2))
#loc204 = loc(callsite(#loc144 at #loc2))
#loc205 = loc(callsite(#loc145 at #loc2))
#loc206 = loc(callsite(#loc146 at #loc2))
#loc207 = loc(callsite(#loc147 at #loc2))
#loc208 = loc(callsite(#loc151 at #loc2))
#loc209 = loc(callsite(#loc152 at #loc2))
#loc210 = loc(callsite(#loc153 at #loc2))
#loc211 = loc(callsite(#loc154 at #loc2))
#loc212 = loc(callsite(#loc155 at #loc2))
#loc213 = loc(callsite(#loc156 at #loc2))
#loc214 = loc(callsite(#loc157 at #loc2))
#loc215 = loc(callsite(#loc158 at #loc2))
#loc216 = loc(callsite(#loc159 at #loc2))
#loc217 = loc(callsite(#loc160 at #loc2))
#loc218 = loc(callsite(#loc161 at #loc2))
#loc219 = loc(callsite(#loc162 at #loc2))
#loc220 = loc(callsite(#loc163 at #loc2))
#loc221 = loc(callsite(#loc164 at #loc2))
#loc222 = loc(callsite(#loc165 at #loc2))
#loc223 = loc(callsite(#loc166 at #loc2))
#loc224 = loc(callsite(#loc167 at #loc2))
#loc225 = loc(callsite(#loc168 at #loc2))
#loc226 = loc(callsite(#loc169 at #loc2))
#loc227 = loc(callsite(#loc170 at #loc2))
#loc228 = loc(callsite(#loc171 at #loc2))
#loc229 = loc(callsite(#loc172 at #loc2))
#loc230 = loc(callsite(#loc173 at #loc2))
#loc231 = loc(callsite(#loc174 at #loc2))
#loc232 = loc(callsite(#loc175 at #loc2))
#loc233 = loc(callsite(#loc176 at #loc2))
#loc234 = loc(callsite(#loc177 at #loc2))
#loc235 = loc(callsite(#loc179 at #loc2))
#loc236 = loc("K_block_ptr"(#loc182))
#loc237 = loc(callsite(#loc189 at #loc2))
#loc238 = loc(callsite(#loc190 at #loc2))
#loc239 = loc(callsite(#loc191 at #loc2))
#loc240 = loc(callsite(#loc178 at #loc235))
#loc241 = loc(callsite(#loc180 at #loc235))
#loc242 = loc(callsite(#loc181 at #loc235))
#loc243 = loc("V_block_ptr"(#loc236))
#loc244 = loc(callsite(#loc183 at #loc235))
#loc245 = loc(callsite(#loc184 at #loc235))
#loc246 = loc(callsite(#loc185 at #loc235))
#loc247 = loc(callsite(#loc186 at #loc235))
#loc248 = loc(callsite(#loc187 at #loc235))
#loc249 = loc(callsite(#loc188 at #loc235))
#loc250 = loc(callsite(#loc100 at #loc235))
#loc251 = loc(callsite(#loc243 at #loc235))
#loc252 = loc(callsite(#loc77 at #loc245))
#loc253 = loc(callsite(#loc79 at #loc245))
#loc254 = loc(callsite(#loc80 at #loc245))
#loc255 = loc(callsite(#loc81 at #loc245))
#loc256 = loc(callsite(#loc82 at #loc245))
#loc257 = loc(callsite(#loc83 at #loc245))
#loc258 = loc(callsite(#loc86 at #loc245))
#loc259 = loc(callsite(#loc94 at #loc245))
#loc260 = loc(callsite(#loc95 at #loc245))
#loc261 = loc(callsite(#loc85 at #loc258))
#loc262 = loc(callsite(#loc84 at #loc261))
#loc263 = loc(callsite(#loc88 at #loc261))
#loc264 = loc(callsite(#loc92 at #loc261))
#loc265 = loc(callsite(#loc93 at #loc261))
#loc266 = loc(callsite(#loc87 at #loc263))
#loc267 = loc(callsite(#loc89 at #loc263))
#loc268 = loc(callsite(#loc90 at #loc263))
#loc269 = loc(callsite(#loc91 at #loc263))
